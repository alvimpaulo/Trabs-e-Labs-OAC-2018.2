DEPTH = 16384;
WIDTH = 32;
ADDRESS_RADIX = HEX;
DATA_RADIX = HEX;
CONTENT
BEGIN
00000000 : 00003f97;   % 63: <9> la t6,exceptionHandling		# carrega em t0 o endere�o base das rotinas do sistema ECALL %
00000001 : b68f8f93;   % 63:  %
00000002 : 01f29073;   % 63: <10> csrrw zero,5,t6 	# seta utvec (reg 5) para o endere�o t0 %
00000003 : 00106073;   % 63: <11> csrrsi zero,0,1 	# seta o bit de habilita��o de interrup��o em ustatus (reg 0) %
00000004 : 0fccb217;   % 63: <12> la tp,UTVEC		# caso nao tenha csrrw apenas salva o endereco %label em UTVEC %
00000005 : 21c20213;   % 63:  %
00000006 : 01f22023;   % 63: <13> sw t6,0(tp) %
00000007 : 00000297;   % 64: la t0 Main %
00000008 : 01828293;   % 64:  %
00000009 : 000280e7;   % 65: 	jalr ra t0 0 %
0000000a : 00000297;   % 66: FimDoPrograma: la t0 FimDoPrograma %
0000000b : 00028293;   % 66:  %
0000000c : 00028067;   % 67: 	jalr x0 t0 0 %
0000000d : ff810113;   % 69: 	addi	sp sp -8 %
0000000e : 00112023;   % 70: 	sw ra 0(sp) %
0000000f : 00612223;   % 71: 	sw t1 4(sp) %
00000010 : 00001297;   % 72: 	la t0 InitFases %
00000011 : 62028293;   % 72:  %
00000012 : 000280e7;   % 73: 	jalr ra t0 0 %
00000013 : 00012303;   % 74: 	lw t1 0(sp) %
00000014 : 00410113;   % 75: 	addi sp sp 4 %
00000015 : 00200313;   % 77:     li t1 2 %
00000016 : 0fc10397;   % 78:     la t2 vectorImagensMenu %
00000017 : 04838393;   % 78:  %
00000018 : 0fc28e17;   % 80:     la t3 menuSair %
00000019 : 528e0e13;   % 80:  %
0000001a : 01c3a023;   % 81:     sw t3 0(t2) %
0000001b : 0fc22e17;   % 83:     la t3 menuCreditos %
0000001c : 044e0e13;   % 83:  %
0000001d : 01c3a223;   % 84:     sw t3 4(t2) %
0000001e : 0fc25e17;   % 86:     la t3 menuJogar %
0000001f : 2a4e0e13;   % 86:  %
00000020 : 01c3a423;   % 87:     sw t3 8(t2) %
00000021 : 0fc10397;   % 90:     la t2 vectorFuncoesMenu %
00000022 : 02838393;   % 90:  %
00000023 : 00000e17;   % 92:     la t3 fim_while_loop_menu %
00000024 : 2e0e0e13;   % 92:  %
00000025 : 01c3a023;   % 93:     sw t3 0(t2) %
00000026 : 00000e17;   % 95:     la t3 fim_while_loop_menu %
00000027 : 2d4e0e13;   % 95:  %
00000028 : 01c3a223;   % 96:     sw t3 4(t2) %
00000029 : 00000e17;   % 98:     la t3 Jogo %
0000002a : 2d4e0e13;   % 98:  %
0000002b : 01c3a423;   % 99:     sw t3 8(t2) %
0000002c : ffc10113;   % 101:     		addi sp sp -4 %
0000002d : 00612023;   % 102:     		sw t1 0(sp) %
0000002e : 00001297;   % 103:         la t0 LeTeclaDoTeclado %
0000002f : 76428293;   % 103:  %
00000030 : 000280e7;   % 104: 	jalr ra t0 0 %
00000031 : 00012303;   % 105:     		lw t1 0(sp) %
00000032 : 00410113;   % 106:         addi sp sp 4 %
00000033 : 07700293;   % 107:         li t0 'w' %
00000034 : 0e551c63;   % 108:         if_tecla_w_foi_apertada_MovePersonagem: bne a0 t0 else_tecla_w_foi_apertada_MovePersonagem %
00000035 : 00130313;   % 109:             addi t1 t1 1 %
00000036 : 00300e13;   % 110:             li t3 3 %
00000037 : 03d00513;   % 111: <3> li a0,61 %
00000038 : 15e00593;   % 111: <4> li a1,350 %
00000039 : 07600613;   % 111: <5> li a2,118 %
0000003a : 03c00693;   % 111: <6> li a3,60 %
0000003b : 08300893;   % 111: <7> li a7,131 %
0000003c : 10008237;   % 111: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
0000003d : 00020213;   % 111:  %
0000003e : 00419663;   % 111: <4> bne gp,tp,NotECALL_M2 %
0000003f : 00000073;   % 111: <19> ecall %
00000040 : 0280006f;   % 111: <20> j FimECALL_M2 %
00000041 : 0fccb217;   % 111: <21> NotECALL_M2: la tp,UEPC %
00000042 : 12420213;   % 111:  %
00000043 : 00000f97;   % 111: <22> la t6,FimECALL_M2	# endereco ap�s o ecall %
00000044 : 01cf8f93;   % 111:  %
00000045 : 01f22023;   % 111: <23> sw t6,0(tp)	# salva UEPC %
00000046 : 00422203;   % 111: <24> lw tp,4(tp)	# UTVEC %
00000047 : 00000013;   % 111: <25> nop %
00000048 : 00000013;   % 111: <26> nop %
00000049 : 00020067;   % 111: <27> jalr zero,tp,0	# chama UTVEC %
0000004a : 00000013;   % 111: <28> FimECALL_M2: nop %
0000004b : 08400893;   % 111: <9> li a7, 132 %
0000004c : 00000513;   % 111: <10> li a0,0 %
0000004d : 10008237;   % 111: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
0000004e : 00020213;   % 111:  %
0000004f : 00419663;   % 111: <4> bne gp,tp,NotECALL_M4 %
00000050 : 00000073;   % 111: <19> ecall %
00000051 : 0280006f;   % 111: <20> j FimECALL_M4 %
00000052 : 0fccb217;   % 111: <21> NotECALL_M4: la tp,UEPC %
00000053 : 0e020213;   % 111:  %
00000054 : 00000f97;   % 111: <22> la t6,FimECALL_M4	# endereco ap�s o ecall %
00000055 : 01cf8f93;   % 111:  %
00000056 : 01f22023;   % 111: <23> sw t6,0(tp)	# salva UEPC %
00000057 : 00422203;   % 111: <24> lw tp,4(tp)	# UTVEC %
00000058 : 00000013;   % 111: <25> nop %
00000059 : 00000013;   % 111: <26> nop %
0000005a : 00020067;   % 111: <27> jalr zero,tp,0	# chama UTVEC %
0000005b : 00000013;   % 111: <28> FimECALL_M4: nop %
0000005c : 01c31463;   % 112:             if_passou_do_limite_superior:bne t1 t3 else_passou_do_limite_superior %
0000005d : ffd30313;   % 113:                 addi t1 t1 -3 %
0000005e : ff004537;   % 116:                 li a0 0xff004530 %
0000005f : 53050513;   % 116:  %
00000060 : 0fc10597;   % 118:                 la a1 vectorImagensMenu %
00000061 : f2058593;   % 118:  %
00000062 : 00231393;   % 119:   	            slli t2 t1 2 %
00000063 : 007585b3;   % 120:     	          add a1 a1 t2 %
00000064 : 0005a583;   % 121:       	        lw a1 0(a1) %
00000065 : 00858593;   % 122: 	              addi a1 a1 8 %
00000066 : 06400613;   % 124:                 li a2 100 %
00000067 : 08100693;   % 126:                 li a3 129 %
00000068 : ffc10113;   % 129:                 addi sp sp -4 %
00000069 : 00612023;   % 130:                 sw t1 0(sp) %
0000006a : 00001297;   % 131:                 la t0 printSpriteWord %
0000006b : 69c28293;   % 131:  %
0000006c : 000280e7;   % 132: 	jalr ra t0 0 %
0000006d : 00012303;   % 133:                 lw t1 0(sp) %
0000006e : 00410113;   % 134:                 addi sp sp 4 %
0000006f : 00000297;   % 136:             la t0 while_loop_menu %
00000070 : ef428293;   % 136:  %
00000071 : 00028067;   % 137: 	jalr x0 t0 0 %
00000072 : 07300293;   % 139:             li t0 's' %
00000073 : 0e551c63;   % 140:             if_tecla_s_foi_apertada_MovePersonagem: bne a0 t0 else_tecla_s_foi_apertada_MovePersonagem %
00000074 : fff30313;   % 141:                 addi t1 t1 -1 %
00000075 : fff00e13;   % 142:                 li t3 -1 %
00000076 : 03d00513;   % 143: <3> li a0,61 %
00000077 : 15e00593;   % 143: <4> li a1,350 %
00000078 : 07600613;   % 143: <5> li a2,118 %
00000079 : 03c00693;   % 143: <6> li a3,60 %
0000007a : 08300893;   % 143: <7> li a7,131 %
0000007b : 10008237;   % 143: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
0000007c : 00020213;   % 143:  %
0000007d : 00419663;   % 143: <4> bne gp,tp,NotECALL_M7 %
0000007e : 00000073;   % 143: <19> ecall %
0000007f : 0280006f;   % 143: <20> j FimECALL_M7 %
00000080 : 0fccb217;   % 143: <21> NotECALL_M7: la tp,UEPC %
00000081 : 02820213;   % 143:  %
00000082 : 00000f97;   % 143: <22> la t6,FimECALL_M7	# endereco ap�s o ecall %
00000083 : 01cf8f93;   % 143:  %
00000084 : 01f22023;   % 143: <23> sw t6,0(tp)	# salva UEPC %
00000085 : 00422203;   % 143: <24> lw tp,4(tp)	# UTVEC %
00000086 : 00000013;   % 143: <25> nop %
00000087 : 00000013;   % 143: <26> nop %
00000088 : 00020067;   % 143: <27> jalr zero,tp,0	# chama UTVEC %
00000089 : 00000013;   % 143: <28> FimECALL_M7: nop %
0000008a : 08400893;   % 143: <9> li a7, 132 %
0000008b : 00000513;   % 143: <10> li a0,0 %
0000008c : 10008237;   % 143: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
0000008d : 00020213;   % 143:  %
0000008e : 00419663;   % 143: <4> bne gp,tp,NotECALL_M9 %
0000008f : 00000073;   % 143: <19> ecall %
00000090 : 0280006f;   % 143: <20> j FimECALL_M9 %
00000091 : 0fccb217;   % 143: <21> NotECALL_M9: la tp,UEPC %
00000092 : fe420213;   % 143:  %
00000093 : 00000f97;   % 143: <22> la t6,FimECALL_M9	# endereco ap�s o ecall %
00000094 : 01cf8f93;   % 143:  %
00000095 : 01f22023;   % 143: <23> sw t6,0(tp)	# salva UEPC %
00000096 : 00422203;   % 143: <24> lw tp,4(tp)	# UTVEC %
00000097 : 00000013;   % 143: <25> nop %
00000098 : 00000013;   % 143: <26> nop %
00000099 : 00020067;   % 143: <27> jalr zero,tp,0	# chama UTVEC %
0000009a : 00000013;   % 143: <28> FimECALL_M9: nop %
0000009b : 01c31463;   % 144:                 if_passou_do_limite_inferior: bne t1 t3 else_passou_do_limite_inferior %
0000009c : 00330313;   % 145:                     addi t1 t1 3 %
0000009d : ff004537;   % 148:                 li a0 0xff004530 %
0000009e : 53050513;   % 148:  %
0000009f : 0fc10597;   % 150:                 la a1 vectorImagensMenu %
000000a0 : e2458593;   % 150:  %
000000a1 : 00231393;   % 151:   	            slli t2 t1 2 %
000000a2 : 007585b3;   % 152:     	          add a1 a1 t2 %
000000a3 : 0005a583;   % 153:       	        lw a1 0(a1) %
000000a4 : 00858593;   % 154: 	              addi a1 a1 8 %
000000a5 : 06400613;   % 156:                 li a2 100 %
000000a6 : 08100693;   % 158:                 li a3 129 %
000000a7 : ffc10113;   % 160:                 addi sp sp -4 %
000000a8 : 00612023;   % 161:                 sw t1 0(sp) %
000000a9 : 00001297;   % 162:                 la t0 printSpriteWord %
000000aa : 5a028293;   % 162:  %
000000ab : 000280e7;   % 163: 	jalr ra t0 0 %
000000ac : 00012303;   % 164:                 lw t1 0(sp) %
000000ad : 00410113;   % 165:                 addi sp sp 4 %
000000ae : 00000297;   % 167:                 la t0 while_loop_menu %
000000af : df828293;   % 167:  %
000000b0 : 00028067;   % 168: 	jalr x0 t0 0 %
000000b1 : 02000293;   % 170:                 li t0 ' ' %
000000b2 : 04551a63;   % 171:                 if_tecla_sp_foi_apertada_MovePersonagem: bne a0 t0 else_tecla_sp_foi_apertada_MovePersonagem %
000000b3 : ffc10113;   % 173:                     addi sp sp -4 %
000000b4 : 00612023;   % 174:                     sw t1 0(sp) %
000000b5 : 0fc10397;   % 176:                     la t2 vectorFuncoesMenu %
000000b6 : dd838393;   % 176:  %
000000b7 : 00231e13;   % 177:                     slli t3 t1 2 %
000000b8 : 01c383b3;   % 178:                     add t2 t2 t3 %
000000b9 : 0003a383;   % 179:                     lw t2 0(t2) %
000000ba : ffc10113;   % 181:                     addi sp sp -4 %
000000bb : 00612023;   % 182:                     sw t1 0(sp) %
000000bc : 000380e7;   % 183:                     jalr ra t2 00 %
000000bd : 00012303;   % 184:                     lw t1 0(sp) %
000000be : 00410113;   % 185:                     addi sp sp 4 %
000000bf : 00012303;   % 187:                     lw t1 0(sp) %
000000c0 : 00410113;   % 188:                     addi sp sp 4 %
000000c1 : 00000297;   % 190:                     la t0 reset_MenuDoJogo %
000000c2 : d5028293;   % 190:  %
000000c3 : 00028067;   % 191: 	jalr x0 t0 0 %
000000c4 : 00000297;   % 192:                     la t0 while_loop_menu %
000000c5 : da028293;   % 192:  %
000000c6 : 00028067;   % 193: 	jalr x0 t0 0 %
000000c7 : ff004537;   % 195:                     li a0 0xff004530 %
000000c8 : 53050513;   % 195:  %
000000c9 : 0fc10597;   % 197:                     la a1 vectorImagensMenu %
000000ca : d7c58593;   % 197:  %
000000cb : 00231393;   % 198:                     slli t2 t1 2 %
000000cc : 007585b3;   % 199:                     add a1 a1 t2 %
000000cd : 0005a583;   % 200:                     lw a1 0(a1) %
000000ce : 00858593;   % 201:                     addi a1 a1 8 %
000000cf : 06400613;   % 203:                     li a2 100 %
000000d0 : 08100693;   % 205:                     li a3 129 %
000000d1 : ffc10113;   % 207:                     addi sp sp -4 %
000000d2 : 00612023;   % 208:                     sw t1 0(sp) %
000000d3 : 00001297;   % 209:                     la t0 printSpriteWord %
000000d4 : 4f828293;   % 209:  %
000000d5 : 000280e7;   % 210: 	jalr ra t0 0 %
000000d6 : 00012303;   % 211:                     lw t1 0(sp) %
000000d7 : 00410113;   % 212:                     addi sp sp 4 %
000000d8 : 00000297;   % 214: 	  la t0 while_loop_menu %
000000d9 : d5028293;   % 214:  %
000000da : 00028067;   % 215: 	jalr x0 t0 0 %
000000db : 00012083;   % 218: 		lw ra 0(sp) %
000000dc : 00410113;   % 219: 		addi	sp sp 4 %
000000dd : 00008067;   % 220: FimMain: jalr x0 ra 0 %
000000de : 00000013;   % 222: Jogo: nop %
000000df : ffc10113;   % 223: 	addi sp sp -4 %
000000e0 : 00112023;   % 224: 	sw ra 0(sp) %
000000e1 : 00000413;   % 225: 	li s0 0 # estado inicial %
000000e2 : 00000a13;   % 226: 	li s4 0 %
000000e3 : 0fccbc97;   % 227: 	la s9 vectorFases %
000000e4 : c30c8c93;   % 227:  %
000000e5 : 00898993;   % 228: 	addi s3 s3 8 # s3 = mapa inicial %
000000e6 : 08200893;   % 229: <3> li a7, 130                          # tempo do sistema, salvo em a0 %
000000e7 : 10008237;   % 229: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
000000e8 : 00020213;   % 229:  %
000000e9 : 00419663;   % 229: <4> bne gp,tp,NotECALL_M12 %
000000ea : 00000073;   % 229: <19> ecall %
000000eb : 0280006f;   % 229: <20> j FimECALL_M12 %
000000ec : 0fccb217;   % 229: <21> NotECALL_M12: la tp,UEPC %
000000ed : e7820213;   % 229:  %
000000ee : 00000f97;   % 229: <22> la t6,FimECALL_M12	# endereco ap�s o ecall %
000000ef : 01cf8f93;   % 229:  %
000000f0 : 01f22023;   % 229: <23> sw t6,0(tp)	# salva UEPC %
000000f1 : 00422203;   % 229: <24> lw tp,4(tp)	# UTVEC %
000000f2 : 00000013;   % 229: <25> nop %
000000f3 : 00000013;   % 229: <26> nop %
000000f4 : 00020067;   % 229: <27> jalr zero,tp,0	# chama UTVEC %
000000f5 : 00000013;   % 229: <28> FimECALL_M12: nop %
000000f6 : 0fccb297;   % 229: <5> la t0, TEMPO_SIST                   # salva em TEMP_SIST %
000000f7 : e3028293;   % 229:  %
000000f8 : 00a2a023;   % 229: <6> sw a0, 0(t0) %
000000f9 : 00125db7;   % 229: <7> li s11, 1200000 %
000000fa : f80d8d93;   % 229:  %
000000fb : 00300293;   % 230: <2> li t0, 3 %
000000fc : 0fccb317;   % 230: <3> la t1, vidas %
000000fd : e3430313;   % 230:  %
000000fe : 00532023;   % 230: <4> sw t0, 0(t1)		# Salvando qtd de vidas na MEM %
000000ff : 01400713;   % 231: 	li a4 20 # argumentos de inicialização dos prsonagens %
00000100 : 07800793;   % 232: 	li a5 120 # argumentos de inicialização dos prsonagens %
00000101 : 7d000293;   % 233: <2> li t0, 2000 %
00000102 : 0fccb317;   % 233: <3> la t1, pontos %
00000103 : e0430313;   % 233:  %
00000104 : 00532023;   % 233: <4> sw t0, 0(t1)            # Salvando o valor inicial de pontos %
00000105 : 01900bb3;   % 236: 		mv s7 s9 %
00000106 : 00000413;   % 237: 		li s0 0 # estado inicial %
00000107 : 00000a13;   % 238: 		li s4 0 %
00000108 : 020ba983;   % 239: 		lw s3 32(s7) # carrega o mapa da fase %
00000109 : 00898993;   % 240: 		addi s3 s3 8 # s3 = mapa inicial %
0000010a : ff000537;   % 243: 		li a0 0xff000000 %
0000010b : 00050513;   % 243:  %
0000010c : 013005b3;   % 244: 		mv a1 s3 %
0000010d : 14000613;   % 245: 		li a2 320 %
0000010e : 0e000693;   % 246: 		li a3 224 %
0000010f : 00001297;   % 247: 		la t0 printSprite %
00000110 : 1b028293;   % 247:  %
00000111 : 000280e7;   % 248: 	jalr ra t0 0 %
00000112 : 0fc10e97;   % 252: 		la t4 funcoesObjetosDoJogo  %
00000113 : bc0e8e93;   % 252:  %
00000114 : 02cb8393;   % 253: 		addi t2 s7 44 %
00000115 : 010b8313;   % 254: 		addi t1 s7 16 %
00000116 : 00000d13;   % 255: 		li s10 0 %
00000117 : 02730c63;   % 256: 		loop_descobre_funcoes_do_jogo: beq t1 t2 end_loop_descobre_funcoes_do_jogo %
00000118 : 00032e03;   % 257: 			lw t3 0(t1) %
00000119 : 00430313;   % 258: 			addi t1 t1 4 %
0000011a : fe0e0ae3;   % 259: 			if_tem_funcao_do_jogo: beq t3 x0 loop_descobre_funcoes_do_jogo %
0000011b : 0fc10297;   % 260: 				la t0 funcoesObjetosDoJogo %
0000011c : b9c28293;   % 260:  %
0000011d : 024b8293;   % 261: 				addi t0 s7 36 %
0000011e : fe5302e3;   % 262: 				beq t1 t0 loop_descobre_funcoes_do_jogo %
0000011f : 004d0d13;   % 263: 					addi s10 s10 4 %
00000120 : 01cea023;   % 264: 					sw t3 0(t4) %
00000121 : 004e8e93;   % 265: 					addi t4 t4 4 %
00000122 : 00000297;   % 266: 		la t0 loop_descobre_funcoes_do_jogo %
00000123 : fd428293;   % 266:  %
00000124 : 00028067;   % 267: 	jalr x0 t0 0 %
00000125 : 0fccb297;   % 270: <21> la t0 posicaoPersonagemX %
00000126 : d4c28293;   % 270:  %
00000127 : 00e2a023;   % 270: <22> sw a4 0(t0) %
00000128 : 0fccb297;   % 270: <23> la t0 posicaoPersonagemY %
00000129 : d4428293;   % 270:  %
0000012a : 00f2a023;   % 270: <24> sw a5 0(t0) %
0000012b : 01e00893;   % 274: 			li a7 30 %
0000012c : 10008237;   % 275: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
0000012d : 00020213;   % 275:  %
0000012e : 00419663;   % 275: <4> bne gp,tp,NotECALL_M17 %
0000012f : 00000073;   % 275: <19> ecall %
00000130 : 0280006f;   % 275: <20> j FimECALL_M17 %
00000131 : 0fccb217;   % 275: <21> NotECALL_M17: la tp,UEPC %
00000132 : d6420213;   % 275:  %
00000133 : 00000f97;   % 275: <22> la t6,FimECALL_M17	# endereco ap�s o ecall %
00000134 : 01cf8f93;   % 275:  %
00000135 : 01f22023;   % 275: <23> sw t6,0(tp)	# salva UEPC %
00000136 : 00422203;   % 275: <24> lw tp,4(tp)	# UTVEC %
00000137 : 00000013;   % 275: <25> nop %
00000138 : 00000013;   % 275: <26> nop %
00000139 : 00020067;   % 275: <27> jalr zero,tp,0	# chama UTVEC %
0000013a : 00000013;   % 275: <28> FimECALL_M17: nop %
0000013b : 00a00ab3;   % 276: 			mv s5 a0 %
0000013c : 00000293;   % 280: 		li t0 0											# \ %
0000013d : 0082a333;   % 281: 		sgt t1 s0 t0									#  \ %
0000013e : 00a00293;   % 282: 		li t0 10										#   - Pulo Vertical %
0000013f : 005423b3;   % 283: 		slt t2 s0 t0									#   / %
00000140 : 01400533;   % 284: 		mv a0 s4										#  / %
00000141 : 0a730263;   % 285: 		beq t1 t2 else_jogo_pausar_loop_do_jogo_Jogo 	# /	 %
00000142 : 00e00293;   % 287: 		li t0 14										# \	 %
00000143 : 0082a333;   % 288: 		sgt t1 s0 t0									#  \ %
00000144 : 01900293;   % 289: 		li t0 25										#    - Pulo Diagonal direita %
00000145 : 005423b3;   % 290: 		slt t2 s0 t0									#   / %
00000146 : 01400533;   % 291: 		mv a0 s4										#  / %
00000147 : 08730663;   % 292: 		beq t1 t2 else_jogo_pausar_loop_do_jogo_Jogo	# / %
00000148 : 01d00293;   % 294: 		li t0 29										# \	 %
00000149 : 0082a333;   % 295: 		sgt t1 s0 t0									#  \ %
0000014a : 02800293;   % 296: 		li t0 40										#    - Pulo Diagonal direita %
0000014b : 005423b3;   % 297: 		slt t2 s0 t0									#   / %
0000014c : 01400533;   % 298: 		mv a0 s4										#  / %
0000014d : 06730a63;   % 299: 		beq t1 t2 else_jogo_pausar_loop_do_jogo_Jogo	# / %
0000014e : 03c00293;   % 301: 		li t0 60										# \	 %
0000014f : 0082a333;   % 302: 		sgt t1 s0 t0									#  \ %
00000150 : 04600293;   % 303: 		li t0 70										#    - Queda %
00000151 : 005423b3;   % 304: 		slt t2 s0 t0									#   / %
00000152 : 01400533;   % 305: 		mv a0 s4										#  / %
00000153 : 04730e63;   % 306: 		beq t1 t2 else_jogo_pausar_loop_do_jogo_Jogo	# / %
00000154 : 04500293;   % 308: 		li t0 69										# \	 %
00000155 : 0082a333;   % 309: 		sgt t1 s0 t0									#  \ %
00000156 : 05000293;   % 310: 		li t0 80										#    - Saida Escada %
00000157 : 005423b3;   % 311: 		slt t2 s0 t0									#   / %
00000158 : 01400533;   % 312: 		mv a0 s4										#  / %
00000159 : 04730263;   % 313: 		beq t1 t2 else_jogo_pausar_loop_do_jogo_Jogo	# / %
0000015a : 00001297;   % 316: 		la t0 LeTeclaDoTeclado %
0000015b : 2b428293;   % 316:  %
0000015c : 000280e7;   % 317: 		jalr ra, t0, 0			 # chama a funcao que le a tecla do teclado %
0000015d : 0fc10297;   % 318: 		sw a0 ultimaTeclaPressionada, t0 %
0000015e : a8a2a823;   % 318:  %
0000015f : 00100293;   % 319: 		li t0 1 %
00000160 : 00a00293;   % 320: 		li t0 '\n' %
00000161 : 02551263;   % 321: 		if_jogo_pausar_loop_do_jogo_Jogo: bne a0 t0 else_jogo_pausar_loop_do_jogo_Jogo %
00000162 : 0fc10297;   % 322: 			la t0 estadoDoJogo %
00000163 : a7828293;   % 322:  %
00000164 : 0002a303;   % 323: 			lw t1 0(t0) %
00000165 : 00134313;   % 324: 			xori t1 t1 1 %
00000166 : 0062a023;   % 325: 			sw t1 0(t0) %
00000167 : 00000297;   % 326: 			la t0 loop_do_jogo_Jogo %
00000168 : f1028293;   % 326:  %
00000169 : 00028067;   % 327: 	jalr x0 t0 0 %
0000016a : 00001297;   % 330: 			la t0 MovePersonagem %
0000016b : 35c28293;   % 330:  %
0000016c : 000280e7;   % 331: 	jalr ra t0 0 %
0000016d : 03c00293;   % 335: 			li t0 60										# \	 %
0000016e : 0082a333;   % 336: 			sgt t1 s0 t0									#  \ %
0000016f : 04600293;   % 337: 			li t0 70										#    - Queda %
00000170 : 005423b3;   % 338: 			slt t2 s0 t0									#   / %
00000171 : 01400533;   % 339: 			mv a0 s4										#  / %
00000172 : 06730e63;   % 340: 			beq t1 t2 fim_acoes								# / %
00000173 : 07d00293;   % 346: 			li t0 125 %
00000174 : 0fccb317;   % 347: 			lw t1 posicaoPersonagemY %
00000175 : c1432303;   % 347:  %
00000176 : 06534663;   % 348: 			blt t1 t0 fim_acoes # se ele estiver acima do buraco %
00000177 : 0b400293;   % 349: 			li t0 180 %
00000178 : 06535263;   % 350: 			bge t1 t0 fim_acoes # se ele estiver abaixo do buraco %
00000179 : 05500293;   % 352: 			li t0 85 %
0000017a : 0fccb317;   % 353: 			lw t1 posicaoPersonagemX %
0000017b : bf832303;   % 353:  %
0000017c : 0062a3b3;   % 354: 			sgt t2 t1 t0 %
0000017d : 07200293;   % 355: 			li t0 114 %
0000017e : 00532e33;   % 356: 			slt t3 t1 t0 # se o personagem estiver no primeiro buraco %
0000017f : 027e0663;   % 357: 			beq t3 t2 caiu_buraco %
00000180 : 0cb00293;   % 359: 			li t0 203 %
00000181 : 0fccb317;   % 360: 			lw t1 posicaoPersonagemX %
00000182 : bdc32303;   % 360:  %
00000183 : 0062a3b3;   % 361: 			sgt t2 t1 t0 %
00000184 : 0ea00293;   % 362: 			li t0 234 %
00000185 : 00532e33;   % 363: 			slt t3 t1 t0 # se o personagem estiver no primeiro buraco %
00000186 : 007e0863;   % 364: 			beq t3 t2 caiu_buraco	 %
00000187 : 00000297;   % 368: 			la t0 fim_acoes %
00000188 : 02828293;   % 368:  %
00000189 : 00028067;   % 369: 	jalr x0 t0 0 %
0000018a : 03d00413;   % 373: 				li s0 61 %
0000018b : 00002297;   % 374: 				la t0 incioQueda %
0000018c : 45828293;   % 374:  %
0000018d : 000280e7;   % 375: 				jalr t0 0 %
0000018e : 00000297;   % 376: 				la t0 fim_acoes %
0000018f : 00c28293;   % 376:  %
00000190 : 00028067;   % 377: 	jalr x0 t0 0 %
00000191 : fff00293;   % 383: 			li t0 -1 %
00000192 : 0e540263;   % 384: 			beq s0 t0 imprimir_personagem_parado_esquerda # parado para a esquerda %
00000193 : 00000293;   % 385: 			li t0 0 %
00000194 : 0e540863;   % 386: 			beq s0 t0 imprimir_personagem_parado_direita # parado para a direita %
00000195 : 00000293;   % 388: 			li t0 0 %
00000196 : 0082a333;   % 389: 			sgt t1 s0 t0  # s0 >= 1 %
00000197 : 00a00293;   % 390: 			li t0 10 %
00000198 : 005423b3;   % 391: 			slt t2 s0 t0  # s0 < 10 %
00000199 : 44638663;   % 392: 			beq t2 t1 imprimir_personagem_pulo_direita2 # pulo vertical para a direita %
0000019a : 00a00293;   % 394: 			li t0 10  %
0000019b : 0e540463;   % 395: 			beq s0 t0 imprimir_personagem_correndo1_direita # 1 frame da corrida para a direita %
0000019c : 00b00293;   % 396: 			li t0 11  %
0000019d : 0e540a63;   % 397: 			beq s0 t0 imprimir_personagem_correndo2_direita # 2 frame da corrida para a direita %
0000019e : 00c00293;   % 398: 			li t0 12  %
0000019f : 10540063;   % 399: 			beq s0 t0 imprimir_personagem_correndo3_direita # 3 frame da corrida para a direita %
000001a0 : 00d00293;   % 400: 			li t0 13  %
000001a1 : 10540663;   % 401: 			beq s0 t0 imprimir_personagem_correndo4_direita # 4 frame da corrida para a direita %
000001a2 : 00e00293;   % 402: 			li t0 14  %
000001a3 : 10540c63;   % 403: 			beq s0 t0 imprimir_personagem_correndo5_direita # 5 frame da corrida para a direita %
000001a4 : 00f00293;   % 405: 			li t0 15  %
000001a5 : 12540263;   % 406: 			beq s0 t0 imprimir_personagem_pulo_direita1 # pulo para a direita %
000001a6 : 00f00293;   % 407: 			li t0 15 %
000001a7 : 0082a333;   % 408: 			sgt t1 s0 t0  # s0 >= 16 %
000001a8 : 01900293;   % 409: 			li t0 25 %
000001a9 : 005423b3;   % 410: 			slt t2 s0 t0  # s0 <= 26 %
000001aa : 40638463;   % 411: 			beq t2 t1 imprimir_personagem_pulo_direita2 %
000001ab : 01900293;   % 412: 			li t0 25  %
000001ac : 6e540c63;   % 413: 			beq s0 t0 imprimir_personagem_correndo1_esquerda # 1 frame da corrida para a esquerda %
000001ad : 01a00293;   % 414: 			li t0 26  %
000001ae : 70540263;   % 415: 			beq s0 t0 imprimir_personagem_correndo2_esquerda # 2 frame da corrida para a esquerda %
000001af : 01b00293;   % 416: 			li t0 27  %
000001b0 : 70540863;   % 417: 			beq s0 t0 imprimir_personagem_correndo3_esquerda # 3 frame da corrida para a esquerda %
000001b1 : 01c00293;   % 418: 			li t0 28  %
000001b2 : 70540e63;   % 419: 			beq s0 t0 imprimir_personagem_correndo4_esquerda # 4 frame da corrida para a esquerda %
000001b3 : 01d00293;   % 420: 			li t0 29  %
000001b4 : 72540463;   % 421: 			beq s0 t0 imprimir_personagem_correndo5_esquerda # 5 frame da corrida para a esquerda %
000001b5 : 01e00293;   % 423: 			li t0 30  %
000001b6 : 72540a63;   % 424: 			beq s0 t0 imprimir_personagem_pulo_direita1_Espelhado # pulo para a direita %
000001b7 : 01e00293;   % 425: 			li t0 30 %
000001b8 : 0082a333;   % 426: 			sgt t1 s0 t0  # s0 >= 31 %
000001b9 : 02800293;   % 427: 			li t0 40 %
000001ba : 005423b3;   % 428: 			slt t2 s0 t0  # s0 <= 39 %
000001bb : 20638ce3;   % 429: 			beq t2 t1 imprimir_personagem_pulo_direita2_Espelhado %
000001bc : 02700293;   % 431: 			li t0 39 %
000001bd : 0082a333;   % 432: 			sgt t1 s0 t0  # s0 >= 40 %
000001be : 03200293;   % 433: 			li t0 50 %
000001bf : 005423b3;   % 434: 			slt t2 s0 t0  # s0 <= 49 %
000001c0 : 206382e3;   % 435: 			beq t2 t1 imprimir_personagem_pulo_direita2_Espelhado %
000001c1 : 03100293;   % 437: 			li t0 49 %
000001c2 : 0082a333;   % 438: 			sgt t1 s0 t0  # s0 >= 50 %
000001c3 : 03d00293;   % 439: 			li t0 61 %
000001c4 : 005423b3;   % 440: 			slt t2 s0 t0  # s0 <= 60 %
000001c5 : 4e6384e3;   % 441: 			beq t2 t1 imprimir_personagem_escada %
000001c6 : 03c00293;   % 443: 			li t0 60 %
000001c7 : 0082a333;   % 444: 			sgt t1 s0 t0  # s0 >= 50 %
000001c8 : 04600293;   % 445: 			li t0 70 %
000001c9 : 005423b3;   % 446: 			slt t2 s0 t0  # s0 <= 60 %
000001ca : 506384e3;   % 447: 			beq t2 t1 imprimir_personagem_queda %
000001cb : 0fc2c517;   % 452: 				la a0 Personagem_Parado_16_24_1_Frame_Espelhado %
000001cc : 7b050513;   % 452:  %
000001cd : 00001297;   % 453: 				la t0 desenho_personagem %
000001ce : d1028293;   % 453:  %
000001cf : 00028067;   % 454: 	jalr x0 t0 0 %
000001d0 : 0fc2c517;   % 456: 				la a0 Personagem_Parado_16_24_1_Frame %
000001d1 : 61450513;   % 456:  %
000001d2 : 00001297;   % 457: 				la t0 desenho_personagem %
000001d3 : cfc28293;   % 457:  %
000001d4 : 00028067;   % 458: 	jalr x0 t0 0 %
000001d5 : 0fc2b517;   % 461: 				la a0 Personagem_Correndo_16_24_1 %
000001d6 : 49850513;   % 461:  %
000001d7 : 00001297;   % 462: 				la t0 desenho_personagem %
000001d8 : ce828293;   % 462:  %
000001d9 : 00028067;   % 463: 	jalr x0 t0 0 %
000001da : 0fc2b517;   % 465: 				la a0 Personagem_Correndo_16_24_2 %
000001db : 79450513;   % 465:  %
000001dc : 00001297;   % 466: 				la t0 desenho_personagem %
000001dd : cd428293;   % 466:  %
000001de : 00028067;   % 467: 	jalr x0 t0 0 %
000001df : 0fc2c517;   % 469: 				la a0 Personagem_Correndo_16_24_3 %
000001e0 : a9050513;   % 469:  %
000001e1 : 00001297;   % 470: 				la t0 desenho_personagem %
000001e2 : cc028293;   % 470:  %
000001e3 : 00028067;   % 471: 	jalr x0 t0 0 %
000001e4 : 0fc2c517;   % 473: 				la a0 Personagem_Correndo_16_24_4 %
000001e5 : d8c50513;   % 473:  %
000001e6 : 00001297;   % 474: 				la t0 desenho_personagem %
000001e7 : cac28293;   % 474:  %
000001e8 : 00028067;   % 475: 	jalr x0 t0 0 %
000001e9 : 0fc2c517;   % 477: 				la a0 Personagem_Correndo_16_24_5 %
000001ea : 08850513;   % 477:  %
000001eb : 00001297;   % 478: 				la t0 desenho_personagem %
000001ec : c9828293;   % 478:  %
000001ed : 00028067;   % 479: 	jalr x0 t0 0 %
000001ee : 03d00513;   % 482: <3> li a0,61 %
000001ef : 1f400593;   % 482: <4> li a1,500 %
000001f0 : 07300613;   % 482: <5> li a2,115 %
000001f1 : 07f00693;   % 482: <6> li a3,127 %
000001f2 : 08300893;   % 482: <7> li a7,131 %
000001f3 : 10008237;   % 482: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
000001f4 : 00020213;   % 482:  %
000001f5 : 00419663;   % 482: <4> bne gp,tp,NotECALL_M20 %
000001f6 : 00000073;   % 482: <19> ecall %
000001f7 : 0280006f;   % 482: <20> j FimECALL_M20 %
000001f8 : 0fccb217;   % 482: <21> NotECALL_M20: la tp,UEPC %
000001f9 : a4820213;   % 482:  %
000001fa : 00000f97;   % 482: <22> la t6,FimECALL_M20	# endereco ap�s o ecall %
000001fb : 01cf8f93;   % 482:  %
000001fc : 01f22023;   % 482: <23> sw t6,0(tp)	# salva UEPC %
000001fd : 00422203;   % 482: <24> lw tp,4(tp)	# UTVEC %
000001fe : 00000013;   % 482: <25> nop %
000001ff : 00000013;   % 482: <26> nop %
00000200 : 00020067;   % 482: <27> jalr zero,tp,0	# chama UTVEC %
00000201 : 00000013;   % 482: <28> FimECALL_M20: nop %
00000202 : 08400893;   % 482: <9> li a7, 132 %
00000203 : 00a00513;   % 482: <10> li a0,10 %
00000204 : 10008237;   % 482: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
00000205 : 00020213;   % 482:  %
00000206 : 00419663;   % 482: <4> bne gp,tp,NotECALL_M22 %
00000207 : 00000073;   % 482: <19> ecall %
00000208 : 0280006f;   % 482: <20> j FimECALL_M22 %
00000209 : 0fccb217;   % 482: <21> NotECALL_M22: la tp,UEPC %
0000020a : a0420213;   % 482:  %
0000020b : 00000f97;   % 482: <22> la t6,FimECALL_M22	# endereco ap�s o ecall %
0000020c : 01cf8f93;   % 482:  %
0000020d : 01f22023;   % 482: <23> sw t6,0(tp)	# salva UEPC %
0000020e : 00422203;   % 482: <24> lw tp,4(tp)	# UTVEC %
0000020f : 00000013;   % 482: <25> nop %
00000210 : 00000013;   % 482: <26> nop %
00000211 : 00020067;   % 482: <27> jalr zero,tp,0	# chama UTVEC %
00000212 : 00000013;   % 482: <28> FimECALL_M22: nop %
00000213 : 03f00513;   % 483: <3> li a0,63 %
00000214 : 1f400593;   % 483: <4> li a1,500 %
00000215 : 07300613;   % 483: <5> li a2,115 %
00000216 : 07f00693;   % 483: <6> li a3,127 %
00000217 : 08300893;   % 483: <7> li a7,131 %
00000218 : 10008237;   % 483: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
00000219 : 00020213;   % 483:  %
0000021a : 00419663;   % 483: <4> bne gp,tp,NotECALL_M25 %
0000021b : 00000073;   % 483: <19> ecall %
0000021c : 0280006f;   % 483: <20> j FimECALL_M25 %
0000021d : 0fccb217;   % 483: <21> NotECALL_M25: la tp,UEPC %
0000021e : 9b420213;   % 483:  %
0000021f : 00000f97;   % 483: <22> la t6,FimECALL_M25	# endereco ap�s o ecall %
00000220 : 01cf8f93;   % 483:  %
00000221 : 01f22023;   % 483: <23> sw t6,0(tp)	# salva UEPC %
00000222 : 00422203;   % 483: <24> lw tp,4(tp)	# UTVEC %
00000223 : 00000013;   % 483: <25> nop %
00000224 : 00000013;   % 483: <26> nop %
00000225 : 00020067;   % 483: <27> jalr zero,tp,0	# chama UTVEC %
00000226 : 00000013;   % 483: <28> FimECALL_M25: nop %
00000227 : 08400893;   % 483: <9> li a7, 132 %
00000228 : 00a00513;   % 483: <10> li a0,10 %
00000229 : 10008237;   % 483: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
0000022a : 00020213;   % 483:  %
0000022b : 00419663;   % 483: <4> bne gp,tp,NotECALL_M27 %
0000022c : 00000073;   % 483: <19> ecall %
0000022d : 0280006f;   % 483: <20> j FimECALL_M27 %
0000022e : 0fccb217;   % 483: <21> NotECALL_M27: la tp,UEPC %
0000022f : 97020213;   % 483:  %
00000230 : 00000f97;   % 483: <22> la t6,FimECALL_M27	# endereco ap�s o ecall %
00000231 : 01cf8f93;   % 483:  %
00000232 : 01f22023;   % 483: <23> sw t6,0(tp)	# salva UEPC %
00000233 : 00422203;   % 483: <24> lw tp,4(tp)	# UTVEC %
00000234 : 00000013;   % 483: <25> nop %
00000235 : 00000013;   % 483: <26> nop %
00000236 : 00020067;   % 483: <27> jalr zero,tp,0	# chama UTVEC %
00000237 : 00000013;   % 483: <28> FimECALL_M27: nop %
00000238 : 04100513;   % 484: <3> li a0,65 %
00000239 : 1f400593;   % 484: <4> li a1,500 %
0000023a : 07300613;   % 484: <5> li a2,115 %
0000023b : 07f00693;   % 484: <6> li a3,127 %
0000023c : 08300893;   % 484: <7> li a7,131 %
0000023d : 10008237;   % 484: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
0000023e : 00020213;   % 484:  %
0000023f : 00419663;   % 484: <4> bne gp,tp,NotECALL_M30 %
00000240 : 00000073;   % 484: <19> ecall %
00000241 : 0280006f;   % 484: <20> j FimECALL_M30 %
00000242 : 0fccb217;   % 484: <21> NotECALL_M30: la tp,UEPC %
00000243 : 92020213;   % 484:  %
00000244 : 00000f97;   % 484: <22> la t6,FimECALL_M30	# endereco ap�s o ecall %
00000245 : 01cf8f93;   % 484:  %
00000246 : 01f22023;   % 484: <23> sw t6,0(tp)	# salva UEPC %
00000247 : 00422203;   % 484: <24> lw tp,4(tp)	# UTVEC %
00000248 : 00000013;   % 484: <25> nop %
00000249 : 00000013;   % 484: <26> nop %
0000024a : 00020067;   % 484: <27> jalr zero,tp,0	# chama UTVEC %
0000024b : 00000013;   % 484: <28> FimECALL_M30: nop %
0000024c : 08400893;   % 484: <9> li a7, 132 %
0000024d : 00a00513;   % 484: <10> li a0,10 %
0000024e : 10008237;   % 484: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
0000024f : 00020213;   % 484:  %
00000250 : 00419663;   % 484: <4> bne gp,tp,NotECALL_M32 %
00000251 : 00000073;   % 484: <19> ecall %
00000252 : 0280006f;   % 484: <20> j FimECALL_M32 %
00000253 : 0fccb217;   % 484: <21> NotECALL_M32: la tp,UEPC %
00000254 : 8dc20213;   % 484:  %
00000255 : 00000f97;   % 484: <22> la t6,FimECALL_M32	# endereco ap�s o ecall %
00000256 : 01cf8f93;   % 484:  %
00000257 : 01f22023;   % 484: <23> sw t6,0(tp)	# salva UEPC %
00000258 : 00422203;   % 484: <24> lw tp,4(tp)	# UTVEC %
00000259 : 00000013;   % 484: <25> nop %
0000025a : 00000013;   % 484: <26> nop %
0000025b : 00020067;   % 484: <27> jalr zero,tp,0	# chama UTVEC %
0000025c : 00000013;   % 484: <28> FimECALL_M32: nop %
0000025d : 04300513;   % 485: <3> li a0,67 %
0000025e : 1f400593;   % 485: <4> li a1,500 %
0000025f : 07300613;   % 485: <5> li a2,115 %
00000260 : 07f00693;   % 485: <6> li a3,127 %
00000261 : 08300893;   % 485: <7> li a7,131 %
00000262 : 10008237;   % 485: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
00000263 : 00020213;   % 485:  %
00000264 : 00419663;   % 485: <4> bne gp,tp,NotECALL_M35 %
00000265 : 00000073;   % 485: <19> ecall %
00000266 : 0280006f;   % 485: <20> j FimECALL_M35 %
00000267 : 0fccb217;   % 485: <21> NotECALL_M35: la tp,UEPC %
00000268 : 88c20213;   % 485:  %
00000269 : 00000f97;   % 485: <22> la t6,FimECALL_M35	# endereco ap�s o ecall %
0000026a : 01cf8f93;   % 485:  %
0000026b : 01f22023;   % 485: <23> sw t6,0(tp)	# salva UEPC %
0000026c : 00422203;   % 485: <24> lw tp,4(tp)	# UTVEC %
0000026d : 00000013;   % 485: <25> nop %
0000026e : 00000013;   % 485: <26> nop %
0000026f : 00020067;   % 485: <27> jalr zero,tp,0	# chama UTVEC %
00000270 : 00000013;   % 485: <28> FimECALL_M35: nop %
00000271 : 08400893;   % 485: <9> li a7, 132 %
00000272 : 00a00513;   % 485: <10> li a0,10 %
00000273 : 10008237;   % 485: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
00000274 : 00020213;   % 485:  %
00000275 : 00419663;   % 485: <4> bne gp,tp,NotECALL_M37 %
00000276 : 00000073;   % 485: <19> ecall %
00000277 : 0280006f;   % 485: <20> j FimECALL_M37 %
00000278 : 0fccb217;   % 485: <21> NotECALL_M37: la tp,UEPC %
00000279 : 84820213;   % 485:  %
0000027a : 00000f97;   % 485: <22> la t6,FimECALL_M37	# endereco ap�s o ecall %
0000027b : 01cf8f93;   % 485:  %
0000027c : 01f22023;   % 485: <23> sw t6,0(tp)	# salva UEPC %
0000027d : 00422203;   % 485: <24> lw tp,4(tp)	# UTVEC %
0000027e : 00000013;   % 485: <25> nop %
0000027f : 00000013;   % 485: <26> nop %
00000280 : 00020067;   % 485: <27> jalr zero,tp,0	# chama UTVEC %
00000281 : 00000013;   % 485: <28> FimECALL_M37: nop %
00000282 : 04500513;   % 486: <3> li a0,69 %
00000283 : 1f400593;   % 486: <4> li a1,500 %
00000284 : 07300613;   % 486: <5> li a2,115 %
00000285 : 07f00693;   % 486: <6> li a3,127 %
00000286 : 08300893;   % 486: <7> li a7,131 %
00000287 : 10008237;   % 486: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
00000288 : 00020213;   % 486:  %
00000289 : 00419663;   % 486: <4> bne gp,tp,NotECALL_M40 %
0000028a : 00000073;   % 486: <19> ecall %
0000028b : 0280006f;   % 486: <20> j FimECALL_M40 %
0000028c : 0fcca217;   % 486: <21> NotECALL_M40: la tp,UEPC %
0000028d : 7f820213;   % 486:  %
0000028e : 00000f97;   % 486: <22> la t6,FimECALL_M40	# endereco ap�s o ecall %
0000028f : 01cf8f93;   % 486:  %
00000290 : 01f22023;   % 486: <23> sw t6,0(tp)	# salva UEPC %
00000291 : 00422203;   % 486: <24> lw tp,4(tp)	# UTVEC %
00000292 : 00000013;   % 486: <25> nop %
00000293 : 00000013;   % 486: <26> nop %
00000294 : 00020067;   % 486: <27> jalr zero,tp,0	# chama UTVEC %
00000295 : 00000013;   % 486: <28> FimECALL_M40: nop %
00000296 : 08400893;   % 486: <9> li a7, 132 %
00000297 : 00a00513;   % 486: <10> li a0,10 %
00000298 : 10008237;   % 486: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
00000299 : 00020213;   % 486:  %
0000029a : 00419663;   % 486: <4> bne gp,tp,NotECALL_M42 %
0000029b : 00000073;   % 486: <19> ecall %
0000029c : 0280006f;   % 486: <20> j FimECALL_M42 %
0000029d : 0fcca217;   % 486: <21> NotECALL_M42: la tp,UEPC %
0000029e : 7b420213;   % 486:  %
0000029f : 00000f97;   % 486: <22> la t6,FimECALL_M42	# endereco ap�s o ecall %
000002a0 : 01cf8f93;   % 486:  %
000002a1 : 01f22023;   % 486: <23> sw t6,0(tp)	# salva UEPC %
000002a2 : 00422203;   % 486: <24> lw tp,4(tp)	# UTVEC %
000002a3 : 00000013;   % 486: <25> nop %
000002a4 : 00000013;   % 486: <26> nop %
000002a5 : 00020067;   % 486: <27> jalr zero,tp,0	# chama UTVEC %
000002a6 : 00000013;   % 486: <28> FimECALL_M42: nop %
000002a7 : 0fc2c517;   % 487: 				la a0 Personagem_Pulando_14_24_1Frame %
000002a8 : 5c850513;   % 487:  %
000002a9 : 00001297;   % 488: 				la t0 desenho_personagem %
000002aa : 9a028293;   % 488:  %
000002ab : 00028067;   % 489: 	jalr x0 t0 0 %
000002ac : 03d00513;   % 491: <3> li a0,61 %
000002ad : 1f400593;   % 491: <4> li a1,500 %
000002ae : 07300613;   % 491: <5> li a2,115 %
000002af : 07f00693;   % 491: <6> li a3,127 %
000002b0 : 08300893;   % 491: <7> li a7,131 %
000002b1 : 10008237;   % 491: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
000002b2 : 00020213;   % 491:  %
000002b3 : 00419663;   % 491: <4> bne gp,tp,NotECALL_M45 %
000002b4 : 00000073;   % 491: <19> ecall %
000002b5 : 0280006f;   % 491: <20> j FimECALL_M45 %
000002b6 : 0fcca217;   % 491: <21> NotECALL_M45: la tp,UEPC %
000002b7 : 75020213;   % 491:  %
000002b8 : 00000f97;   % 491: <22> la t6,FimECALL_M45	# endereco ap�s o ecall %
000002b9 : 01cf8f93;   % 491:  %
000002ba : 01f22023;   % 491: <23> sw t6,0(tp)	# salva UEPC %
000002bb : 00422203;   % 491: <24> lw tp,4(tp)	# UTVEC %
000002bc : 00000013;   % 491: <25> nop %
000002bd : 00000013;   % 491: <26> nop %
000002be : 00020067;   % 491: <27> jalr zero,tp,0	# chama UTVEC %
000002bf : 00000013;   % 491: <28> FimECALL_M45: nop %
000002c0 : 08400893;   % 491: <9> li a7, 132 %
000002c1 : 00a00513;   % 491: <10> li a0,10 %
000002c2 : 10008237;   % 491: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
000002c3 : 00020213;   % 491:  %
000002c4 : 00419663;   % 491: <4> bne gp,tp,NotECALL_M47 %
000002c5 : 00000073;   % 491: <19> ecall %
000002c6 : 0280006f;   % 491: <20> j FimECALL_M47 %
000002c7 : 0fcca217;   % 491: <21> NotECALL_M47: la tp,UEPC %
000002c8 : 70c20213;   % 491:  %
000002c9 : 00000f97;   % 491: <22> la t6,FimECALL_M47	# endereco ap�s o ecall %
000002ca : 01cf8f93;   % 491:  %
000002cb : 01f22023;   % 491: <23> sw t6,0(tp)	# salva UEPC %
000002cc : 00422203;   % 491: <24> lw tp,4(tp)	# UTVEC %
000002cd : 00000013;   % 491: <25> nop %
000002ce : 00000013;   % 491: <26> nop %
000002cf : 00020067;   % 491: <27> jalr zero,tp,0	# chama UTVEC %
000002d0 : 00000013;   % 491: <28> FimECALL_M47: nop %
000002d1 : 03f00513;   % 492: <3> li a0,63 %
000002d2 : 1f400593;   % 492: <4> li a1,500 %
000002d3 : 07300613;   % 492: <5> li a2,115 %
000002d4 : 07f00693;   % 492: <6> li a3,127 %
000002d5 : 08300893;   % 492: <7> li a7,131 %
000002d6 : 10008237;   % 492: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
000002d7 : 00020213;   % 492:  %
000002d8 : 00419663;   % 492: <4> bne gp,tp,NotECALL_M50 %
000002d9 : 00000073;   % 492: <19> ecall %
000002da : 0280006f;   % 492: <20> j FimECALL_M50 %
000002db : 0fcca217;   % 492: <21> NotECALL_M50: la tp,UEPC %
000002dc : 6bc20213;   % 492:  %
000002dd : 00000f97;   % 492: <22> la t6,FimECALL_M50	# endereco ap�s o ecall %
000002de : 01cf8f93;   % 492:  %
000002df : 01f22023;   % 492: <23> sw t6,0(tp)	# salva UEPC %
000002e0 : 00422203;   % 492: <24> lw tp,4(tp)	# UTVEC %
000002e1 : 00000013;   % 492: <25> nop %
000002e2 : 00000013;   % 492: <26> nop %
000002e3 : 00020067;   % 492: <27> jalr zero,tp,0	# chama UTVEC %
000002e4 : 00000013;   % 492: <28> FimECALL_M50: nop %
000002e5 : 08400893;   % 492: <9> li a7, 132 %
000002e6 : 00a00513;   % 492: <10> li a0,10 %
000002e7 : 10008237;   % 492: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
000002e8 : 00020213;   % 492:  %
000002e9 : 00419663;   % 492: <4> bne gp,tp,NotECALL_M52 %
000002ea : 00000073;   % 492: <19> ecall %
000002eb : 0280006f;   % 492: <20> j FimECALL_M52 %
000002ec : 0fcca217;   % 492: <21> NotECALL_M52: la tp,UEPC %
000002ed : 67820213;   % 492:  %
000002ee : 00000f97;   % 492: <22> la t6,FimECALL_M52	# endereco ap�s o ecall %
000002ef : 01cf8f93;   % 492:  %
000002f0 : 01f22023;   % 492: <23> sw t6,0(tp)	# salva UEPC %
000002f1 : 00422203;   % 492: <24> lw tp,4(tp)	# UTVEC %
000002f2 : 00000013;   % 492: <25> nop %
000002f3 : 00000013;   % 492: <26> nop %
000002f4 : 00020067;   % 492: <27> jalr zero,tp,0	# chama UTVEC %
000002f5 : 00000013;   % 492: <28> FimECALL_M52: nop %
000002f6 : 04100513;   % 493: <3> li a0,65 %
000002f7 : 1f400593;   % 493: <4> li a1,500 %
000002f8 : 07300613;   % 493: <5> li a2,115 %
000002f9 : 07f00693;   % 493: <6> li a3,127 %
000002fa : 08300893;   % 493: <7> li a7,131 %
000002fb : 10008237;   % 493: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
000002fc : 00020213;   % 493:  %
000002fd : 00419663;   % 493: <4> bne gp,tp,NotECALL_M55 %
000002fe : 00000073;   % 493: <19> ecall %
000002ff : 0280006f;   % 493: <20> j FimECALL_M55 %
00000300 : 0fcca217;   % 493: <21> NotECALL_M55: la tp,UEPC %
00000301 : 62820213;   % 493:  %
00000302 : 00000f97;   % 493: <22> la t6,FimECALL_M55	# endereco ap�s o ecall %
00000303 : 01cf8f93;   % 493:  %
00000304 : 01f22023;   % 493: <23> sw t6,0(tp)	# salva UEPC %
00000305 : 00422203;   % 493: <24> lw tp,4(tp)	# UTVEC %
00000306 : 00000013;   % 493: <25> nop %
00000307 : 00000013;   % 493: <26> nop %
00000308 : 00020067;   % 493: <27> jalr zero,tp,0	# chama UTVEC %
00000309 : 00000013;   % 493: <28> FimECALL_M55: nop %
0000030a : 08400893;   % 493: <9> li a7, 132 %
0000030b : 00a00513;   % 493: <10> li a0,10 %
0000030c : 10008237;   % 493: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
0000030d : 00020213;   % 493:  %
0000030e : 00419663;   % 493: <4> bne gp,tp,NotECALL_M57 %
0000030f : 00000073;   % 493: <19> ecall %
00000310 : 0280006f;   % 493: <20> j FimECALL_M57 %
00000311 : 0fcca217;   % 493: <21> NotECALL_M57: la tp,UEPC %
00000312 : 5e420213;   % 493:  %
00000313 : 00000f97;   % 493: <22> la t6,FimECALL_M57	# endereco ap�s o ecall %
00000314 : 01cf8f93;   % 493:  %
00000315 : 01f22023;   % 493: <23> sw t6,0(tp)	# salva UEPC %
00000316 : 00422203;   % 493: <24> lw tp,4(tp)	# UTVEC %
00000317 : 00000013;   % 493: <25> nop %
00000318 : 00000013;   % 493: <26> nop %
00000319 : 00020067;   % 493: <27> jalr zero,tp,0	# chama UTVEC %
0000031a : 00000013;   % 493: <28> FimECALL_M57: nop %
0000031b : 04300513;   % 494: <3> li a0,67 %
0000031c : 1f400593;   % 494: <4> li a1,500 %
0000031d : 07300613;   % 494: <5> li a2,115 %
0000031e : 07f00693;   % 494: <6> li a3,127 %
0000031f : 08300893;   % 494: <7> li a7,131 %
00000320 : 10008237;   % 494: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
00000321 : 00020213;   % 494:  %
00000322 : 00419663;   % 494: <4> bne gp,tp,NotECALL_M60 %
00000323 : 00000073;   % 494: <19> ecall %
00000324 : 0280006f;   % 494: <20> j FimECALL_M60 %
00000325 : 0fcca217;   % 494: <21> NotECALL_M60: la tp,UEPC %
00000326 : 59420213;   % 494:  %
00000327 : 00000f97;   % 494: <22> la t6,FimECALL_M60	# endereco ap�s o ecall %
00000328 : 01cf8f93;   % 494:  %
00000329 : 01f22023;   % 494: <23> sw t6,0(tp)	# salva UEPC %
0000032a : 00422203;   % 494: <24> lw tp,4(tp)	# UTVEC %
0000032b : 00000013;   % 494: <25> nop %
0000032c : 00000013;   % 494: <26> nop %
0000032d : 00020067;   % 494: <27> jalr zero,tp,0	# chama UTVEC %
0000032e : 00000013;   % 494: <28> FimECALL_M60: nop %
0000032f : 08400893;   % 494: <9> li a7, 132 %
00000330 : 00a00513;   % 494: <10> li a0,10 %
00000331 : 10008237;   % 494: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
00000332 : 00020213;   % 494:  %
00000333 : 00419663;   % 494: <4> bne gp,tp,NotECALL_M62 %
00000334 : 00000073;   % 494: <19> ecall %
00000335 : 0280006f;   % 494: <20> j FimECALL_M62 %
00000336 : 0fcca217;   % 494: <21> NotECALL_M62: la tp,UEPC %
00000337 : 55020213;   % 494:  %
00000338 : 00000f97;   % 494: <22> la t6,FimECALL_M62	# endereco ap�s o ecall %
00000339 : 01cf8f93;   % 494:  %
0000033a : 01f22023;   % 494: <23> sw t6,0(tp)	# salva UEPC %
0000033b : 00422203;   % 494: <24> lw tp,4(tp)	# UTVEC %
0000033c : 00000013;   % 494: <25> nop %
0000033d : 00000013;   % 494: <26> nop %
0000033e : 00020067;   % 494: <27> jalr zero,tp,0	# chama UTVEC %
0000033f : 00000013;   % 494: <28> FimECALL_M62: nop %
00000340 : 04500513;   % 495: <3> li a0,69 %
00000341 : 1f400593;   % 495: <4> li a1,500 %
00000342 : 07300613;   % 495: <5> li a2,115 %
00000343 : 07f00693;   % 495: <6> li a3,127 %
00000344 : 08300893;   % 495: <7> li a7,131 %
00000345 : 10008237;   % 495: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
00000346 : 00020213;   % 495:  %
00000347 : 00419663;   % 495: <4> bne gp,tp,NotECALL_M65 %
00000348 : 00000073;   % 495: <19> ecall %
00000349 : 0280006f;   % 495: <20> j FimECALL_M65 %
0000034a : 0fcca217;   % 495: <21> NotECALL_M65: la tp,UEPC %
0000034b : 50020213;   % 495:  %
0000034c : 00000f97;   % 495: <22> la t6,FimECALL_M65	# endereco ap�s o ecall %
0000034d : 01cf8f93;   % 495:  %
0000034e : 01f22023;   % 495: <23> sw t6,0(tp)	# salva UEPC %
0000034f : 00422203;   % 495: <24> lw tp,4(tp)	# UTVEC %
00000350 : 00000013;   % 495: <25> nop %
00000351 : 00000013;   % 495: <26> nop %
00000352 : 00020067;   % 495: <27> jalr zero,tp,0	# chama UTVEC %
00000353 : 00000013;   % 495: <28> FimECALL_M65: nop %
00000354 : 08400893;   % 495: <9> li a7, 132 %
00000355 : 00a00513;   % 495: <10> li a0,10 %
00000356 : 10008237;   % 495: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
00000357 : 00020213;   % 495:  %
00000358 : 00419663;   % 495: <4> bne gp,tp,NotECALL_M67 %
00000359 : 00000073;   % 495: <19> ecall %
0000035a : 0280006f;   % 495: <20> j FimECALL_M67 %
0000035b : 0fcca217;   % 495: <21> NotECALL_M67: la tp,UEPC %
0000035c : 4bc20213;   % 495:  %
0000035d : 00000f97;   % 495: <22> la t6,FimECALL_M67	# endereco ap�s o ecall %
0000035e : 01cf8f93;   % 495:  %
0000035f : 01f22023;   % 495: <23> sw t6,0(tp)	# salva UEPC %
00000360 : 00422203;   % 495: <24> lw tp,4(tp)	# UTVEC %
00000361 : 00000013;   % 495: <25> nop %
00000362 : 00000013;   % 495: <26> nop %
00000363 : 00020067;   % 495: <27> jalr zero,tp,0	# chama UTVEC %
00000364 : 00000013;   % 495: <28> FimECALL_M67: nop %
00000365 : 0fc2c517;   % 496: 				la a0 Personagem_Pulando_14_24_2Frame %
00000366 : 58050513;   % 496:  %
00000367 : 00000297;   % 497: 				la t0 desenho_personagem %
00000368 : 6a828293;   % 497:  %
00000369 : 00028067;   % 498: 	jalr x0 t0 0 %
0000036a : 0fc2b517;   % 501: 				la a0 Personagem_Correndo_16_24_1_Espelhado %
0000036b : fcc50513;   % 501:  %
0000036c : 00000297;   % 502: 				la t0 desenho_personagem %
0000036d : 69428293;   % 502:  %
0000036e : 00028067;   % 503: 	jalr x0 t0 0 %
0000036f : 0fc2b517;   % 505: 				la a0 Personagem_Correndo_16_24_2_Espelhado %
00000370 : 2c850513;   % 505:  %
00000371 : 00000297;   % 506: 				la t0 desenho_personagem %
00000372 : 68028293;   % 506:  %
00000373 : 00028067;   % 507: 	jalr x0 t0 0 %
00000374 : 0fc2b517;   % 509: 				la a0 Personagem_Correndo_16_24_3_Espelhado %
00000375 : 5c450513;   % 509:  %
00000376 : 00000297;   % 510: 				la t0 desenho_personagem %
00000377 : 66c28293;   % 510:  %
00000378 : 00028067;   % 511: 	jalr x0 t0 0 %
00000379 : 0fc2c517;   % 513: 				la a0 Personagem_Correndo_16_24_4_Espelhado %
0000037a : 8c050513;   % 513:  %
0000037b : 00000297;   % 514: 				la t0 desenho_personagem %
0000037c : 65828293;   % 514:  %
0000037d : 00028067;   % 515: 	jalr x0 t0 0 %
0000037e : 0fc2c517;   % 517: 				la a0 Personagem_Correndo_16_24_5_Espelhado %
0000037f : bbc50513;   % 517:  %
00000380 : 00000297;   % 518: 				la t0 desenho_personagem %
00000381 : 64428293;   % 518:  %
00000382 : 00028067;   % 519: 	jalr x0 t0 0 %
00000383 : 03d00513;   % 522: <3> li a0,61 %
00000384 : 1f400593;   % 522: <4> li a1,500 %
00000385 : 07300613;   % 522: <5> li a2,115 %
00000386 : 07f00693;   % 522: <6> li a3,127 %
00000387 : 08300893;   % 522: <7> li a7,131 %
00000388 : 10008237;   % 522: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
00000389 : 00020213;   % 522:  %
0000038a : 00419663;   % 522: <4> bne gp,tp,NotECALL_M70 %
0000038b : 00000073;   % 522: <19> ecall %
0000038c : 0280006f;   % 522: <20> j FimECALL_M70 %
0000038d : 0fcca217;   % 522: <21> NotECALL_M70: la tp,UEPC %
0000038e : 3f420213;   % 522:  %
0000038f : 00000f97;   % 522: <22> la t6,FimECALL_M70	# endereco ap�s o ecall %
00000390 : 01cf8f93;   % 522:  %
00000391 : 01f22023;   % 522: <23> sw t6,0(tp)	# salva UEPC %
00000392 : 00422203;   % 522: <24> lw tp,4(tp)	# UTVEC %
00000393 : 00000013;   % 522: <25> nop %
00000394 : 00000013;   % 522: <26> nop %
00000395 : 00020067;   % 522: <27> jalr zero,tp,0	# chama UTVEC %
00000396 : 00000013;   % 522: <28> FimECALL_M70: nop %
00000397 : 08400893;   % 522: <9> li a7, 132 %
00000398 : 00a00513;   % 522: <10> li a0,10 %
00000399 : 10008237;   % 522: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
0000039a : 00020213;   % 522:  %
0000039b : 00419663;   % 522: <4> bne gp,tp,NotECALL_M72 %
0000039c : 00000073;   % 522: <19> ecall %
0000039d : 0280006f;   % 522: <20> j FimECALL_M72 %
0000039e : 0fcca217;   % 522: <21> NotECALL_M72: la tp,UEPC %
0000039f : 3b020213;   % 522:  %
000003a0 : 00000f97;   % 522: <22> la t6,FimECALL_M72	# endereco ap�s o ecall %
000003a1 : 01cf8f93;   % 522:  %
000003a2 : 01f22023;   % 522: <23> sw t6,0(tp)	# salva UEPC %
000003a3 : 00422203;   % 522: <24> lw tp,4(tp)	# UTVEC %
000003a4 : 00000013;   % 522: <25> nop %
000003a5 : 00000013;   % 522: <26> nop %
000003a6 : 00020067;   % 522: <27> jalr zero,tp,0	# chama UTVEC %
000003a7 : 00000013;   % 522: <28> FimECALL_M72: nop %
000003a8 : 03f00513;   % 523: <3> li a0,63 %
000003a9 : 1f400593;   % 523: <4> li a1,500 %
000003aa : 07300613;   % 523: <5> li a2,115 %
000003ab : 07f00693;   % 523: <6> li a3,127 %
000003ac : 08300893;   % 523: <7> li a7,131 %
000003ad : 10008237;   % 523: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
000003ae : 00020213;   % 523:  %
000003af : 00419663;   % 523: <4> bne gp,tp,NotECALL_M75 %
000003b0 : 00000073;   % 523: <19> ecall %
000003b1 : 0280006f;   % 523: <20> j FimECALL_M75 %
000003b2 : 0fcca217;   % 523: <21> NotECALL_M75: la tp,UEPC %
000003b3 : 36020213;   % 523:  %
000003b4 : 00000f97;   % 523: <22> la t6,FimECALL_M75	# endereco ap�s o ecall %
000003b5 : 01cf8f93;   % 523:  %
000003b6 : 01f22023;   % 523: <23> sw t6,0(tp)	# salva UEPC %
000003b7 : 00422203;   % 523: <24> lw tp,4(tp)	# UTVEC %
000003b8 : 00000013;   % 523: <25> nop %
000003b9 : 00000013;   % 523: <26> nop %
000003ba : 00020067;   % 523: <27> jalr zero,tp,0	# chama UTVEC %
000003bb : 00000013;   % 523: <28> FimECALL_M75: nop %
000003bc : 08400893;   % 523: <9> li a7, 132 %
000003bd : 00a00513;   % 523: <10> li a0,10 %
000003be : 10008237;   % 523: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
000003bf : 00020213;   % 523:  %
000003c0 : 00419663;   % 523: <4> bne gp,tp,NotECALL_M77 %
000003c1 : 00000073;   % 523: <19> ecall %
000003c2 : 0280006f;   % 523: <20> j FimECALL_M77 %
000003c3 : 0fcca217;   % 523: <21> NotECALL_M77: la tp,UEPC %
000003c4 : 31c20213;   % 523:  %
000003c5 : 00000f97;   % 523: <22> la t6,FimECALL_M77	# endereco ap�s o ecall %
000003c6 : 01cf8f93;   % 523:  %
000003c7 : 01f22023;   % 523: <23> sw t6,0(tp)	# salva UEPC %
000003c8 : 00422203;   % 523: <24> lw tp,4(tp)	# UTVEC %
000003c9 : 00000013;   % 523: <25> nop %
000003ca : 00000013;   % 523: <26> nop %
000003cb : 00020067;   % 523: <27> jalr zero,tp,0	# chama UTVEC %
000003cc : 00000013;   % 523: <28> FimECALL_M77: nop %
000003cd : 04100513;   % 524: <3> li a0,65 %
000003ce : 1f400593;   % 524: <4> li a1,500 %
000003cf : 07300613;   % 524: <5> li a2,115 %
000003d0 : 07f00693;   % 524: <6> li a3,127 %
000003d1 : 08300893;   % 524: <7> li a7,131 %
000003d2 : 10008237;   % 524: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
000003d3 : 00020213;   % 524:  %
000003d4 : 00419663;   % 524: <4> bne gp,tp,NotECALL_M80 %
000003d5 : 00000073;   % 524: <19> ecall %
000003d6 : 0280006f;   % 524: <20> j FimECALL_M80 %
000003d7 : 0fcca217;   % 524: <21> NotECALL_M80: la tp,UEPC %
000003d8 : 2cc20213;   % 524:  %
000003d9 : 00000f97;   % 524: <22> la t6,FimECALL_M80	# endereco ap�s o ecall %
000003da : 01cf8f93;   % 524:  %
000003db : 01f22023;   % 524: <23> sw t6,0(tp)	# salva UEPC %
000003dc : 00422203;   % 524: <24> lw tp,4(tp)	# UTVEC %
000003dd : 00000013;   % 524: <25> nop %
000003de : 00000013;   % 524: <26> nop %
000003df : 00020067;   % 524: <27> jalr zero,tp,0	# chama UTVEC %
000003e0 : 00000013;   % 524: <28> FimECALL_M80: nop %
000003e1 : 08400893;   % 524: <9> li a7, 132 %
000003e2 : 00a00513;   % 524: <10> li a0,10 %
000003e3 : 10008237;   % 524: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
000003e4 : 00020213;   % 524:  %
000003e5 : 00419663;   % 524: <4> bne gp,tp,NotECALL_M82 %
000003e6 : 00000073;   % 524: <19> ecall %
000003e7 : 0280006f;   % 524: <20> j FimECALL_M82 %
000003e8 : 0fcca217;   % 524: <21> NotECALL_M82: la tp,UEPC %
000003e9 : 28820213;   % 524:  %
000003ea : 00000f97;   % 524: <22> la t6,FimECALL_M82	# endereco ap�s o ecall %
000003eb : 01cf8f93;   % 524:  %
000003ec : 01f22023;   % 524: <23> sw t6,0(tp)	# salva UEPC %
000003ed : 00422203;   % 524: <24> lw tp,4(tp)	# UTVEC %
000003ee : 00000013;   % 524: <25> nop %
000003ef : 00000013;   % 524: <26> nop %
000003f0 : 00020067;   % 524: <27> jalr zero,tp,0	# chama UTVEC %
000003f1 : 00000013;   % 524: <28> FimECALL_M82: nop %
000003f2 : 04300513;   % 525: <3> li a0,67 %
000003f3 : 1f400593;   % 525: <4> li a1,500 %
000003f4 : 07300613;   % 525: <5> li a2,115 %
000003f5 : 07f00693;   % 525: <6> li a3,127 %
000003f6 : 08300893;   % 525: <7> li a7,131 %
000003f7 : 10008237;   % 525: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
000003f8 : 00020213;   % 525:  %
000003f9 : 00419663;   % 525: <4> bne gp,tp,NotECALL_M85 %
000003fa : 00000073;   % 525: <19> ecall %
000003fb : 0280006f;   % 525: <20> j FimECALL_M85 %
000003fc : 0fcca217;   % 525: <21> NotECALL_M85: la tp,UEPC %
000003fd : 23820213;   % 525:  %
000003fe : 00000f97;   % 525: <22> la t6,FimECALL_M85	# endereco ap�s o ecall %
000003ff : 01cf8f93;   % 525:  %
00000400 : 01f22023;   % 525: <23> sw t6,0(tp)	# salva UEPC %
00000401 : 00422203;   % 525: <24> lw tp,4(tp)	# UTVEC %
00000402 : 00000013;   % 525: <25> nop %
00000403 : 00000013;   % 525: <26> nop %
00000404 : 00020067;   % 525: <27> jalr zero,tp,0	# chama UTVEC %
00000405 : 00000013;   % 525: <28> FimECALL_M85: nop %
00000406 : 08400893;   % 525: <9> li a7, 132 %
00000407 : 00a00513;   % 525: <10> li a0,10 %
00000408 : 10008237;   % 525: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
00000409 : 00020213;   % 525:  %
0000040a : 00419663;   % 525: <4> bne gp,tp,NotECALL_M87 %
0000040b : 00000073;   % 525: <19> ecall %
0000040c : 0280006f;   % 525: <20> j FimECALL_M87 %
0000040d : 0fcca217;   % 525: <21> NotECALL_M87: la tp,UEPC %
0000040e : 1f420213;   % 525:  %
0000040f : 00000f97;   % 525: <22> la t6,FimECALL_M87	# endereco ap�s o ecall %
00000410 : 01cf8f93;   % 525:  %
00000411 : 01f22023;   % 525: <23> sw t6,0(tp)	# salva UEPC %
00000412 : 00422203;   % 525: <24> lw tp,4(tp)	# UTVEC %
00000413 : 00000013;   % 525: <25> nop %
00000414 : 00000013;   % 525: <26> nop %
00000415 : 00020067;   % 525: <27> jalr zero,tp,0	# chama UTVEC %
00000416 : 00000013;   % 525: <28> FimECALL_M87: nop %
00000417 : 04500513;   % 526: <3> li a0,69 %
00000418 : 1f400593;   % 526: <4> li a1,500 %
00000419 : 07300613;   % 526: <5> li a2,115 %
0000041a : 07f00693;   % 526: <6> li a3,127 %
0000041b : 08300893;   % 526: <7> li a7,131 %
0000041c : 10008237;   % 526: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
0000041d : 00020213;   % 526:  %
0000041e : 00419663;   % 526: <4> bne gp,tp,NotECALL_M90 %
0000041f : 00000073;   % 526: <19> ecall %
00000420 : 0280006f;   % 526: <20> j FimECALL_M90 %
00000421 : 0fcca217;   % 526: <21> NotECALL_M90: la tp,UEPC %
00000422 : 1a420213;   % 526:  %
00000423 : 00000f97;   % 526: <22> la t6,FimECALL_M90	# endereco ap�s o ecall %
00000424 : 01cf8f93;   % 526:  %
00000425 : 01f22023;   % 526: <23> sw t6,0(tp)	# salva UEPC %
00000426 : 00422203;   % 526: <24> lw tp,4(tp)	# UTVEC %
00000427 : 00000013;   % 526: <25> nop %
00000428 : 00000013;   % 526: <26> nop %
00000429 : 00020067;   % 526: <27> jalr zero,tp,0	# chama UTVEC %
0000042a : 00000013;   % 526: <28> FimECALL_M90: nop %
0000042b : 08400893;   % 526: <9> li a7, 132 %
0000042c : 00a00513;   % 526: <10> li a0,10 %
0000042d : 10008237;   % 526: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
0000042e : 00020213;   % 526:  %
0000042f : 00419663;   % 526: <4> bne gp,tp,NotECALL_M92 %
00000430 : 00000073;   % 526: <19> ecall %
00000431 : 0280006f;   % 526: <20> j FimECALL_M92 %
00000432 : 0fcca217;   % 526: <21> NotECALL_M92: la tp,UEPC %
00000433 : 16020213;   % 526:  %
00000434 : 00000f97;   % 526: <22> la t6,FimECALL_M92	# endereco ap�s o ecall %
00000435 : 01cf8f93;   % 526:  %
00000436 : 01f22023;   % 526: <23> sw t6,0(tp)	# salva UEPC %
00000437 : 00422203;   % 526: <24> lw tp,4(tp)	# UTVEC %
00000438 : 00000013;   % 526: <25> nop %
00000439 : 00000013;   % 526: <26> nop %
0000043a : 00020067;   % 526: <27> jalr zero,tp,0	# chama UTVEC %
0000043b : 00000013;   % 526: <28> FimECALL_M92: nop %
0000043c : 0fc2c517;   % 527: 				la a0 Personagem_Pulando_14_24_1Frame_Espelhado %
0000043d : 0cc50513;   % 527:  %
0000043e : 00000297;   % 528: 				la t0 desenho_personagem %
0000043f : 34c28293;   % 528:  %
00000440 : 00028067;   % 529: 	jalr x0 t0 0 %
00000441 : 03d00513;   % 531: <3> li a0,61 %
00000442 : 1f400593;   % 531: <4> li a1,500 %
00000443 : 07300613;   % 531: <5> li a2,115 %
00000444 : 07f00693;   % 531: <6> li a3,127 %
00000445 : 08300893;   % 531: <7> li a7,131 %
00000446 : 10008237;   % 531: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
00000447 : 00020213;   % 531:  %
00000448 : 00419663;   % 531: <4> bne gp,tp,NotECALL_M95 %
00000449 : 00000073;   % 531: <19> ecall %
0000044a : 0280006f;   % 531: <20> j FimECALL_M95 %
0000044b : 0fcca217;   % 531: <21> NotECALL_M95: la tp,UEPC %
0000044c : 0fc20213;   % 531:  %
0000044d : 00000f97;   % 531: <22> la t6,FimECALL_M95	# endereco ap�s o ecall %
0000044e : 01cf8f93;   % 531:  %
0000044f : 01f22023;   % 531: <23> sw t6,0(tp)	# salva UEPC %
00000450 : 00422203;   % 531: <24> lw tp,4(tp)	# UTVEC %
00000451 : 00000013;   % 531: <25> nop %
00000452 : 00000013;   % 531: <26> nop %
00000453 : 00020067;   % 531: <27> jalr zero,tp,0	# chama UTVEC %
00000454 : 00000013;   % 531: <28> FimECALL_M95: nop %
00000455 : 08400893;   % 531: <9> li a7, 132 %
00000456 : 00a00513;   % 531: <10> li a0,10 %
00000457 : 10008237;   % 531: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
00000458 : 00020213;   % 531:  %
00000459 : 00419663;   % 531: <4> bne gp,tp,NotECALL_M97 %
0000045a : 00000073;   % 531: <19> ecall %
0000045b : 0280006f;   % 531: <20> j FimECALL_M97 %
0000045c : 0fcca217;   % 531: <21> NotECALL_M97: la tp,UEPC %
0000045d : 0b820213;   % 531:  %
0000045e : 00000f97;   % 531: <22> la t6,FimECALL_M97	# endereco ap�s o ecall %
0000045f : 01cf8f93;   % 531:  %
00000460 : 01f22023;   % 531: <23> sw t6,0(tp)	# salva UEPC %
00000461 : 00422203;   % 531: <24> lw tp,4(tp)	# UTVEC %
00000462 : 00000013;   % 531: <25> nop %
00000463 : 00000013;   % 531: <26> nop %
00000464 : 00020067;   % 531: <27> jalr zero,tp,0	# chama UTVEC %
00000465 : 00000013;   % 531: <28> FimECALL_M97: nop %
00000466 : 03f00513;   % 532: <3> li a0,63 %
00000467 : 1f400593;   % 532: <4> li a1,500 %
00000468 : 07300613;   % 532: <5> li a2,115 %
00000469 : 07f00693;   % 532: <6> li a3,127 %
0000046a : 08300893;   % 532: <7> li a7,131 %
0000046b : 10008237;   % 532: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
0000046c : 00020213;   % 532:  %
0000046d : 00419663;   % 532: <4> bne gp,tp,NotECALL_M100 %
0000046e : 00000073;   % 532: <19> ecall %
0000046f : 0280006f;   % 532: <20> j FimECALL_M100 %
00000470 : 0fcca217;   % 532: <21> NotECALL_M100: la tp,UEPC %
00000471 : 06820213;   % 532:  %
00000472 : 00000f97;   % 532: <22> la t6,FimECALL_M100	# endereco ap�s o ecall %
00000473 : 01cf8f93;   % 532:  %
00000474 : 01f22023;   % 532: <23> sw t6,0(tp)	# salva UEPC %
00000475 : 00422203;   % 532: <24> lw tp,4(tp)	# UTVEC %
00000476 : 00000013;   % 532: <25> nop %
00000477 : 00000013;   % 532: <26> nop %
00000478 : 00020067;   % 532: <27> jalr zero,tp,0	# chama UTVEC %
00000479 : 00000013;   % 532: <28> FimECALL_M100: nop %
0000047a : 08400893;   % 532: <9> li a7, 132 %
0000047b : 00a00513;   % 532: <10> li a0,10 %
0000047c : 10008237;   % 532: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
0000047d : 00020213;   % 532:  %
0000047e : 00419663;   % 532: <4> bne gp,tp,NotECALL_M102 %
0000047f : 00000073;   % 532: <19> ecall %
00000480 : 0280006f;   % 532: <20> j FimECALL_M102 %
00000481 : 0fcca217;   % 532: <21> NotECALL_M102: la tp,UEPC %
00000482 : 02420213;   % 532:  %
00000483 : 00000f97;   % 532: <22> la t6,FimECALL_M102	# endereco ap�s o ecall %
00000484 : 01cf8f93;   % 532:  %
00000485 : 01f22023;   % 532: <23> sw t6,0(tp)	# salva UEPC %
00000486 : 00422203;   % 532: <24> lw tp,4(tp)	# UTVEC %
00000487 : 00000013;   % 532: <25> nop %
00000488 : 00000013;   % 532: <26> nop %
00000489 : 00020067;   % 532: <27> jalr zero,tp,0	# chama UTVEC %
0000048a : 00000013;   % 532: <28> FimECALL_M102: nop %
0000048b : 04100513;   % 533: <3> li a0,65 %
0000048c : 1f400593;   % 533: <4> li a1,500 %
0000048d : 07300613;   % 533: <5> li a2,115 %
0000048e : 07f00693;   % 533: <6> li a3,127 %
0000048f : 08300893;   % 533: <7> li a7,131 %
00000490 : 10008237;   % 533: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
00000491 : 00020213;   % 533:  %
00000492 : 00419663;   % 533: <4> bne gp,tp,NotECALL_M105 %
00000493 : 00000073;   % 533: <19> ecall %
00000494 : 0280006f;   % 533: <20> j FimECALL_M105 %
00000495 : 0fcca217;   % 533: <21> NotECALL_M105: la tp,UEPC %
00000496 : fd420213;   % 533:  %
00000497 : 00000f97;   % 533: <22> la t6,FimECALL_M105	# endereco ap�s o ecall %
00000498 : 01cf8f93;   % 533:  %
00000499 : 01f22023;   % 533: <23> sw t6,0(tp)	# salva UEPC %
0000049a : 00422203;   % 533: <24> lw tp,4(tp)	# UTVEC %
0000049b : 00000013;   % 533: <25> nop %
0000049c : 00000013;   % 533: <26> nop %
0000049d : 00020067;   % 533: <27> jalr zero,tp,0	# chama UTVEC %
0000049e : 00000013;   % 533: <28> FimECALL_M105: nop %
0000049f : 08400893;   % 533: <9> li a7, 132 %
000004a0 : 00a00513;   % 533: <10> li a0,10 %
000004a1 : 10008237;   % 533: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
000004a2 : 00020213;   % 533:  %
000004a3 : 00419663;   % 533: <4> bne gp,tp,NotECALL_M107 %
000004a4 : 00000073;   % 533: <19> ecall %
000004a5 : 0280006f;   % 533: <20> j FimECALL_M107 %
000004a6 : 0fcca217;   % 533: <21> NotECALL_M107: la tp,UEPC %
000004a7 : f9020213;   % 533:  %
000004a8 : 00000f97;   % 533: <22> la t6,FimECALL_M107	# endereco ap�s o ecall %
000004a9 : 01cf8f93;   % 533:  %
000004aa : 01f22023;   % 533: <23> sw t6,0(tp)	# salva UEPC %
000004ab : 00422203;   % 533: <24> lw tp,4(tp)	# UTVEC %
000004ac : 00000013;   % 533: <25> nop %
000004ad : 00000013;   % 533: <26> nop %
000004ae : 00020067;   % 533: <27> jalr zero,tp,0	# chama UTVEC %
000004af : 00000013;   % 533: <28> FimECALL_M107: nop %
000004b0 : 04300513;   % 534: <3> li a0,67 %
000004b1 : 1f400593;   % 534: <4> li a1,500 %
000004b2 : 07300613;   % 534: <5> li a2,115 %
000004b3 : 07f00693;   % 534: <6> li a3,127 %
000004b4 : 08300893;   % 534: <7> li a7,131 %
000004b5 : 10008237;   % 534: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
000004b6 : 00020213;   % 534:  %
000004b7 : 00419663;   % 534: <4> bne gp,tp,NotECALL_M110 %
000004b8 : 00000073;   % 534: <19> ecall %
000004b9 : 0280006f;   % 534: <20> j FimECALL_M110 %
000004ba : 0fcca217;   % 534: <21> NotECALL_M110: la tp,UEPC %
000004bb : f4020213;   % 534:  %
000004bc : 00000f97;   % 534: <22> la t6,FimECALL_M110	# endereco ap�s o ecall %
000004bd : 01cf8f93;   % 534:  %
000004be : 01f22023;   % 534: <23> sw t6,0(tp)	# salva UEPC %
000004bf : 00422203;   % 534: <24> lw tp,4(tp)	# UTVEC %
000004c0 : 00000013;   % 534: <25> nop %
000004c1 : 00000013;   % 534: <26> nop %
000004c2 : 00020067;   % 534: <27> jalr zero,tp,0	# chama UTVEC %
000004c3 : 00000013;   % 534: <28> FimECALL_M110: nop %
000004c4 : 08400893;   % 534: <9> li a7, 132 %
000004c5 : 00a00513;   % 534: <10> li a0,10 %
000004c6 : 10008237;   % 534: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
000004c7 : 00020213;   % 534:  %
000004c8 : 00419663;   % 534: <4> bne gp,tp,NotECALL_M112 %
000004c9 : 00000073;   % 534: <19> ecall %
000004ca : 0280006f;   % 534: <20> j FimECALL_M112 %
000004cb : 0fcca217;   % 534: <21> NotECALL_M112: la tp,UEPC %
000004cc : efc20213;   % 534:  %
000004cd : 00000f97;   % 534: <22> la t6,FimECALL_M112	# endereco ap�s o ecall %
000004ce : 01cf8f93;   % 534:  %
000004cf : 01f22023;   % 534: <23> sw t6,0(tp)	# salva UEPC %
000004d0 : 00422203;   % 534: <24> lw tp,4(tp)	# UTVEC %
000004d1 : 00000013;   % 534: <25> nop %
000004d2 : 00000013;   % 534: <26> nop %
000004d3 : 00020067;   % 534: <27> jalr zero,tp,0	# chama UTVEC %
000004d4 : 00000013;   % 534: <28> FimECALL_M112: nop %
000004d5 : 04500513;   % 535: <3> li a0,69 %
000004d6 : 1f400593;   % 535: <4> li a1,500 %
000004d7 : 07300613;   % 535: <5> li a2,115 %
000004d8 : 07f00693;   % 535: <6> li a3,127 %
000004d9 : 08300893;   % 535: <7> li a7,131 %
000004da : 10008237;   % 535: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
000004db : 00020213;   % 535:  %
000004dc : 00419663;   % 535: <4> bne gp,tp,NotECALL_M115 %
000004dd : 00000073;   % 535: <19> ecall %
000004de : 0280006f;   % 535: <20> j FimECALL_M115 %
000004df : 0fcca217;   % 535: <21> NotECALL_M115: la tp,UEPC %
000004e0 : eac20213;   % 535:  %
000004e1 : 00000f97;   % 535: <22> la t6,FimECALL_M115	# endereco ap�s o ecall %
000004e2 : 01cf8f93;   % 535:  %
000004e3 : 01f22023;   % 535: <23> sw t6,0(tp)	# salva UEPC %
000004e4 : 00422203;   % 535: <24> lw tp,4(tp)	# UTVEC %
000004e5 : 00000013;   % 535: <25> nop %
000004e6 : 00000013;   % 535: <26> nop %
000004e7 : 00020067;   % 535: <27> jalr zero,tp,0	# chama UTVEC %
000004e8 : 00000013;   % 535: <28> FimECALL_M115: nop %
000004e9 : 08400893;   % 535: <9> li a7, 132 %
000004ea : 00a00513;   % 535: <10> li a0,10 %
000004eb : 10008237;   % 535: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
000004ec : 00020213;   % 535:  %
000004ed : 00419663;   % 535: <4> bne gp,tp,NotECALL_M117 %
000004ee : 00000073;   % 535: <19> ecall %
000004ef : 0280006f;   % 535: <20> j FimECALL_M117 %
000004f0 : 0fcca217;   % 535: <21> NotECALL_M117: la tp,UEPC %
000004f1 : e6820213;   % 535:  %
000004f2 : 00000f97;   % 535: <22> la t6,FimECALL_M117	# endereco ap�s o ecall %
000004f3 : 01cf8f93;   % 535:  %
000004f4 : 01f22023;   % 535: <23> sw t6,0(tp)	# salva UEPC %
000004f5 : 00422203;   % 535: <24> lw tp,4(tp)	# UTVEC %
000004f6 : 00000013;   % 535: <25> nop %
000004f7 : 00000013;   % 535: <26> nop %
000004f8 : 00020067;   % 535: <27> jalr zero,tp,0	# chama UTVEC %
000004f9 : 00000013;   % 535: <28> FimECALL_M117: nop %
000004fa : 0fc2c517;   % 536: 				la a0 Personagem_Pulando_14_24_2Frame_Espelhado %
000004fb : 08450513;   % 536:  %
000004fc : 00000297;   % 537: 				la t0 desenho_personagem %
000004fd : 05428293;   % 537:  %
000004fe : 00028067;   % 538: 	jalr x0 t0 0 %
000004ff : 00200293;   % 541: 				li t0 2 %
00000500 : 025462b3;   % 542: 				rem t0 s0 t0 # descobrir se s0 e impar ou par %
00000501 : 00028c63;   % 543: 				beq t0 zero imprimir_personagem_escada_2 %
00000502 : 0fc2b517;   % 544: 					la a0 Personagem_Escalando_10_26_1Frame %
00000503 : 73450513;   % 544:  %
00000504 : 00000297;   % 545: 					la t0 desenho_personagem %
00000505 : 03428293;   % 545:  %
00000506 : 00028067;   % 546: 	jalr x0 t0 0 %
00000507 : 0fc2c517;   % 548: 				la a0 Personagem_Escalando_10_26_2Frame %
00000508 : 82c50513;   % 548:  %
00000509 : 00000297;   % 549: 				la t0 desenho_personagem %
0000050a : 02028293;   % 549:  %
0000050b : 00028067;   % 550: 	jalr x0 t0 0 %
0000050c : 0fc2c517;   % 552: 				la a0 Personagem_Parado_16_24_1_Frame %
0000050d : 92450513;   % 552:  %
0000050e : 00000297;   % 553: 				la t0 desenho_personagem %
0000050f : 00c28293;   % 553:  %
00000510 : 00028067;   % 554: 	jalr x0 t0 0 %
00000511 : 00000297;   % 557: 				la t0 DesenhaSpritePersonagem %
00000512 : 70c28293;   % 557:  %
00000513 : 000280e7;   % 558: 	jalr ra t0 0 %
00000514 : 0fc0fa17;   % 559: 				lw s4 ultimaTeclaPressionada # salvando a ultima tecla pressionada %
00000515 : bb4a2a03;   % 559:  %
00000516 : 00800b33;   % 560: 				mv s6 s0 # salva o ultimo estado %
00000517 : 0fc0f297;   % 563: 				la t0 funcoesObjetosDoJogo %
00000518 : bac28293;   % 563:  %
00000519 : 01a28333;   % 564: 				add t1 t0 s10 %
0000051a : 00530e63;   % 565: 				while_chama_funcoes_do_jogo: beq t1 t0 fim_while_chama_funcoes_do_jogo %
0000051b : 0002a383;   % 566: 					lw t2 0(t0) %
0000051c : 000380e7;   % 567: 					jalr ra t2 0 %
0000051d : 00428293;   % 568: 					addi t0 t0 4 %
0000051e : 00000297;   % 569: 					la t0 while_chama_funcoes_do_jogo %
0000051f : ff028293;   % 569:  %
00000520 : 00028067;   % 570: 	jalr x0 t0 0 %
00000521 : 0fcca297;   % 573: 				la t0 posicaoPersonagemY %
00000522 : d6028293;   % 573:  %
00000523 : 0002a283;   % 574: 				lw t0 0(t0) %
00000524 : 09000313;   % 575: 				li t1 144 %
00000525 : 04534c63;   % 576: 				if_esta_em_cima: bgt t0 t1 else_esta_em_cima %
00000526 : 0fcca297;   % 577: 					la t0 posicaoPersonagemX %
00000527 : d4828293;   % 577:  %
00000528 : 0002a283;   % 578: 					lw t0 0(t0) %
00000529 : 13400313;   % 579: 					li t1 308 %
0000052a : 0262c063;   % 580: 					if_esta_na_direita_cima: blt t0 t1 else_esta_na_direita_cima %
0000052b : 008bac83;   % 581: 						lw s9 8(s7) %
0000052c : 00100c13;   % 582: 						li s8 1 %
0000052d : 01400713;   % 583: 						li a4 20 %
0000052e : 07800793;   % 584: 						li a5 120 %
0000052f : fffff297;   % 585: 						la t0 loop_troca_fase_Jogo %
00000530 : f5828293;   % 585:  %
00000531 : 00028067;   % 586: 	jalr x0 t0 0 %
00000532 : 00c00313;   % 588: 						li t1 12 %
00000533 : 06534a63;   % 589: 						if_esta_na_esquerda_cima: bgt t0 t1 else_esta_em_baixo %
00000534 : 000bac83;   % 590: 							lw s9 0(s7) %
00000535 : 00100c13;   % 591: 							li s8 1 %
00000536 : 12800713;   % 592: 							li a4 296 %
00000537 : 07800793;   % 593: 							li a5 120 %
00000538 : fffff297;   % 594: 							la t0 loop_troca_fase_Jogo %
00000539 : f3428293;   % 594:  %
0000053a : 00028067;   % 595: 	jalr x0 t0 0 %
0000053b : 0fcca297;   % 599: 						la t0 posicaoPersonagemX %
0000053c : cf428293;   % 599:  %
0000053d : 0002a283;   % 600: 						lw t0 0(t0) %
0000053e : 13400313;   % 601: 						li t1 308 %
0000053f : 0262c063;   % 602: 						if_esta_na_direita_baixo: blt t0 t1 else_esta_na_direita_baixo %
00000540 : 00cbac83;   % 603: 							lw s9 12(s7) %
00000541 : 00100c13;   % 604: 							li s8 1 %
00000542 : 01400713;   % 605: 							li a4 20 %
00000543 : 0c400793;   % 606: 							li a5 196 %
00000544 : fffff297;   % 607: 							la t0 loop_troca_fase_Jogo %
00000545 : f0428293;   % 607:  %
00000546 : 00028067;   % 608: 	jalr x0 t0 0 %
00000547 : 00c00313;   % 610: 							li t1 12 %
00000548 : 02534063;   % 611: 							if_esta_na_esquerda_baixo:  bgt t0 t1 else_esta_em_baixo %
00000549 : 004bac83;   % 612: 								lw s9 4(s7) %
0000054a : 00100c13;   % 613: 								li s8 1 %
0000054b : 12800713;   % 614: 								li a4 296 %
0000054c : 0c400793;   % 615: 								li a5 196 %
0000054d : fffff297;   % 616: 								la t0 loop_troca_fase_Jogo %
0000054e : ee028293;   % 616:  %
0000054f : 00028067;   % 617: 	jalr x0 t0 0 %
00000550 : 06400293;   % 622: 			li t0 100 %
00000551 : 01e00893;   % 624: 				li a7 30 %
00000552 : 10008237;   % 625: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
00000553 : 00020213;   % 625:  %
00000554 : 00419663;   % 625: <4> bne gp,tp,NotECALL_M119 %
00000555 : 00000073;   % 625: <19> ecall %
00000556 : 0280006f;   % 625: <20> j FimECALL_M119 %
00000557 : 0fcca217;   % 625: <21> NotECALL_M119: la tp,UEPC %
00000558 : ccc20213;   % 625:  %
00000559 : 00000f97;   % 625: <22> la t6,FimECALL_M119	# endereco ap�s o ecall %
0000055a : 01cf8f93;   % 625:  %
0000055b : 01f22023;   % 625: <23> sw t6,0(tp)	# salva UEPC %
0000055c : 00422203;   % 625: <24> lw tp,4(tp)	# UTVEC %
0000055d : 00000013;   % 625: <25> nop %
0000055e : 00000013;   % 625: <26> nop %
0000055f : 00020067;   % 625: <27> jalr zero,tp,0	# chama UTVEC %
00000560 : 00000013;   % 625: <28> FimECALL_M119: nop %
00000561 : 41550533;   % 626: 				sub a0 a0 s5 %
00000562 : fa554ee3;   % 627: 				blt a0 t0 while_nao_aconteceu_30_FPS # se o tempo for < 30 segundo fica preso no loop %
00000563 : 00400593;   % 629: 			li a1, 4				# coluna do relogio %
00000564 : 0e400613;   % 630: 			li a2, 228				# linha do relogio %
00000565 : 00001297;   % 631: 			la t0 RELOGIO_LOOP %
00000566 : 82c28293;   % 631:  %
00000567 : 000280e7;   % 632: 			jalr ra t0 0 %
00000568 : ff000537;   % 634: 			li a0, 0XFF000000		# end. bitmap %
00000569 : 00050513;   % 634:  %
0000056a : 0e400593;   % 635: 			li a1, 228				# coord Y %
0000056b : 11800613;   % 636: 			li a2, 280				# coord X %
0000056c : 00001297;   % 637: 			la t0 imprimir_vida	 %
0000056d : eb828293;   % 637:  %
0000056e : 000280e7;   % 638: 			jalr ra t0 0 %
0000056f : 00001297;   % 640: 			la t0 imprimir_pontuacao %
00000570 : ad428293;   % 640:  %
00000571 : 000280e7;   % 641: 			jalr ra t0 0 %
00000572 : fffff297;   % 643: 			la t0 loop_do_jogo_Jogo %
00000573 : ee428293;   % 643:  %
00000574 : 00028067;   % 644: 			jalr x0 t0 0 %
00000575 : fffff297;   % 646: 		la t0 loop_troca_fase_Jogo %
00000576 : e4028293;   % 646:  %
00000577 : 00028067;   % 647: 		jalr x0 t0 0 %
00000578 : 00012083;   % 649: 	lw ra 0(sp) %
00000579 : 00410113;   % 650: 	addi sp sp 4 %
0000057a : 00008067;   % 651: FimJogo: jalr x0 ra 0 %
0000057b : ff410113;   % 3: 	addi sp  sp  -12 %
0000057c : 00112023;   % 4: 	sw ra, 0(sp) %
0000057d : 00812223;   % 5: 	sw s0  4(sp) %
0000057e : 00912423;   % 6: 	sw s1 8(sp) %
0000057f : 00a002b3;   % 8: 	mv t0  a0 # inicio e endere�o atual %
00000580 : 00b00333;   % 9: 	mv t1  a1 # local (memoria) que o bin esta armazenado %
00000581 : 00c003b3;   % 10: 	mv t2  a2  %
00000582 : 00d00e33;   % 11: 	mv t3  a3  %
00000583 : 00000e93;   % 12: 	li t4  0 # contador horizontal %
00000584 : 00000f13;   % 13: 	li t5  0 # contador vertical %
00000585 : 14000413;   % 14: 	li s0  320 # largura do mapa %
00000586 : 03cf0a63;   % 15: loopDesenhaHalf:beq t5  t3  fimloopDesenhaHalf %
00000587 : 007e8e63;   % 16: testeFimLinha:	beq t4  t2  fimDaLinhaSprite %
00000588 : 00031f83;   % 17: 	lh t6  0(t1) # carrega o valor da half que esta em a1 %
00000589 : 01f29023;   % 18: 	sh t6  0(t0) # manda o valor que esta dentro dos dados para o display  posicao s0 %
0000058a : 00228293;   % 19: 	addi t0  t0  2 # proximos 2pixel do mapa %
0000058b : 00230313;   % 20: 	addi t1  t1  2 # proximos 2 pixel do player %
0000058c : 002e8e93;   % 21: 	addi t4  t4  2 # itera  horizontal %
0000058d : fe5ff06f;   % 22: 	j loopDesenhaHalf %
0000058e : 407404b3;   % 24: 	sub s1  s0  t2 #subtrai largura da sprite de 320 %
0000058f : 009282b3;   % 25: 	add t0  t0  s1 #pula uma linha (320 - largura) %
00000590 : 001f0f13;   % 26: 	addi t5  t5  1 #itera o contador vertical %
00000591 : 00000e93;   % 27: 	li t4  0 #reseta o contador %
00000592 : fd1ff06f;   % 28: 	j loopDesenhaHalf %
00000593 : 00012083;   % 30: 	lw ra 0(sp) %
00000594 : 00412403;   % 31: 	lw s0 4(sp) %
00000595 : 00812483;   % 32: 	lw s1 8(sp) %
00000596 : 00c10113;   % 33: 	addi sp  sp  12 %
00000597 : 00008067;   % 34: 	jalr x0 ra 0 %
00000598 : 0fcca297;   % 20:     la t0 vectorFases %
00000599 : 95c28293;   % 20:  %
0000059a : 18c28313;   % 22:     addi t1 t0 396 # ponteiro da fase 10 %
0000059b : 0062a023;   % 23:     sw t1 0(t0) # ponteiro superior esquerda %
0000059c : 0062a223;   % 24:     sw t1 4(t0) # ponteiro interior esquerda %
0000059d : 02c28313;   % 26:     addi t1 t0 44 # ponteiro da fase 2 %
0000059e : 0062a423;   % 27:     sw t1 8(t0)  # ponteiro superior direita %
0000059f : 0062a623;   % 28:     sw t1 12(t0) # ponteiro inferior direita %
000005a0 : 0fc2c317;   % 40:     la t1 fase1 %
000005a1 : 0f430313;   % 40:  %
000005a2 : 0262a023;   % 41:     sw t1 32(t0) # tipo basico de chão/escada/tojolo %
000005a3 : 02c28293;   % 47:     addi t0 t0 44 %
000005a4 : 02c28313;   % 49:     addi t1 t0 44 # ponteiro da fase 1 %
000005a5 : 0062a023;   % 50:     sw t1 0(t0) # ponteiro superior esquerda %
000005a6 : 0062a223;   % 51:     sw t1 4(t0) # ponteiro interior esquerda %
000005a7 : 02c28313;   % 53:     addi t1 t0 44 # ponteiro da fase 3 %
000005a8 : 0062a423;   % 54:     sw t1 8(t0)  # ponteiro superior direita %
000005a9 : 0062a623;   % 55:     sw t1 12(t0) # ponteiro inferior direita %
000005aa : 0fc0f317;   % 67:     la t1 fase2 %
000005ab : f7830313;   % 67:  %
000005ac : 0262a023;   % 68:     sw t1 32(t0) # tipo basico de chão/escada/tojolo %
000005ad : 02c28293;   % 74:     addi t0 t0 44 %
000005ae : 02c28313;   % 76:     addi t1 t0 44 # ponteiro da fase 2 %
000005af : 0062a023;   % 77:     sw t1 0(t0) # ponteiro superior esquerda %
000005b0 : 0062a223;   % 78:     sw t1 4(t0) # ponteiro interior esquerda %
000005b1 : 02c28313;   % 80:     addi t1 t0 44 # ponteiro da fase 4 %
000005b2 : 0062a423;   % 81:     sw t1 8(t0)  # ponteiro superior direita %
000005b3 : 0062a623;   % 82:     sw t1 12(t0) # ponteiro inferior direita %
000005b4 : 0fc3e317;   % 95:     la t1 fase3 %
000005b5 : 8ac30313;   % 95:  %
000005b6 : 0262a023;   % 96:     sw t1 32(t0) # tipo basico de chão/escada/tojolo %
000005b7 : 02c28293;   % 103:     addi t0 t0 44 %
000005b8 : 02c28313;   % 105:     addi t1 t0 44 # ponteiro da fase 3 %
000005b9 : 0062a023;   % 106:     sw t1 0(t0) # ponteiro superior esquerda %
000005ba : 0062a223;   % 107:     sw t1 4(t0) # ponteiro interior esquerda %
000005bb : 02c28313;   % 109:     addi t1 t0 44 # ponteiro da fase 5 %
000005bc : 0062a423;   % 110:     sw t1 8(t0)  # ponteiro superior direita %
000005bd : 0062a623;   % 111:     sw t1 12(t0) # ponteiro inferior direita %
000005be : 0fc4f317;   % 122:     la t1 fase4 %
000005bf : 08c30313;   % 122:  %
000005c0 : 0262a023;   % 123:     sw t1 32(t0) # tipo basico de chão/escada/tojolo %
000005c1 : 02c28293;   % 130:     addi t0 t0 44 %
000005c2 : 02c28313;   % 132:     addi t1 t0 44 # ponteiro da fase 4 %
000005c3 : 0062a023;   % 133:     sw t1 0(t0) # ponteiro superior esquerda %
000005c4 : 0062a223;   % 134:     sw t1 4(t0) # ponteiro interior esquerda %
000005c5 : 02c28313;   % 136:     addi t1 t0 44 # ponteiro da fase 6 %
000005c6 : 0062a423;   % 137:     sw t1 8(t0)  # ponteiro superior direita %
000005c7 : 0062a623;   % 138:     sw t1 12(t0) # ponteiro inferior direita %
000005c8 : 0fc61317;   % 150:     la t1 fase5 %
000005c9 : 86c30313;   % 150:  %
000005ca : 0262a023;   % 151:     sw t1 32(t0) # tipo basico de chão/escada/tojolo %
000005cb : 02c28293;   % 157:     addi t0 t0 44 %
000005cc : fd428313;   % 159:     addi t1 t0 -44 # ponteiro da fase 5 %
000005cd : 0062a023;   % 160:     sw t1 0(t0) # ponteiro superior esquerda %
000005ce : 0062a223;   % 161:     sw t1 4(t0) # ponteiro interior esquerda %
000005cf : 02c28313;   % 163:     addi t1 t0 44 # ponteiro da fase 7 %
000005d0 : 0062a423;   % 164:     sw t1 8(t0)  # ponteiro superior direita %
000005d1 : 0062a623;   % 165:     sw t1 12(t0) # ponteiro inferior direita %
000005d2 : 0fc72317;   % 177:     la t1 fase6 %
000005d3 : 04c30313;   % 177:  %
000005d4 : 0262a023;   % 178:     sw t1 32(t0) # tipo basico de chão/escada/tojolo %
000005d5 : 02c28293;   % 185:     addi t0 t0 44 %
000005d6 : fd428313;   % 187:     addi t1 t0 -44 # ponteiro da fase 6 %
000005d7 : 0062a023;   % 188:     sw t1 0(t0) # ponteiro superior esquerda %
000005d8 : 0062a223;   % 189:     sw t1 4(t0) # ponteiro interior esquerda %
000005d9 : 02c28313;   % 191:     addi t1 t0 44 # ponteiro da fase 8 %
000005da : 0062a423;   % 192:     sw t1 8(t0)  # ponteiro superior direita %
000005db : 0062a623;   % 193:     sw t1 12(t0) # ponteiro inferior direita %
000005dc : 0fc84317;   % 205:     la t1 fase7 %
000005dd : 82c30313;   % 205:  %
000005de : 0262a023;   % 206:     sw t1 32(t0) # tipo basico de chão/escada/tojolo %
000005df : 02c28293;   % 213:     addi t0 t0 44 %
000005e0 : fd428313;   % 215:     addi t1 t0 -44 # ponteiro da fase 7 %
000005e1 : 0062a023;   % 216:     sw t1 0(t0) # ponteiro superior esquerda %
000005e2 : 0062a223;   % 217:     sw t1 4(t0) # ponteiro interior esquerda %
000005e3 : 02c28313;   % 219:     addi t1 t0 44 # ponteiro da fase 9 %
000005e4 : 0062a423;   % 220:     sw t1 8(t0)  # ponteiro superior direita %
000005e5 : 0062a623;   % 221:     sw t1 12(t0) # ponteiro inferior direita %
000005e6 : 0fc95317;   % 233:     la t1 fase8 %
000005e7 : 00c30313;   % 233:  %
000005e8 : 0262a023;   % 234:     sw t1 32(t0) # tipo basico de chão/escada/tojolo %
000005e9 : 02c28293;   % 241:     addi t0 t0 44 %
000005ea : fd428313;   % 243:     addi t1 t0 -44 # ponteiro da fase 8 %
000005eb : 0062a023;   % 244:     sw t1 0(t0) # ponteiro superior esquerda %
000005ec : 0062a223;   % 245:     sw t1 4(t0) # ponteiro interior esquerda %
000005ed : 02c28313;   % 247:     addi t1 t0 44 # ponteiro da fase 10 %
000005ee : 0062a423;   % 248:     sw t1 8(t0)  # ponteiro superior direita %
000005ef : 0062a623;   % 249:     sw t1 12(t0) # ponteiro inferior direita %
000005f0 : 0fca6317;   % 259:     la t1 fase9 %
000005f1 : 7ec30313;   % 259:  %
000005f2 : 0262a023;   % 260:     sw t1 32(t0) # tipo basico de chão/escada/tojolo %
000005f3 : 02c28293;   % 266:     addi t0 t0 44 %
000005f4 : fd428313;   % 268:     addi t1 t0 -44 # ponteiro da fase 8 %
000005f5 : 0062a023;   % 269:     sw t1 0(t0) # ponteiro superior esquerda %
000005f6 : 0062a223;   % 270:     sw t1 4(t0) # ponteiro interior esquerda %
000005f7 : e7428313;   % 272:     addi t1 t0 -396 # ponteiro da fase 10 %
000005f8 : 0062a423;   % 273:     sw t1 8(t0)  # ponteiro superior direita %
000005f9 : 0062a623;   % 274:     sw t1 12(t0) # ponteiro inferior direita %
000005fa : 0fcb8317;   % 286:     la t1 fase10 %
000005fb : fcc30313;   % 286:  %
000005fc : 0262a023;   % 287:     sw t1 32(t0) # tipo basico de chão/escada/tojolo %
000005fd : 00008067;   % 294: FimInitFases: jalr x0 ra 0 %
000005fe : 00000013;   % 5: ColisaoObj: nop %
000005ff : 00e522b3;   % 7: 	slt t0 a0 a4 %
00000600 : 00c72333;   % 9: 	slt t1 a4 a2 %
00000601 : 0062f2b3;   % 11: 	and t0 t0 t1 %
00000602 : 00b7a333;   % 13: 	slt t1 a5 a1 %
00000603 : 0062f2b3;   % 15: 	and t0 t0 t1 %
00000604 : 00f6a333;   % 17: 	slt t1 a3 a5 %
00000605 : 0062f533;   % 19: 	and a0 t0 t1 %
00000606 : 00008067;   % 20: FimColisaoObj: jalr x0 ra 0 %
00000607 : 00000013;   % 22: LeTeclaDoTeclado:	nop %
00000608 : 00000513;   % 23: 	li a0 0 %
00000609 : ff200337;   % 24: 	li t1 0xFF200000 # carrega valor da memória inicial do tecla %
0000060a : 00030313;   % 24:  %
0000060b : 00032583;   % 25: 	lw a1 0(t1) # carrega a word onde tem o bit que diz que uma teca foi apertada %
0000060c : 0015f593;   % 26: 	andi a1 a1 0x0001 # deixa somente o bit que diz que uma teca foi apertada %
0000060d : 00058663;   % 27:   if_tem_tecla_apertada_LeTeclaDoTeclado: beq a1 x0 FimLeTeclaDoTeclado # if nenhuma tecla foi apertada ele cai fora %
0000060e : 00432503;   % 28:   	lw a0, 4(t1) # carrega o valor da tecla apertada em a0 %
0000060f : 00a32623;   % 29:   	sw a0, 12(t1) # mostra no display a tecla pressionada %
00000610 : 00008067;   % 31: FimLeTeclaDoTeclado: jalr x0 ra 0 %
00000611 : ff410113;   % 34: 	addi sp  sp  -12 %
00000612 : 00112023;   % 35: 	sw ra, 0(sp) %
00000613 : 00812223;   % 36: 	sw s0  4(sp) %
00000614 : 00912423;   % 37: 	sw s1 8(sp) %
00000615 : 00a002b3;   % 39: 	mv t0  a0 # inicio e endere�o atual %
00000616 : 00b00333;   % 40: 	mv t1  a1 # local (memoria) que o bin esta armazenado %
00000617 : 00c003b3;   % 41: 	mv t2  a2  %
00000618 : 00d00e33;   % 42: 	mv t3  a3  %
00000619 : 00000e93;   % 43: 	li t4  0 # contador horizontal %
0000061a : 00000f13;   % 44: 	li t5  0 # contador vertical %
0000061b : 14000413;   % 45: 	li s0  320 # largura do mapa %
0000061c : 03cf0a63;   % 46: loopDesenhaWord:beq t5  t3  fimloopDesenhaWord %
0000061d : 007e8e63;   % 47: testeFimLinhaWord:	beq t4  t2  fimDaLinhaSpriteWord %
0000061e : 00032f83;   % 48: 	lw t6  0(t1) # carrega o valor da half que esta em a1 %
0000061f : 01f2a023;   % 49: 	sw t6  0(t0) # manda o valor que esta dentro dos dados para o display  posicao s0 %
00000620 : 00428293;   % 50: 	addi t0  t0  4 # proximos 2pixel do mapa %
00000621 : 00430313;   % 51: 	addi t1  t1  4 # proximos 2 pixel do player %
00000622 : 004e8e93;   % 52: 	addi t4  t4  4 # itera  horizontal %
00000623 : fe5ff06f;   % 53: 	j loopDesenhaWord %
00000624 : 407404b3;   % 55: 	sub s1  s0  t2 #subtrai largura da sprite de 320 %
00000625 : 009282b3;   % 56: 	add t0  t0  s1 #pula uma linha (320 - largura) %
00000626 : 001f0f13;   % 57: 	addi t5  t5  1 #itera o contador vertical %
00000627 : 00000e93;   % 58: 	li t4  0 #reseta o contador %
00000628 : fd1ff06f;   % 59: 	j loopDesenhaWord %
00000629 : 00012083;   % 61: 	lw ra 0(sp) %
0000062a : 00412403;   % 62: 	lw s0 4(sp) %
0000062b : 00812483;   % 63: 	lw s1 8(sp) %
0000062c : 00c10113;   % 64: 	addi sp  sp  12 %
0000062d : 00008067;   % 65: 	jalr x0 ra 0 %
0000062e : 08d00893;   % 68: CLS:	li a7,141 %
0000062f : 00000513;   % 70: 	li a0,0x00 %
00000630 : 09400893;   % 71: 	li a7,148 %
00000631 : 10008237;   % 72: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
00000632 : 00020213;   % 72:  %
00000633 : 00419663;   % 72: <4> bne gp,tp,NotECALL_M121 %
00000634 : 00000073;   % 72: <19> ecall %
00000635 : 0280006f;   % 72: <20> j FimECALL_M121 %
00000636 : 0fcca217;   % 72: <21> NotECALL_M121: la tp,UEPC %
00000637 : 95020213;   % 72:  %
00000638 : 00000f97;   % 72: <22> la t6,FimECALL_M121	# endereco ap�s o ecall %
00000639 : 01cf8f93;   % 72:  %
0000063a : 01f22023;   % 72: <23> sw t6,0(tp)	# salva UEPC %
0000063b : 00422203;   % 72: <24> lw tp,4(tp)	# UTVEC %
0000063c : 00000013;   % 72: <25> nop %
0000063d : 00000013;   % 72: <26> nop %
0000063e : 00020067;   % 72: <27> jalr zero,tp,0	# chama UTVEC %
0000063f : 00000013;   % 72: <28> FimECALL_M121: nop %
00000640 : 00008067;   % 73: 	ret %
00000641 : 0fcca497;   % 23: 	la s1 vectorAditionalParaPulo %
00000642 : 8e448493;   % 23:  %
00000643 : 0204a303;   % 24: 	lw t1 32(s1) %
00000644 : ff810113;   % 25: 	addi sp, sp, -8 %
00000645 : 00112023;   % 26: 	sw ra 0(sp) %
00000646 : 00a12223;   % 27: 	sw a0 4(sp) %
00000647 : 3e9000ef;   % 28: 	jal inicioPuloVertical %
00000648 : 44d000ef;   % 29: 	jal inicioPuloVerticalEsquerda %
00000649 : 6d1000ef;   % 30: 	jal incioPuloDireita %
0000064a : 75d000ef;   % 31: 	jal incioPuloEsquerda %
0000064b : 00001297;   % 32: 	la t0 incioQueda %
0000064c : 15828293;   % 32:  %
0000064d : 000280e7;   % 33: 	jalr t0 0 %
0000064e : 00001297;   % 34: 	la t0 incioSaidaEscada %
0000064f : 1a828293;   % 34:  %
00000650 : 000280e7;   % 35: 	jalr t0 0 %
00000651 : 00100293;   % 36: 	li t0 1 %
00000652 : 005b22b3;   % 37: 	slt t0 s6 t0 # t0 = 1 se o ultimo estado for ele parado %
00000653 : 00642333;   % 38: 	slt t1 s0 t1 # t1 = 1 se o estado atual e ele parado %
00000654 : 1e62c863;   % 39: 	bgt t1 t0 FimMovePersonagem # se o estado atual for parado e o ultimo estado nao, terminar %
00000655 : 00412503;   % 40: 	lw a0 4(sp) %
00000656 : 0204a303;   % 41: 	lw t1 32(s1) %
00000657 : 02000293;   % 42: 	li t0 ' ' %
00000658 : 06551463;   % 43: 	if_tecla_de_pular_foi_apertada_MovePersonagem: bne a0 t0 else_tecla_de_pular_foi_apertada_MovePersonagem %
00000659 : 00130313;   % 45: 		addi t1 t1 1 %
0000065a : 00b00293;   % 46: 		li t0 11 %
0000065b : 02536333;   % 47: 		rem t1 t1 t0 %
0000065c : 0264a823;   % 48: 		sw t1 48(s1) %
0000065d : 1c030663;   % 50: 		beq t1 x0 FimMovePersonagem %
0000065e : 00041463;   % 51: 		bne s0, zero, else_estado_zero  %
0000065f : 00100413;   % 53: 			li s0 1 %
00000660 : fff00293;   % 56: 		li t0 -1 %
00000661 : 00541463;   % 57: 		bne s0, t0, else_parado_esquerda  # se nao esta parado para a esquerda %
00000662 : 02800413;   % 59: 			li s0 40 # pula vertical para a esquerda %
00000663 : 06400293;   % 62: 		li t0 'd' %
00000664 : 005a0a63;   % 63: 		beq s4 t0 espaco_precedido_de_d %
00000665 : 06100293;   % 64: 			li t0 'a' %
00000666 : 005a0c63;   % 65: 			beq s4 t0 espaco_precedido_de_a %
00000667 : 369000ef;   % 66: 				jal ra inicioPuloVertical %
00000668 : 01c0006f;   % 67: 				j finalPulo %
00000669 : 00f00413;   % 69: 			li s0 15 %
0000066a : 64d000ef;   % 70: 			jal ra incioPuloDireita %
0000066b : 0100006f;   % 71: 			j finalPulo %
0000066c : 01e00413;   % 73: 			li s0 30 %
0000066d : 6d1000ef;   % 74: 			jal ra incioPuloEsquerda %
0000066e : 0040006f;   % 75: 			j finalPulo %
0000066f : 00012083;   % 78: 		lw ra 0(sp) %
00000670 : 00810113;   % 79: 		addi sp, sp, 8 %
00000671 : 00008067;   % 80: 		jalr x0 ra 0 %
00000672 : 00000013;   % 81: 	else_tecla_de_pular_foi_apertada_MovePersonagem: nop %
00000673 : 06100293;   % 82: 		li t0 'a' %
00000674 : 02551463;   % 83: 		if_tecla_de_a_foi_apertada_MovePersonagem: bne a0 t0 else_tecla_de_a_foi_apertada_MovePersonagem %
00000675 : 1d0000ef;   % 84: 			jal ra ApagaPersonagem %
00000676 : 01800293;   % 86: 			li t0 24 %
00000677 : 0082d863;   % 87: 			ble s0, t0, if_esta_correndo_esquerda  %
00000678 : 01e00293;   % 88: 			li t0 30 %
00000679 : 00545463;   % 89: 			bge s0, t0, if_esta_correndo_esquerda  %
0000067a : 0080006f;   % 90: 			j else_esta_correndo_esquerda %
0000067b : 01900413;   % 92: 				li s0 25 %
0000067c : 4f9000ef;   % 94: 			jal ra andarEsquerda %
0000067d : 14c0006f;   % 95: 			j FimMovePersonagem %
0000067e : 00000013;   % 97: 		else_tecla_de_a_foi_apertada_MovePersonagem: nop %
0000067f : 06400293;   % 98: 			li t0 'd'	  %
00000680 : 02551463;   % 99: 			if_tecla_de_d_foi_apertada_MovePersonagem: bne a0 t0 else_tecla_de_d_foi_apertada_MovePersonagem %
00000681 : 1a0000ef;   % 100: 				jal ra ApagaPersonagem %
00000682 : 00900293;   % 102: 				li t0 9 %
00000683 : 0082a333;   % 103: 				sgt t1 s0 t0 %
00000684 : 00f00293;   % 104: 				li t0 15 %
00000685 : 005423b3;   % 105: 				slt t2, s0, t0 %
00000686 : 00638463;   % 106: 				beq t2 t1 else_esta_correndo_direita %
00000687 : 00a00413;   % 108: 					li s0 10 %
00000688 : 3c9000ef;   % 110: 				jal ra andarDireita %
00000689 : 11c0006f;   % 114: 				j FimMovePersonagem %
0000068a : 07700293;   % 116: 					li t0 'w' %
0000068b : 04551c63;   % 117: 					if_tecla_de_w_foi_apertada_MovePersonagem: bne a0 t0 else_tecla_de_w_foi_apertada_MovePersonagem %
0000068c : 174000ef;   % 119: 						jal ra ApagaPersonagem %
0000068d : 09200293;   % 121: 						li t0 146 %
0000068e : 0fcc9317;   % 122: 						lw t1 posicaoPersonagemX %
0000068f : 7a832303;   % 122:  %
00000690 : 0062a3b3;   % 123: 						sgt t2 t1 t0 %
00000691 : 0ad00293;   % 124: 						li t0 173 %
00000692 : 00532e33;   % 125: 						slt t3 t1 t0 # se o personagem esta na linha da escada %
00000693 : 01c38463;   % 126: 						beq t2 t3 else_nao_esta_na_escada_cima %
00000694 : 0340006f;   % 128: 							j else_tecla_de_w_foi_apertada_MovePersonagem %
00000695 : 03100293;   % 130: 							li t0 49 %
00000696 : 0082a333;   % 131: 							sgt t1 s0 t0 %
00000697 : 03d00293;   % 132: 							li t0 61 %
00000698 : 005423b3;   % 133: 							slt t2 s0 t0 # se o personagem estiver na animacao da escada %
00000699 : 00638a63;   % 134: 							beq t2 t1 else_nao_esta_animacao_escada_cima %
0000069a : 03200413;   % 136: 								li s0 50 %
0000069b : 00412503;   % 137: 								lw a0 4(sp) %
0000069c : 6b1000ef;   % 138: 								jal ra incioEscada %
0000069d : 0cc0006f;   % 139: 								j FimMovePersonagem %
0000069e : 00412503;   % 141: 								lw a0 4(sp) %
0000069f : 6a5000ef;   % 142: 								jal ra incioEscada %
000006a0 : 0c00006f;   % 143: 								j FimMovePersonagem %
000006a1 : 07300293;   % 145: 						li t0 's' %
000006a2 : 06551463;   % 146: 						if_tecla_de_s_foi_apertada_MovePersonagem: bne a0 t0 else_tecla_de_s_foi_apertada_MovePersonagem %
000006a3 : 118000ef;   % 147: 							jal ra ApagaPersonagem %
000006a4 : 09200293;   % 149: 							li t0 146 %
000006a5 : 0fcc9317;   % 150: 							lw t1 posicaoPersonagemX %
000006a6 : 74c32303;   % 150:  %
000006a7 : 0062a3b3;   % 151: 							sgt t2 t1 t0 %
000006a8 : 0ad00293;   % 152: 							li t0 173 %
000006a9 : 00532e33;   % 153: 							slt t3 t1 t0 # se o personagem esta na linha da escada %
000006aa : 01c38463;   % 154: 							beq t2 t3 else_nao_esta_na_escada_baixo %
000006ab : 0440006f;   % 156: 								j else_tecla_de_s_foi_apertada_MovePersonagem %
000006ac : 03100293;   % 158: 								li t0 49 %
000006ad : 0082a333;   % 159: 								sgt t1 s0 t0 %
000006ae : 03d00293;   % 160: 								li t0 61 %
000006af : 005423b3;   % 161: 								slt t2 s0 t0 # se o personagem estiver na animacao da escada %
000006b0 : 02638263;   % 162: 								beq t2 t1 else_nao_esta_animacao_escada_baixo %
000006b1 : 0fcc9297;   % 164: 									lw t0 posicaoPersonagemY %
000006b2 : 7202a283;   % 164:  %
000006b3 : 0a000313;   % 165: 									li t1 160 %
000006b4 : 0662d863;   % 166: 									bge t0 t1 FimMovePersonagem # se o personagem estiver na caverna  %
000006b5 : 03c00413;   % 167: 									li s0 60 %
000006b6 : 00412503;   % 168: 									lw a0 4(sp) %
000006b7 : 645000ef;   % 169: 									jal ra incioEscada %
000006b8 : 0600006f;   % 170: 									j FimMovePersonagem %
000006b9 : 00412503;   % 172: 									lw a0 4(sp) %
000006ba : 639000ef;   % 173: 									jal ra incioEscada %
000006bb : 0540006f;   % 174: 									j FimMovePersonagem %
000006bc : 00000293;   % 176: 							li t0 0 %
000006bd : 02540c63;   % 177: 							beq s0 t0 if_nada_pressionado_e_perso_parado %
000006be : fff00293;   % 178: 								li t0 -1 %
000006bf : 02540c63;   % 179: 								beq s0 t0 personagemParadoParaAEsquerda %
000006c0 : 03100293;   % 180: 									li t0 49 %
000006c1 : 0162a2b3;   % 181: 									sgt t0 s6 t0 %
000006c2 : 03d00313;   % 182: 									li t1 61 %
000006c3 : 006b2333;   % 183: 									slt t1 s6 t1 # se o ultimo estado foi estar na escada %
000006c4 : 02628663;   % 184: 									beq t0 t1 personagemParadoEscada %
000006c5 : 090000ef;   % 186: 									jal ra ApagaPersonagem %
000006c6 : 01800293;   % 188: 									li t0 24 %
000006c7 : 0162a2b3;   % 189: 									sgt t0 s6 t0 %
000006c8 : 01e00313;   % 190: 									li t1 30 %
000006c9 : 006b2333;   % 191: 									slt t1 s6 t1 # se o ultimo estado foi uma andada para a esquerda %
000006ca : 00628663;   % 192: 									beq t0 t1 personagemParadoParaAEsquerda %
000006cb : 00000413;   % 195: 								li s0 0 # personagem parado para a direita %
000006cc : 0100006f;   % 196: 								j FimMovePersonagem %
000006cd : fff00413;   % 198: 								li s0 -1 %
000006ce : 0080006f;   % 199: 								j FimMovePersonagem %
000006cf : 00800a33;   % 201: 								mv s4 s0 %
000006d0 : 00012083;   % 204: 		lw ra 0(sp) %
000006d1 : 00412503;   % 205: 		lw a0 4(sp) %
000006d2 : 00810113;   % 206: 		addi sp, sp, 8 %
000006d3 : 00008067;   % 207: 		jalr x0 ra 0 %
000006d4 : ffc10113;   % 212: 	addi sp sp -4  %
000006d5 : 00112023;   % 213: 	sw ra 0(sp) %
000006d6 : 00a00333;   % 214: 	mv t1 a0 %
000006d7 : 00032603;   % 216: 	lw a2, 0(t1) # a2 = largura da sprite %
000006d8 : 00432683;   % 217: 	lw a3 4(t1) # a3 = altura da sprite %
000006d9 : 0fcc9517;   % 219: 	lw a0 posicaoPersonagemY %
000006da : 68052503;   % 219:  %
000006db : 14000293;   % 220: 	li t0 320 %
000006dc : 02550533;   % 221: 	mul a0 a0 t0 # a0 = y*320 %
000006dd : 0fcc9297;   % 222: 	lw t0 posicaoPersonagemX %
000006de : 66c2a283;   % 222:  %
000006df : 00a28533;   % 223: 	add a0 t0 a0 # a0 = y*320 + x %
000006e0 : ff0002b7;   % 224: 	li t0 0xff000000 %
000006e1 : 00028293;   % 224:  %
000006e2 : 00550533;   % 225: 	add a0 a0 t0 # a0 = posicao da memoria que a sprite comeca %
000006e3 : 006005b3;   % 226: 	mv a1 t1  %
000006e4 : 00858593;   % 227: 	addi a1 a1 8 # a1 = dados do sprite %
000006e5 : a59ff0ef;   % 228: 	jal ra printSprite %
000006e6 : 00012083;   % 231: 	lw ra 0(sp) %
000006e7 : 00410113;   % 232: 	addi sp sp 4 %
000006e8 : 00008067;   % 233: 	jalr x0 ra 0 %
000006e9 : fe410113;   % 237: 	addi sp sp -28  %
000006ea : 00112023;   % 238: 	sw ra 0(sp) %
000006eb : 00812223;   % 239: 	sw s0 4(sp) %
000006ec : 00912423;   % 240: 	sw s1 8(sp) %
000006ed : 01212623;   % 241: 	sw s2 12(sp) %
000006ee : 01312823;   % 242: 	sw s3 16(sp) %
000006ef : 01412a23;   % 243: 	sw s4 20(sp) %
000006f0 : 01512c23;   % 244: 	sw s5 24(sp) %
000006f1 : 00000293;   % 247: 			li t0 0 %
000006f2 : 0162a333;   % 248: 			sgt t1 s6 t0 %
000006f3 : 00a00293;   % 249: 			li t0 10 %
000006f4 : 005b23b3;   % 250: 			slt t2 s6 t0 %
000006f5 : 0e638863;   % 251: 			beq t2 t1 la_personagem_pulo_direita1 # apaga a sprite do pulo vertical %
000006f6 : 00a00293;   % 252:             li t0 10 # estado corrida direita 1 %
000006f7 : 0a5b0663;   % 253: 			beq s6 t0 la_personagem_correndo_1 # apaga a sprite 1 de personagem correndo %
000006f8 : 00b00293;   % 254:             li t0 11 # estado corrida direita 2 %
000006f9 : 0a5b0863;   % 255: 			beq s6 t0 la_personagem_correndo_2 # apaga a sprite 2 de personagem correndo %
000006fa : 00c00293;   % 256:             li t0 12 # estado corrida direita 3 %
000006fb : 0a5b0a63;   % 257: 			beq s6 t0 la_personagem_correndo_3 # apaga a sprite 3 de personagem correndo %
000006fc : 00d00293;   % 258:             li t0 13 # estado corrida direita 4 %
000006fd : 0a5b0c63;   % 259: 			beq s6 t0 la_personagem_correndo_4 # apaga a sprite 4 de personagem correndo %
000006fe : 00e00293;   % 260:             li t0 14 # estado corrida direita 5 %
000006ff : 0a5b0e63;   % 261: 			beq s6 t0 la_personagem_correndo_5 # apaga a sprite 5 de personagem correndo %
00000700 : 00f00293;   % 262:             li t0 15 # estado pulo 1 %
00000701 : 0c5b0063;   % 263: 			beq s6 t0 la_personagem_pulo_direita1 # apaga a sprite 1 de personagem pulando %
00000702 : 00f00293;   % 264:             li t0 15 %
00000703 : 0082a333;   % 265: 			sgt t1 s0 t0  # s0 >= 16 %
00000704 : 01900293;   % 266: 			li t0 25 %
00000705 : 005423b3;   % 267: 			slt t2 s0 t0  # s0 <= 26 %
00000706 : 0a638c63;   % 268: 			beq t2 t1 la_personagem_pulo_direita2 %
00000707 : 01900293;   % 270: 			li t0 25  %
00000708 : 0a540e63;   % 271: 			beq s0 t0 la_personagem_correndo1_esquerda # 1 frame da corrida para a esquerda %
00000709 : 01a00293;   % 272: 			li t0 26  %
0000070a : 0c540063;   % 273: 			beq s0 t0 la_personagem_correndo2_esquerda # 2 frame da corrida para a esquerda %
0000070b : 01b00293;   % 274: 			li t0 27  %
0000070c : 0c540263;   % 275: 			beq s0 t0 la_personagem_correndo3_esquerda # 3 frame da corrida para a esquerda %
0000070d : 01c00293;   % 276: 			li t0 28  %
0000070e : 0c540463;   % 277: 			beq s0 t0 la_personagem_correndo4_esquerda # 4 frame da corrida para a esquerda %
0000070f : 01d00293;   % 278: 			li t0 29  %
00000710 : 0c540663;   % 279: 			beq s0 t0 la_personagem_correndo5_esquerda # 5 frame da corrida para a esquerda %
00000711 : 01e00293;   % 281: 			li t0 30  %
00000712 : 0c540863;   % 282: 			beq s0 t0 la_personagem_pulo_direita1_Espelhado # pulo para a direita %
00000713 : 01e00293;   % 283: 			li t0 30 %
00000714 : 0082a333;   % 284: 			sgt t1 s0 t0  # s0 >= 31 %
00000715 : 02800293;   % 285: 			li t0 40 %
00000716 : 005423b3;   % 286: 			slt t2 s0 t0  # s0 <= 39 %
00000717 : 0c638463;   % 287: 			beq t2 t1 la_personagem_pulo_direita2_Espelhado %
00000718 : 02700293;   % 289: 			 li t0 39 %
00000719 : 0082a333;   % 290: 			 sgt t1 s0 t0  # s0 >= 40 %
0000071a : 03200293;   % 291: 			 li t0 50 %
0000071b : 005423b3;   % 292: 			 slt t2 s0 t0  # s0 <= 49 %
0000071c : 0a638a63;   % 293: 			 beq t2 t1 la_personagem_pulo_direita2_Espelhado %
0000071d : 03100293;   % 295: 			li t0 49 %
0000071e : 0082a333;   % 296: 			sgt t1 s0 t0  # s0 >= 50 %
0000071f : 03d00293;   % 297: 			li t0 61 %
00000720 : 005423b3;   % 298: 			slt t2 s0 t0  # s0 <= 60 %
00000721 : 0a638663;   % 299: 			beq t2 t1 la_personagem_escada_1 %
00000722 : 0fc2a517;   % 305:                 la a0 Personagem_Correndo_16_24_1 %
00000723 : f6450513;   % 305:  %
00000724 : 0ac0006f;   % 306:                 j apagarPersonagemDepoisDaChecagem %
00000725 : 0fc2a517;   % 308:                 la a0 Personagem_Correndo_16_24_2 %
00000726 : 26850513;   % 308:  %
00000727 : 0a00006f;   % 309:                 j apagarPersonagemDepoisDaChecagem %
00000728 : 0fc2a517;   % 311:                 la a0 Personagem_Correndo_16_24_3 %
00000729 : 56c50513;   % 311:  %
0000072a : 0940006f;   % 312:                 j apagarPersonagemDepoisDaChecagem %
0000072b : 0fc2b517;   % 314:                 la a0 Personagem_Correndo_16_24_4 %
0000072c : 87050513;   % 314:  %
0000072d : 0880006f;   % 315:                 j apagarPersonagemDepoisDaChecagem %
0000072e : 0fc2b517;   % 317:                 la a0 Personagem_Correndo_16_24_5 %
0000072f : b7450513;   % 317:  %
00000730 : 07c0006f;   % 318:                 j apagarPersonagemDepoisDaChecagem %
00000731 : 0fc2b517;   % 321:                 la a0 Personagem_Pulando_14_24_1Frame %
00000732 : 3a050513;   % 321:  %
00000733 : 0700006f;   % 322:                 j apagarPersonagemDepoisDaChecagem %
00000734 : 0fc2b517;   % 324:                 la a0 Personagem_Pulando_14_24_2Frame %
00000735 : 64450513;   % 324:  %
00000736 : 0640006f;   % 325:                 j apagarPersonagemDepoisDaChecagem %
00000737 : 0fc2a517;   % 328: 				la a0 Personagem_Correndo_16_24_1_Espelhado %
00000738 : 09850513;   % 328:  %
00000739 : 0580006f;   % 329: 				j apagarPersonagemDepoisDaChecagem %
0000073a : 0fc2a517;   % 331: 				la a0 Personagem_Correndo_16_24_2_Espelhado %
0000073b : 39c50513;   % 331:  %
0000073c : 04c0006f;   % 332: 				j apagarPersonagemDepoisDaChecagem %
0000073d : 0fc2a517;   % 334: 				la a0 Personagem_Correndo_16_24_3_Espelhado %
0000073e : 6a050513;   % 334:  %
0000073f : 0400006f;   % 335: 				j apagarPersonagemDepoisDaChecagem %
00000740 : 0fc2b517;   % 337: 				la a0 Personagem_Correndo_16_24_4_Espelhado %
00000741 : 9a450513;   % 337:  %
00000742 : 0340006f;   % 338: 				j apagarPersonagemDepoisDaChecagem %
00000743 : 0fc2b517;   % 340: 				la a0 Personagem_Correndo_16_24_5_Espelhado %
00000744 : ca850513;   % 340:  %
00000745 : 0280006f;   % 341: 				j apagarPersonagemDepoisDaChecagem %
00000746 : 0fc2b517;   % 344: 				la a0 Personagem_Pulando_14_24_1Frame_Espelhado %
00000747 : 4a450513;   % 344:  %
00000748 : 01c0006f;   % 345: 				j apagarPersonagemDepoisDaChecagem %
00000749 : 0fc2b517;   % 347: 				la a0 Personagem_Pulando_14_24_2Frame_Espelhado %
0000074a : 74850513;   % 347:  %
0000074b : 0100006f;   % 348: 				j apagarPersonagemDepoisDaChecagem %
0000074c : 0fc2b517;   % 351: 				la a0 Personagem_Escalando_10_26_1Frame %
0000074d : e0c50513;   % 351:  %
0000074e : 0040006f;   % 352: 				j apagarPersonagemDepoisDaChecagem %
0000074f : 00052403;   % 359: 	lw s0, 0(a0) # s0 = largura da sprite %
00000750 : 00452483;   % 360: 	lw s1 4(a0) # s1 = altura da sprite %
00000751 : 0fcc9917;   % 361: 	lw s2 posicaoPersonagemY # s2 = posicao y %
00000752 : 4a092903;   % 361:  %
00000753 : 0fcc9997;   % 362: 	lw s3 posicaoPersonagemX # s3 = posicao x %
00000754 : 4949a983;   % 362:  %
00000755 : 00000a13;   % 363: 	li s4 0 # inicia contador de linhas da sprite %
00000756 : 00a00ab3;   % 364: 	mv s5 a0 # s5 tem o endereco do sprite %
00000757 : 001a0293;   % 366: 	addi t0 s4 1 # t0 = contador + 1  %
00000758 : 029a0e63;   % 367: 	beq s4 s1 fimLoopApagaSprite  # se (contador + 1) == altura  %
00000759 : 00100693;   % 368: 		addi a3 zero 1 # altura = 1 %
0000075a : 01012583;   % 369: 		lw a1 16(sp) # a1 tem o mapa atual %
0000075b : 14000293;   % 370: 		li t0 320 %
0000075c : 01490333;   % 371: 		add t1 s2 s4 # t1 = y + linha atual %
0000075d : 025302b3;   % 372: 		mul t0 t1 t0 # t5 = (y + linha atual) * 320 %
0000075e : 01328533;   % 373: 		add a0 t0 s3 # a0 = (y + linha atual)*320 + x %
0000075f : 00a00333;   % 374: 		mv t1 a0 # t1 = (y + linha atual)*320 + x %
00000760 : ff0002b7;   % 375: 		li t0 0xff000000 %
00000761 : 00028293;   % 375:  %
00000762 : 00550533;   % 376: 		add a0 a0 t0 # a0 = posicao da memoria que a sprite comeca %
00000763 : 006585b3;   % 377: 		add a1 a1 t1 # local atual do mapa + memoria do mapa %
00000764 : 85dff0ef;   % 378: 		jal ra printSprite %
00000765 : 001a0a13;   % 379: 		addi s4 s4 1 %
00000766 : fc5ff06f;   % 380: 		j LoopApagaSprite %
00000767 : 00012083;   % 383: 	lw ra 0(sp) %
00000768 : 00412403;   % 384: 	lw s0 4(sp) %
00000769 : 00812483;   % 385: 	lw s1 8(sp) %
0000076a : 00c12903;   % 386: 	lw s2 12(sp) %
0000076b : 01012983;   % 387: 	lw s3 16(sp) %
0000076c : 01412a03;   % 388: 	lw s4 20(sp) %
0000076d : 01812a83;   % 389: 	lw s5 24(sp) %
0000076e : 01c10113;   % 390: 	addi sp sp 28 %
0000076f : 00008067;   % 391: 	jalr x0 ra 0 %
00000770 : 08200893;   % 23: RELOGIO_LOOP:	li a7, 130 %
00000771 : 10008237;   % 24: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
00000772 : 00020213;   % 24:  %
00000773 : 00419663;   % 24: <4> bne gp,tp,NotECALL_M123 %
00000774 : 00000073;   % 24: <19> ecall %
00000775 : 0280006f;   % 24: <20> j FimECALL_M123 %
00000776 : 0fcc9217;   % 24: <21> NotECALL_M123: la tp,UEPC %
00000777 : 45020213;   % 24:  %
00000778 : 00000f97;   % 24: <22> la t6,FimECALL_M123	# endereco ap�s o ecall %
00000779 : 01cf8f93;   % 24:  %
0000077a : 01f22023;   % 24: <23> sw t6,0(tp)	# salva UEPC %
0000077b : 00422203;   % 24: <24> lw tp,4(tp)	# UTVEC %
0000077c : 00000013;   % 24: <25> nop %
0000077d : 00000013;   % 24: <26> nop %
0000077e : 00020067;   % 24: <27> jalr zero,tp,0	# chama UTVEC %
0000077f : 00000013;   % 24: <28> FimECALL_M123: nop %
00000780 : 0fcc9297;   % 25:     la t0, TEMPO_SIST %
00000781 : 40828293;   % 25:  %
00000782 : 0002a303;   % 26:     lw t1, 0(t0)                  # t1 <= TEMP_SIST %
00000783 : 406503b3;   % 27:     sub t2, a0, t1                # t2 <= tempo atual - TEMP_SIST %
00000784 : 3e800e93;   % 28:     li t4, 1000 %
00000785 : 007eaeb3;   % 29:     slt t4, t4, t2				  # t4 <= (1000 ms < tempo_passado) %
00000786 : 020e8063;   % 30:     beq t4, x0, RELOGIO_PRINTA    # caso não tenha passado 1000 ms     %
00000787 : 00730e33;   % 31:     add t3, t1, t2                # t3 <= tempo atualizado %
00000788 : 01c2a023;   % 32:     sw t3, 0(t0)                  # TEMP_SIST <= t3 %
00000789 : 000d8a63;   % 33:     beq s11, x0, RELOGIO_PRINTA   # caso o relógio já tenha chegado em zero %
0000078a : 3e800313;   % 34:     li t1, 1000 %
0000078b : 0263ceb3;   % 35:     div t4, t2, t1                # t4 em s (int) <= tempo decorrido / 1000 %
0000078c : 026e8eb3;   % 36:     mul t4, t4, t1                # t4 para ms %
0000078d : 41dd8db3;   % 37:     sub s11, s11, t4              # t3 (Relogio atualizado)  %
0000078e : 0000f337;   % 39: RELOGIO_PRINTA: li t1, 60000	  # de ms para min %
0000078f : a6030313;   % 39:  %
00000790 : 06500893;   % 40: 	li a7, 101 %
00000791 : 026dc3b3;   % 41:     div t2, s11, t1               # t2 <= RELOGIO/60000 %
00000792 : 00a00293;   % 42:     li t0, 10 %
00000793 : 0053ae33;   % 43:     slt t3, t2, t0				  # relogio < 10 min %
00000794 : 040e1863;   % 44:     bne t3, x0, MINUTOS_CASO1 %
00000795 : 00700533;   % 45:     mv a0, t2                     # valor  %
00000796 : 0ff00693;   % 46:     li a3, 0x00FF                 # back-front %
00000797 : 10008237;   % 47: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
00000798 : 00020213;   % 47:  %
00000799 : 00419663;   % 47: <4> bne gp,tp,NotECALL_M125 %
0000079a : 00000073;   % 47: <19> ecall %
0000079b : 0280006f;   % 47: <20> j FimECALL_M125 %
0000079c : 0fcc9217;   % 47: <21> NotECALL_M125: la tp,UEPC %
0000079d : 3b820213;   % 47:  %
0000079e : 00000f97;   % 47: <22> la t6,FimECALL_M125	# endereco ap�s o ecall %
0000079f : 01cf8f93;   % 47:  %
000007a0 : 01f22023;   % 47: <23> sw t6,0(tp)	# salva UEPC %
000007a1 : 00422203;   % 47: <24> lw tp,4(tp)	# UTVEC %
000007a2 : 00000013;   % 47: <25> nop %
000007a3 : 00000013;   % 47: <26> nop %
000007a4 : 00020067;   % 47: <27> jalr zero,tp,0	# chama UTVEC %
000007a5 : 00000013;   % 47: <28> FimECALL_M125: nop %
000007a6 : 00858593;   % 48:     addi a1,a1,8				  # correção para o 2 pontos  %
000007a7 : 0900006f;   % 49: 	j DOIS_PONTOS %
000007a8 : 00000513;   % 51: MINUTOS_CASO1: li a0, 0           # valor  %
000007a9 : 0ff00693;   % 52:     li a3, 0x00FF                 # back-front %
000007aa : 10008237;   % 53: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
000007ab : 00020213;   % 53:  %
000007ac : 00419663;   % 53: <4> bne gp,tp,NotECALL_M127 %
000007ad : 00000073;   % 53: <19> ecall %
000007ae : 0280006f;   % 53: <20> j FimECALL_M127 %
000007af : 0fcc9217;   % 53: <21> NotECALL_M127: la tp,UEPC %
000007b0 : 36c20213;   % 53:  %
000007b1 : 00000f97;   % 53: <22> la t6,FimECALL_M127	# endereco ap�s o ecall %
000007b2 : 01cf8f93;   % 53:  %
000007b3 : 01f22023;   % 53: <23> sw t6,0(tp)	# salva UEPC %
000007b4 : 00422203;   % 53: <24> lw tp,4(tp)	# UTVEC %
000007b5 : 00000013;   % 53: <25> nop %
000007b6 : 00000013;   % 53: <26> nop %
000007b7 : 00020067;   % 53: <27> jalr zero,tp,0	# chama UTVEC %
000007b8 : 00000013;   % 53: <28> FimECALL_M127: nop %
000007b9 : 00700533;   % 55: 	mv a0, t2                     # valor  %
000007ba : 00858593;   % 56:     addi a1, a1, 8                # coluna %
000007bb : 0ff00693;   % 57:     li a3, 0x00FF                 # back-front %
000007bc : 10008237;   % 58: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
000007bd : 00020213;   % 58:  %
000007be : 00419663;   % 58: <4> bne gp,tp,NotECALL_M129 %
000007bf : 00000073;   % 58: <19> ecall %
000007c0 : 0280006f;   % 58: <20> j FimECALL_M129 %
000007c1 : 0fcc9217;   % 58: <21> NotECALL_M129: la tp,UEPC %
000007c2 : 32420213;   % 58:  %
000007c3 : 00000f97;   % 58: <22> la t6,FimECALL_M129	# endereco ap�s o ecall %
000007c4 : 01cf8f93;   % 58:  %
000007c5 : 01f22023;   % 58: <23> sw t6,0(tp)	# salva UEPC %
000007c6 : 00422203;   % 58: <24> lw tp,4(tp)	# UTVEC %
000007c7 : 00000013;   % 58: <25> nop %
000007c8 : 00000013;   % 58: <26> nop %
000007c9 : 00020067;   % 58: <27> jalr zero,tp,0	# chama UTVEC %
000007ca : 00000013;   % 58: <28> FimECALL_M129: nop %
000007cb : 06f00893;   % 60: DOIS_PONTOS: li a7, 111                    # printar ':' %
000007cc : 03a00513;   % 61:     li a0, ':' %
000007cd : 00858593;   % 62:     addi a1, a1, 8 %
000007ce : 0ff00693;   % 63:     li a3, 0X00FF %
000007cf : 10008237;   % 64: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
000007d0 : 00020213;   % 64:  %
000007d1 : 00419663;   % 64: <4> bne gp,tp,NotECALL_M131 %
000007d2 : 00000073;   % 64: <19> ecall %
000007d3 : 0280006f;   % 64: <20> j FimECALL_M131 %
000007d4 : 0fcc9217;   % 64: <21> NotECALL_M131: la tp,UEPC %
000007d5 : 2d820213;   % 64:  %
000007d6 : 00000f97;   % 64: <22> la t6,FimECALL_M131	# endereco ap�s o ecall %
000007d7 : 01cf8f93;   % 64:  %
000007d8 : 01f22023;   % 64: <23> sw t6,0(tp)	# salva UEPC %
000007d9 : 00422203;   % 64: <24> lw tp,4(tp)	# UTVEC %
000007da : 00000013;   % 64: <25> nop %
000007db : 00000013;   % 64: <26> nop %
000007dc : 00020067;   % 64: <27> jalr zero,tp,0	# chama UTVEC %
000007dd : 00000013;   % 64: <28> FimECALL_M131: nop %
000007de : 06500893;   % 66:     li a7, 101                    # printar os segundos %
000007df : 0000f337;   % 67:     li t1, 60000				  # de ms para s %
000007e0 : a6030313;   % 67:  %
000007e1 : 026de3b3;   % 68:     rem t2, s11, t1               # t2 <= RELOGIO/1000 %
000007e2 : 00002337;   % 69:     li t1, 10000 %
000007e3 : 71030313;   % 69:  %
000007e4 : 0063ae33;   % 70:     slt t3, t2, t1				  # t2 < 10 ? 1:0  %
000007e5 : 040e1c63;   % 71:     bne t3, x0, SEGUNDOS_CASO1 %
000007e6 : 3e800313;   % 72:     li t1, 1000 %
000007e7 : 0263c3b3;   % 73:     div t2, t2, t1				  # ajustes.. %
000007e8 : 00700533;   % 74:     mv a0, t2                     # valor  %
000007e9 : 00858593;   % 75:     addi a1, a1, 8 %
000007ea : 0ff00693;   % 76:     li a3, 0x00FF                 # back-front %
000007eb : 10008237;   % 77: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
000007ec : 00020213;   % 77:  %
000007ed : 00419663;   % 77: <4> bne gp,tp,NotECALL_M133 %
000007ee : 00000073;   % 77: <19> ecall %
000007ef : 0280006f;   % 77: <20> j FimECALL_M133 %
000007f0 : 0fcc9217;   % 77: <21> NotECALL_M133: la tp,UEPC %
000007f1 : 26820213;   % 77:  %
000007f2 : 00000f97;   % 77: <22> la t6,FimECALL_M133	# endereco ap�s o ecall %
000007f3 : 01cf8f93;   % 77:  %
000007f4 : 01f22023;   % 77: <23> sw t6,0(tp)	# salva UEPC %
000007f5 : 00422203;   % 77: <24> lw tp,4(tp)	# UTVEC %
000007f6 : 00000013;   % 77: <25> nop %
000007f7 : 00000013;   % 77: <26> nop %
000007f8 : 00020067;   % 77: <27> jalr zero,tp,0	# chama UTVEC %
000007f9 : 00000013;   % 77: <28> FimECALL_M133: nop %
000007fa : 0a40006f;   % 79: 	j RELOGIO_EXIT %
000007fb : 06500893;   % 81: SEGUNDOS_CASO1: li a7, 101 %
000007fc : 00000513;   % 82: 	li a0, 0 %
000007fd : 00858593;   % 83:     addi a1, a1, 8 %
000007fe : 0ff00693;   % 84: 	li a3, 0x00FF %
000007ff : 10008237;   % 85: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
00000800 : 00020213;   % 85:  %
00000801 : 00419663;   % 85: <4> bne gp,tp,NotECALL_M135 %
00000802 : 00000073;   % 85: <19> ecall %
00000803 : 0280006f;   % 85: <20> j FimECALL_M135 %
00000804 : 0fcc9217;   % 85: <21> NotECALL_M135: la tp,UEPC %
00000805 : 21820213;   % 85:  %
00000806 : 00000f97;   % 85: <22> la t6,FimECALL_M135	# endereco ap�s o ecall %
00000807 : 01cf8f93;   % 85:  %
00000808 : 01f22023;   % 85: <23> sw t6,0(tp)	# salva UEPC %
00000809 : 00422203;   % 85: <24> lw tp,4(tp)	# UTVEC %
0000080a : 00000013;   % 85: <25> nop %
0000080b : 00000013;   % 85: <26> nop %
0000080c : 00020067;   % 85: <27> jalr zero,tp,0	# chama UTVEC %
0000080d : 00000013;   % 85: <28> FimECALL_M135: nop %
0000080e : 06500893;   % 87: 	li a7, 101 %
0000080f : 3e800313;   % 88: 	li t1, 1000 %
00000810 : 0263c3b3;   % 89: 	div t2, t2, t1				  # ajustes../t2 = tempo em s %
00000811 : 00700533;   % 90: 	mv a0, t2 %
00000812 : 00858593;   % 91:     addi a1, a1, 8 %
00000813 : 0ff00693;   % 92: 	li a3, 0x00FF %
00000814 : 10008237;   % 93: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
00000815 : 00020213;   % 93:  %
00000816 : 00419663;   % 93: <4> bne gp,tp,NotECALL_M137 %
00000817 : 00000073;   % 93: <19> ecall %
00000818 : 0280006f;   % 93: <20> j FimECALL_M137 %
00000819 : 0fcc9217;   % 93: <21> NotECALL_M137: la tp,UEPC %
0000081a : 1c420213;   % 93:  %
0000081b : 00000f97;   % 93: <22> la t6,FimECALL_M137	# endereco ap�s o ecall %
0000081c : 01cf8f93;   % 93:  %
0000081d : 01f22023;   % 93: <23> sw t6,0(tp)	# salva UEPC %
0000081e : 00422203;   % 93: <24> lw tp,4(tp)	# UTVEC %
0000081f : 00000013;   % 93: <25> nop %
00000820 : 00000013;   % 93: <26> nop %
00000821 : 00020067;   % 93: <27> jalr zero,tp,0	# chama UTVEC %
00000822 : 00000013;   % 93: <28> FimECALL_M137: nop %
00000823 : 00008067;   % 95: RELOGIO_EXIT: ret %
00000824 : 0fcc9297;   % 13:     la t0, pontos %
00000825 : 17c28293;   % 13:  %
00000826 : 0002a303;   % 14:     lw t1, 0(t0)                        # pontos %
00000827 : 000023b7;   % 15:     li t2, 10000                        # 130 X %
00000828 : 71038393;   % 15:  %
00000829 : 0c735863;   % 16:     bge t1, t2, imprimir_pontuacao_c1      # pontos > 10000 ? imprimir_caso1 %
0000082a : 3e800393;   % 17:     li t2, 1000                         # 138 X                 %
0000082b : 10735e63;   % 18:     bge t1, t2, imprimir_pontuacao_c2      # pontos > 1000  ? imprimir_caso2 %
0000082c : 06400393;   % 19:     li t2, 100                          # 146 X %
0000082d : 1a735e63;   % 20:     bge t1, t2, imprimir_pontuacao_c3      # pontos > 100   ? imprimir_caso3 %
0000082e : 00a00393;   % 21:     li t2, 10                           # 154 X %
0000082f : 24735e63;   % 22:     bge t1, t2, imprimir_pontuacao_c4      # pontos > 10    ? imprimir_caso4 %
00000830 : 00100393;   % 23:     li t2, 1  %
00000831 : 2e735e63;   % 24:     bge t1, t2, imprimir_pontuacao_c5		# 1 < pontos < 10 ? imprimir_caso5 %
00000832 : 06800893;   % 26:     li a7, 104           %
00000833 : 0fcc9517;   % 27:     la a0, pontos_zero4           %
00000834 : 14d50513;   % 27:  %
00000835 : 08600593;   % 28:     li a1, 134                          # coluna %
00000836 : 0e400613;   % 29:     li a2, 228                          # linha %
00000837 : 00000693;   % 30:     li a3, 0x0000 %
00000838 : 10008237;   % 31: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
00000839 : 00020213;   % 31:  %
0000083a : 00419663;   % 31: <4> bne gp,tp,NotECALL_M139 %
0000083b : 00000073;   % 31: <19> ecall %
0000083c : 0280006f;   % 31: <20> j FimECALL_M139 %
0000083d : 0fcc9217;   % 31: <21> NotECALL_M139: la tp,UEPC %
0000083e : 13420213;   % 31:  %
0000083f : 00000f97;   % 31: <22> la t6,FimECALL_M139	# endereco ap�s o ecall %
00000840 : 01cf8f93;   % 31:  %
00000841 : 01f22023;   % 31: <23> sw t6,0(tp)	# salva UEPC %
00000842 : 00422203;   % 31: <24> lw tp,4(tp)	# UTVEC %
00000843 : 00000013;   % 31: <25> nop %
00000844 : 00000013;   % 31: <26> nop %
00000845 : 00020067;   % 31: <27> jalr zero,tp,0	# chama UTVEC %
00000846 : 00000013;   % 31: <28> FimECALL_M139: nop %
00000847 : 06800893;   % 33:     li a7, 104                          # caso pontos =< 0 %
00000848 : 0fcc9517;   % 34:     la a0, pontos_zero1            %
00000849 : 0f050513;   % 34:  %
0000084a : 0a400593;   % 35:     li a1, 164                          # coluna %
0000084b : 0e400613;   % 36:     li a2, 228                          # linha %
0000084c : 0ff00693;   % 37:     li a3, 0x00FF %
0000084d : 10008237;   % 38: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
0000084e : 00020213;   % 38:  %
0000084f : 00419663;   % 38: <4> bne gp,tp,NotECALL_M141 %
00000850 : 00000073;   % 38: <19> ecall %
00000851 : 0280006f;   % 38: <20> j FimECALL_M141 %
00000852 : 0fcc9217;   % 38: <21> NotECALL_M141: la tp,UEPC %
00000853 : 0e020213;   % 38:  %
00000854 : 00000f97;   % 38: <22> la t6,FimECALL_M141	# endereco ap�s o ecall %
00000855 : 01cf8f93;   % 38:  %
00000856 : 01f22023;   % 38: <23> sw t6,0(tp)	# salva UEPC %
00000857 : 00422203;   % 38: <24> lw tp,4(tp)	# UTVEC %
00000858 : 00000013;   % 38: <25> nop %
00000859 : 00000013;   % 38: <26> nop %
0000085a : 00020067;   % 38: <27> jalr zero,tp,0	# chama UTVEC %
0000085b : 00000013;   % 38: <28> FimECALL_M141: nop %
0000085c : 2f40006f;   % 39:     j imprimir_pontuacao_exit %
0000085d : 06500893;   % 41: imprimir_pontuacao_c1: li a7, 101          # caso pontos > 10000 %
0000085e : 00600533;   % 42:     mv a0, t1             %
0000085f : 08600593;   % 43:     li a1, 134                          # coluna %
00000860 : 0e400613;   % 44:     li a2, 228                          # linha %
00000861 : 0ff00693;   % 45:     li a3, 0x00FF %
00000862 : 10008237;   % 46: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
00000863 : 00020213;   % 46:  %
00000864 : 00419663;   % 46: <4> bne gp,tp,NotECALL_M143 %
00000865 : 00000073;   % 46: <19> ecall %
00000866 : 0280006f;   % 46: <20> j FimECALL_M143 %
00000867 : 0fcc9217;   % 46: <21> NotECALL_M143: la tp,UEPC %
00000868 : 08c20213;   % 46:  %
00000869 : 00000f97;   % 46: <22> la t6,FimECALL_M143	# endereco ap�s o ecall %
0000086a : 01cf8f93;   % 46:  %
0000086b : 01f22023;   % 46: <23> sw t6,0(tp)	# salva UEPC %
0000086c : 00422203;   % 46: <24> lw tp,4(tp)	# UTVEC %
0000086d : 00000013;   % 46: <25> nop %
0000086e : 00000013;   % 46: <26> nop %
0000086f : 00020067;   % 46: <27> jalr zero,tp,0	# chama UTVEC %
00000870 : 00000013;   % 46: <28> FimECALL_M143: nop %
00000871 : 2a00006f;   % 47:     j imprimir_pontuacao_exit %
00000872 : 06800893;   % 49: imprimir_pontuacao_c2:  li a7, 104           %
00000873 : 0fcc9517;   % 50:     la a0, pontos_zero1            %
00000874 : 04450513;   % 50:  %
00000875 : 08600593;   % 51:     li a1, 134                          # coluna %
00000876 : 0e400613;   % 52:     li a2, 228                          # linha %
00000877 : 00000693;   % 53:     li a3, 0x0000 %
00000878 : 10008237;   % 54: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
00000879 : 00020213;   % 54:  %
0000087a : 00419663;   % 54: <4> bne gp,tp,NotECALL_M145 %
0000087b : 00000073;   % 54: <19> ecall %
0000087c : 0280006f;   % 54: <20> j FimECALL_M145 %
0000087d : 0fcc9217;   % 54: <21> NotECALL_M145: la tp,UEPC %
0000087e : 03420213;   % 54:  %
0000087f : 00000f97;   % 54: <22> la t6,FimECALL_M145	# endereco ap�s o ecall %
00000880 : 01cf8f93;   % 54:  %
00000881 : 01f22023;   % 54: <23> sw t6,0(tp)	# salva UEPC %
00000882 : 00422203;   % 54: <24> lw tp,4(tp)	# UTVEC %
00000883 : 00000013;   % 54: <25> nop %
00000884 : 00000013;   % 54: <26> nop %
00000885 : 00020067;   % 54: <27> jalr zero,tp,0	# chama UTVEC %
00000886 : 00000013;   % 54: <28> FimECALL_M145: nop %
00000887 : 06500893;   % 56:     li a7, 101          # caso pontos > 1000 %
00000888 : 00600533;   % 57:     mv a0, t1             %
00000889 : 08e00593;   % 58:     li a1, 142                          # coluna %
0000088a : 0e400613;   % 59:     li a2, 228                          # linha %
0000088b : 0ff00693;   % 60:     li a3, 0x00FF %
0000088c : 10008237;   % 61: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
0000088d : 00020213;   % 61:  %
0000088e : 00419663;   % 61: <4> bne gp,tp,NotECALL_M147 %
0000088f : 00000073;   % 61: <19> ecall %
00000890 : 0280006f;   % 61: <20> j FimECALL_M147 %
00000891 : 0fcc9217;   % 61: <21> NotECALL_M147: la tp,UEPC %
00000892 : fe420213;   % 61:  %
00000893 : 00000f97;   % 61: <22> la t6,FimECALL_M147	# endereco ap�s o ecall %
00000894 : 01cf8f93;   % 61:  %
00000895 : 01f22023;   % 61: <23> sw t6,0(tp)	# salva UEPC %
00000896 : 00422203;   % 61: <24> lw tp,4(tp)	# UTVEC %
00000897 : 00000013;   % 61: <25> nop %
00000898 : 00000013;   % 61: <26> nop %
00000899 : 00020067;   % 61: <27> jalr zero,tp,0	# chama UTVEC %
0000089a : 00000013;   % 61: <28> FimECALL_M147: nop %
0000089b : 1f80006f;   % 62:     j imprimir_pontuacao_exit %
0000089c : 06800893;   % 64: imprimir_pontuacao_c3:  li a7, 104           %
0000089d : 0fcc9517;   % 65:     la a0, pontos_zero2           %
0000089e : f9e50513;   % 65:  %
0000089f : 08600593;   % 66:     li a1, 134                          # coluna %
000008a0 : 0e400613;   % 67:     li a2, 228                          # linha %
000008a1 : 00000693;   % 68:     li a3, 0x0000 %
000008a2 : 10008237;   % 69: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
000008a3 : 00020213;   % 69:  %
000008a4 : 00419663;   % 69: <4> bne gp,tp,NotECALL_M149 %
000008a5 : 00000073;   % 69: <19> ecall %
000008a6 : 0280006f;   % 69: <20> j FimECALL_M149 %
000008a7 : 0fcc9217;   % 69: <21> NotECALL_M149: la tp,UEPC %
000008a8 : f8c20213;   % 69:  %
000008a9 : 00000f97;   % 69: <22> la t6,FimECALL_M149	# endereco ap�s o ecall %
000008aa : 01cf8f93;   % 69:  %
000008ab : 01f22023;   % 69: <23> sw t6,0(tp)	# salva UEPC %
000008ac : 00422203;   % 69: <24> lw tp,4(tp)	# UTVEC %
000008ad : 00000013;   % 69: <25> nop %
000008ae : 00000013;   % 69: <26> nop %
000008af : 00020067;   % 69: <27> jalr zero,tp,0	# chama UTVEC %
000008b0 : 00000013;   % 69: <28> FimECALL_M149: nop %
000008b1 : 06500893;   % 71:     li a7, 101          # caso pontos > 100 %
000008b2 : 00600533;   % 72:     mv a0, t1             %
000008b3 : 09600593;   % 73:     li a1, 150                          # coluna %
000008b4 : 0e400613;   % 74:     li a2, 228                          # linha %
000008b5 : 0ff00693;   % 75:     li a3, 0x00FF %
000008b6 : 10008237;   % 76: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
000008b7 : 00020213;   % 76:  %
000008b8 : 00419663;   % 76: <4> bne gp,tp,NotECALL_M151 %
000008b9 : 00000073;   % 76: <19> ecall %
000008ba : 0280006f;   % 76: <20> j FimECALL_M151 %
000008bb : 0fcc9217;   % 76: <21> NotECALL_M151: la tp,UEPC %
000008bc : f3c20213;   % 76:  %
000008bd : 00000f97;   % 76: <22> la t6,FimECALL_M151	# endereco ap�s o ecall %
000008be : 01cf8f93;   % 76:  %
000008bf : 01f22023;   % 76: <23> sw t6,0(tp)	# salva UEPC %
000008c0 : 00422203;   % 76: <24> lw tp,4(tp)	# UTVEC %
000008c1 : 00000013;   % 76: <25> nop %
000008c2 : 00000013;   % 76: <26> nop %
000008c3 : 00020067;   % 76: <27> jalr zero,tp,0	# chama UTVEC %
000008c4 : 00000013;   % 76: <28> FimECALL_M151: nop %
000008c5 : 1500006f;   % 77:     j imprimir_pontuacao_exit %
000008c6 : 06800893;   % 79: imprimir_pontuacao_c4:  li a7, 104           %
000008c7 : 0fcc9517;   % 80:     la a0, pontos_zero3           %
000008c8 : ef950513;   % 80:  %
000008c9 : 08600593;   % 81:     li a1, 134                          # coluna %
000008ca : 0e400613;   % 82:     li a2, 228                          # linha %
000008cb : 00000693;   % 83:     li a3, 0x0000 %
000008cc : 10008237;   % 84: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
000008cd : 00020213;   % 84:  %
000008ce : 00419663;   % 84: <4> bne gp,tp,NotECALL_M153 %
000008cf : 00000073;   % 84: <19> ecall %
000008d0 : 0280006f;   % 84: <20> j FimECALL_M153 %
000008d1 : 0fcc9217;   % 84: <21> NotECALL_M153: la tp,UEPC %
000008d2 : ee420213;   % 84:  %
000008d3 : 00000f97;   % 84: <22> la t6,FimECALL_M153	# endereco ap�s o ecall %
000008d4 : 01cf8f93;   % 84:  %
000008d5 : 01f22023;   % 84: <23> sw t6,0(tp)	# salva UEPC %
000008d6 : 00422203;   % 84: <24> lw tp,4(tp)	# UTVEC %
000008d7 : 00000013;   % 84: <25> nop %
000008d8 : 00000013;   % 84: <26> nop %
000008d9 : 00020067;   % 84: <27> jalr zero,tp,0	# chama UTVEC %
000008da : 00000013;   % 84: <28> FimECALL_M153: nop %
000008db : 06500893;   % 86:     li a7, 101          # caso pontos > 10 %
000008dc : 00600533;   % 87:     mv a0, t1             %
000008dd : 09e00593;   % 88:     li a1, 158                          # coluna %
000008de : 0e400613;   % 89:     li a2, 228                          # linha %
000008df : 0ff00693;   % 90:     li a3, 0x00FF %
000008e0 : 10008237;   % 91: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
000008e1 : 00020213;   % 91:  %
000008e2 : 00419663;   % 91: <4> bne gp,tp,NotECALL_M155 %
000008e3 : 00000073;   % 91: <19> ecall %
000008e4 : 0280006f;   % 91: <20> j FimECALL_M155 %
000008e5 : 0fcc9217;   % 91: <21> NotECALL_M155: la tp,UEPC %
000008e6 : e9420213;   % 91:  %
000008e7 : 00000f97;   % 91: <22> la t6,FimECALL_M155	# endereco ap�s o ecall %
000008e8 : 01cf8f93;   % 91:  %
000008e9 : 01f22023;   % 91: <23> sw t6,0(tp)	# salva UEPC %
000008ea : 00422203;   % 91: <24> lw tp,4(tp)	# UTVEC %
000008eb : 00000013;   % 91: <25> nop %
000008ec : 00000013;   % 91: <26> nop %
000008ed : 00020067;   % 91: <27> jalr zero,tp,0	# chama UTVEC %
000008ee : 00000013;   % 91: <28> FimECALL_M155: nop %
000008ef : 0a80006f;   % 92:     j imprimir_pontuacao_exit %
000008f0 : 06800893;   % 94: imprimir_pontuacao_c5:  li a7, 104           %
000008f1 : 0fcc9517;   % 95:     la a0, pontos_zero4           %
000008f2 : e5550513;   % 95:  %
000008f3 : 08600593;   % 96:     li a1, 134                          # coluna %
000008f4 : 0e400613;   % 97:     li a2, 228                          # linha %
000008f5 : 00000693;   % 98:     li a3, 0x0000 %
000008f6 : 10008237;   % 99: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
000008f7 : 00020213;   % 99:  %
000008f8 : 00419663;   % 99: <4> bne gp,tp,NotECALL_M157 %
000008f9 : 00000073;   % 99: <19> ecall %
000008fa : 0280006f;   % 99: <20> j FimECALL_M157 %
000008fb : 0fcc9217;   % 99: <21> NotECALL_M157: la tp,UEPC %
000008fc : e3c20213;   % 99:  %
000008fd : 00000f97;   % 99: <22> la t6,FimECALL_M157	# endereco ap�s o ecall %
000008fe : 01cf8f93;   % 99:  %
000008ff : 01f22023;   % 99: <23> sw t6,0(tp)	# salva UEPC %
00000900 : 00422203;   % 99: <24> lw tp,4(tp)	# UTVEC %
00000901 : 00000013;   % 99: <25> nop %
00000902 : 00000013;   % 99: <26> nop %
00000903 : 00020067;   % 99: <27> jalr zero,tp,0	# chama UTVEC %
00000904 : 00000013;   % 99: <28> FimECALL_M157: nop %
00000905 : 06500893;   % 101:     li a7, 101          # caso  0 < pontos < 10 %
00000906 : 00600533;   % 102:     mv a0, t1             %
00000907 : 0a400593;   % 103:     li a1, 164                          # coluna %
00000908 : 0e400613;   % 104:     li a2, 228                          # linha %
00000909 : 0ff00693;   % 105:     li a3, 0x00FF %
0000090a : 10008237;   % 106: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
0000090b : 00020213;   % 106:  %
0000090c : 00419663;   % 106: <4> bne gp,tp,NotECALL_M159 %
0000090d : 00000073;   % 106: <19> ecall %
0000090e : 0280006f;   % 106: <20> j FimECALL_M159 %
0000090f : 0fcc9217;   % 106: <21> NotECALL_M159: la tp,UEPC %
00000910 : dec20213;   % 106:  %
00000911 : 00000f97;   % 106: <22> la t6,FimECALL_M159	# endereco ap�s o ecall %
00000912 : 01cf8f93;   % 106:  %
00000913 : 01f22023;   % 106: <23> sw t6,0(tp)	# salva UEPC %
00000914 : 00422203;   % 106: <24> lw tp,4(tp)	# UTVEC %
00000915 : 00000013;   % 106: <25> nop %
00000916 : 00000013;   % 106: <26> nop %
00000917 : 00020067;   % 106: <27> jalr zero,tp,0	# chama UTVEC %
00000918 : 00000013;   % 106: <28> FimECALL_M159: nop %
00000919 : 00008067;   % 108: imprimir_pontuacao_exit: ret %
0000091a : fe010113;   % 23: imprimir_vida: 	addi sp, sp, -32 %
0000091b : 00812023;   % 24: 	sw s0, 0(sp)					# liberando s0 %
0000091c : 00b12223;   % 25: 	sw a1, 4(sp) %
0000091d : 00c12423;   % 26: 	sw a2, 8(sp) %
0000091e : 00d12623;   % 27: 	sw a3, 12(sp) %
0000091f : 00e12823;   % 28: 	sw a4, 16(sp) %
00000920 : 00f12a23;   % 29: 	sw a5, 20(sp) %
00000921 : 00a12c23;   % 30: 	sw a0, 24(sp) %
00000922 : 00112e23;   % 31: 	sw ra, 28(sp) %
00000923 : 0fcc9e97;   % 32: 	la t4, vidas	    			# qtd de vida	 %
00000924 : d98e8e93;   % 32:  %
00000925 : 000ea403;   % 33: 	lw s0, 0(t4) %
00000926 : 00b00733;   % 34: 	mv a4, a1						# a1 vai ser utilizado para end. do sprite %
00000927 : 00c007b3;   % 35: 	mv a5, a2 %
00000928 : 02040e63;   % 37: imprimir_loop:	beq s0, x0, imprimir_exit		# vidas = 0 ? exit:printa %
00000929 : 14000393;   % 38: 	li t2, 320		    			# offset (comprimeto da tela) %
0000092a : 01812503;   % 39: 	lw a0, 24(sp)     				# end. do bitmap %
0000092b : 02770e33;   % 40: 	mul t3, a4, t2					# encontrado a linha (Y * 320)				 %
0000092c : 00fe0e33;   % 41: 	add t3, t3, a5					# encotrado a coluna %
0000092d : 01c50533;   % 42: 	add a0, a0, t3					# somando ao end. do bitmap %
0000092e : 0fc0e597;   % 43: 	la a1, Coracao_10_8_1Frame		# end. do sprite  %
0000092f : fcc58593;   % 43:  %
00000930 : 00858593;   % 44: 	addi a1, a1, 8					 %
00000931 : 00a00613;   % 45: 	li a2, 10						# tamanho coluna %
00000932 : 00800693;   % 46: 	li a3, 8					    # tamanho linha %
00000933 : 920ff0ef;   % 47: 	jal printSprite %
00000934 : fff40413;   % 49: 	addi s0, s0, -1					# decrementa um do contador %
00000935 : 00c78793;   % 50: 	addi a5, a5, 12					# end. do prox. coracao %
00000936 : fc9ff06f;   % 51: 	j imprimir_loop %
00000937 : 00012403;   % 53: imprimir_exit: lw s0, 0(sp) %
00000938 : 00412583;   % 54: 	lw a1, 4(sp) %
00000939 : 00812603;   % 55: 	lw a2, 8(sp) %
0000093a : 00c12683;   % 56: 	lw a3, 12(sp) %
0000093b : 01012703;   % 57: 	lw a4, 16(sp) %
0000093c : 01412783;   % 58: 	lw a5, 20(sp) %
0000093d : 01812503;   % 59: 	lw a0, 24(sp) %
0000093e : 01c12083;   % 60: 	lw ra, 28(sp) %
0000093f : 02010113;   % 61: 	addi sp, sp, 32 %
00000940 : 00008067;   % 62: 	ret %
00000941 : 00000013;   % 2:     inicioPuloVertical: nop %
00000942 : ffc10113;   % 4: 		addi sp sp -4  %
00000943 : 00112023;   % 5: 		sw ra 0(sp) %
00000944 : 04805863;   % 7:         ble s0, zero, fimPuloVertical # se s0 estiver zerado, personagem parado %
00000945 : 00a00293;   % 8:         li t0 10 %
00000946 : 04545463;   % 9:         bge s0 t0 fimPuloVertical # se s0 nao for um estado do pulo vertical (>= 10)  %
00000947 : fffff297;   % 10:         la t0 ApagaPersonagem %
00000948 : 68828293;   % 10:  %
00000949 : 000280e7;   % 11: 	jalr ra t0 0 %
0000094a : 00241293;   % 12:         slli t0, s0, 2 # word = 4 bytes, estado do pulo %
0000094b : ffc28293;   % 13:         addi t0, t0, -4 %
0000094c : 0fc0e317;   % 14:         la t1 vetorDeslocamentoPuloVertical %
0000094d : b0430313;   % 14:  %
0000094e : 006282b3;   % 15:         add t0 t0 t1 %
0000094f : 0002a283;   % 16:         lw t0, 0(t0) # t0 = movimentacao do personagem em y %
00000950 : 0fcc9317;   % 17:         la t1, posicaoPersonagemY %
00000951 : ca430313;   % 17:  %
00000952 : 00032383;   % 18:         lw t2, 0(t1) %
00000953 : 005383b3;   % 19:         add t2, t2, t0 # t2 = posicao atual + movimentacao determinada %
00000954 : 00732023;   % 20:         sw t2, 0(t1) %
00000955 : 00140413;   % 21:         addi s0, s0, 1 %
00000956 : 00a00e13;   % 22:         li t3, 10 %
00000957 : 03c46433;   % 23:         rem s0, s0, t3 # se passar do nono estado, zerar %
00000958 : 00012083;   % 29:     lw ra 0(sp) %
00000959 : 00410113;   % 30:     addi sp sp 4 %
0000095a : 00008067;   % 31:     jalr x0 ra 0 %
0000095b : 00000013;   % 2:     inicioPuloVerticalEsquerda: nop %
0000095c : ffc10113;   % 4: 		addi sp sp -4  %
0000095d : 00112023;   % 5: 		sw ra 0(sp) %
0000095e : 02700293;   % 7:         li t0 39 %
0000095f : 0682d063;   % 8:         ble s0, t0, fimPuloVerticalEsquerda # s0 abaixo do estado %
00000960 : 03200293;   % 9:         li t0 50 %
00000961 : 04545c63;   % 10:         bge s0 t0 fimPuloVerticalEsquerda # s0 acima da fronteira    %
00000962 : fffff297;   % 11:         la t0 ApagaPersonagem %
00000963 : 61c28293;   % 11:  %
00000964 : 000280e7;   % 12: 	jalr ra t0 0 %
00000965 : 02800293;   % 14:         li t0 40 # primeiro estado efetivo do pulo vertical %
00000966 : 405402b3;   % 15:         sub t0 s0 t0 %
00000967 : 00229293;   % 16:         slli t0, t0, 2 # word = 4 bytes, estado do pulo %
00000968 : 0fc0e317;   % 17:         la t1 vetorDeslocamentoPuloVertical %
00000969 : a9430313;   % 17:  %
0000096a : 006282b3;   % 18:         add t0 t0 t1 %
0000096b : 0002a283;   % 19:         lw t0, 0(t0) # t0 = movimentacao do personagem em y %
0000096c : 0fcc9317;   % 20:         la t1, posicaoPersonagemY %
0000096d : c3430313;   % 20:  %
0000096e : 00032383;   % 21:         lw t2, 0(t1) %
0000096f : 005383b3;   % 22:         add t2, t2, t0 # t2 = posicao atual + movimentacao determinada %
00000970 : 00732023;   % 23:         sw t2, 0(t1) %
00000971 : 00140413;   % 24:         addi s0, s0, 1 %
00000972 : 03100e13;   % 25:         li t3, 49 %
00000973 : 03c46433;   % 26:         rem s0, s0, t3 # se passar do quadragesimo nono estado, zerar %
00000974 : 00040463;   % 27:         beq s0 zero pararPersonagemParaAEsquerdaPuloVertical %
00000975 : 0080006f;   % 28:         j fimPuloVerticalEsquerda %
00000976 : fff00413;   % 31:         li s0 -1 %
00000977 : 00012083;   % 36:     lw ra 0(sp) %
00000978 : 00410113;   % 37:     addi sp sp 4 %
00000979 : 00008067;   % 38:     jalr x0 ra 0 %
0000097a : ffc10113;   % 6:     addi sp sp -4  %
0000097b : 00112023;   % 7:     sw ra 0(sp) %
0000097c : 00900293;   % 9:     li t0 9 # estado fora abaixo do intervalo do movimento %
0000097d : 0e82d463;   % 10:     ble s0, t0 , fimAndarDireita # s0 nao pertence ao movimento a direita %
0000097e : 00f00293;   % 11:     li t0 15 # estado fora acima do intervalo do movimento %
0000097f : 0e545063;   % 12:     bge s0 t0 fimAndarDireita # s0 nao pertence ao movimento a direita %
00000980 : 00a00293;   % 15:     li t0 10 %
00000981 : 02540663;   % 16:     beq s0 t0 frame1_direita # se for o primeiro movimento para a direita %
00000982 : 06400293;   % 17:     li t0 'd' %
00000983 : 025a1263;   % 18:     bne s4 t0 frame1_direita # se nao estiver se movendo para a direita %
00000984 : 00b00293;   % 19:     li t0 11 %
00000985 : 02540e63;   % 20:     beq s0 t0 frame2_direita # se for o segundo movimento para a direira %
00000986 : 00c00293;   % 21:     li t0 12 %
00000987 : 04540a63;   % 22:     beq s0 t0 frame3_direita # se for o terceiro movimento para a direira %
00000988 : 00d00293;   % 23:     li t0 13 %
00000989 : 06540663;   % 24:     beq s0 t0 frame4_direita # se for o quarto  movimento para a direira %
0000098a : 00e00293;   % 25:     li t0 14 %
0000098b : 08540263;   % 26:     beq s0 t0 frame5_direita # se for o segundo movimento para a direira %
0000098c : 0fc29517;   % 30:         la a0 Personagem_Correndo_16_24_1 %
0000098d : 5bc50513;   % 30:  %
0000098e : 0fcc9297;   % 32:         lw t0 posicaoPersonagemX %
0000098f : ba82a283;   % 32:  %
00000990 : 00428293;   % 33:         addi t0 t0 4 %
00000991 : 0fcc9317;   % 34:         sw t0 posicaoPersonagemX, t1 %
00000992 : b8532e23;   % 34:  %
00000993 : 0840006f;   % 36:         j fimMovimentacaoDireita %
00000994 : 0fc2a517;   % 40:         la a0 Personagem_Correndo_16_24_2 %
00000995 : 8ac50513;   % 40:  %
00000996 : 0fcc9297;   % 42:         lw t0 posicaoPersonagemX %
00000997 : b882a283;   % 42:  %
00000998 : 00428293;   % 43:         addi t0 t0 4 %
00000999 : 0fcc9317;   % 44:         sw t0 posicaoPersonagemX, t1 %
0000099a : b6532e23;   % 44:  %
0000099b : 0640006f;   % 46:         j fimMovimentacaoDireita %
0000099c : 0fc2a517;   % 50:         la a0 Personagem_Correndo_16_24_3 %
0000099d : b9c50513;   % 50:  %
0000099e : 0fcc9297;   % 52:         lw t0 posicaoPersonagemX %
0000099f : b682a283;   % 52:  %
000009a0 : 00428293;   % 53:         addi t0 t0 4 %
000009a1 : 0fcc9317;   % 54:         sw t0 posicaoPersonagemX, t1 %
000009a2 : b4532e23;   % 54:  %
000009a3 : 0440006f;   % 56:         j fimMovimentacaoDireita %
000009a4 : 0fc2a517;   % 60:     la a0 Personagem_Correndo_16_24_4 %
000009a5 : e8c50513;   % 60:  %
000009a6 : 0fcc9297;   % 62:         lw t0 posicaoPersonagemX %
000009a7 : b482a283;   % 62:  %
000009a8 : 00428293;   % 63:         addi t0 t0 4 %
000009a9 : 0fcc9317;   % 64:         sw t0 posicaoPersonagemX, t1 %
000009aa : b2532e23;   % 64:  %
000009ab : 0240006f;   % 66:         j fimMovimentacaoDireita %
000009ac : 0fc2a517;   % 70:         la a0 Personagem_Correndo_16_24_5 %
000009ad : 17c50513;   % 70:  %
000009ae : 0fcc9297;   % 72:         lw t0 posicaoPersonagemX %
000009af : b282a283;   % 72:  %
000009b0 : 00428293;   % 73:         addi t0 t0 4 %
000009b1 : 0fcc9317;   % 74:         sw t0 posicaoPersonagemX, t1 %
000009b2 : b0532e23;   % 74:  %
000009b3 : 0040006f;   % 76:         j fimMovimentacaoDireita %
000009b4 : 00140413;   % 79:     addi s0, s0, 1 %
000009b5 : 00f00e13;   % 80:     li t3, 15 %
000009b6 : 03c46433;   % 81:     rem s0, s0, t3 # se passar do decimo quarto, zerar estado %
000009b7 : 00012083;   % 86:     lw ra 0(sp) %
000009b8 : 00410113;   % 87:     addi sp sp 4 %
000009b9 : 00008067;   % 88:     jalr x0 ra 0 %
000009ba : ffc10113;   % 6:     addi sp sp -4  %
000009bb : 00112023;   % 7:     sw ra 0(sp) %
000009bc : 01800293;   % 9:     li t0 24 # estado fora abaixo do intervalo do movimento %
000009bd : 0e82da63;   % 10:     ble s0, t0 , fimAndarEsquerda # s0 nao pertence ao movimento a esquerda %
000009be : 01e00293;   % 11:     li t0 30 # estado fora acima do intervalo do movimento %
000009bf : 0e545663;   % 12:     bge s0 t0 fimAndarEsquerda # s0 nao pertence ao movimento a esquerda %
000009c0 : 01900293;   % 15:     li t0 25 %
000009c1 : 02540663;   % 16:     beq s0 t0 frame1_esquerda # se for o primeiro movimento para a esquerda %
000009c2 : 06100293;   % 17:     li t0 'a' %
000009c3 : 025a1263;   % 18:     bne s4 t0 frame1_esquerda # se nao estiver se movendo para a esquerda %
000009c4 : 01a00293;   % 19:     li t0 26 %
000009c5 : 02540e63;   % 20:     beq s0 t0 frame2_esquerda # se for o segundo movimento para a esquerda %
000009c6 : 01b00293;   % 21:     li t0 27 %
000009c7 : 04540a63;   % 22:     beq s0 t0 frame3_esquerda # se for o terceiro movimento para a esquerda %
000009c8 : 01c00293;   % 23:     li t0 28 %
000009c9 : 06540663;   % 24:     beq s0 t0 frame4_esquerda # se for o quarto  movimento para a esquerda %
000009ca : 01d00293;   % 25:     li t0 29 %
000009cb : 08540263;   % 26:     beq s0 t0 frame5_esquerda # se for o quinto movimento para a esquerda %
000009cc : 0fc29517;   % 30:         la a0 Personagem_Correndo_16_24_1_Espelhado %
000009cd : 64450513;   % 30:  %
000009ce : 0fcc9297;   % 32:         lw t0 posicaoPersonagemX %
000009cf : aa82a283;   % 32:  %
000009d0 : ffc28293;   % 33:         addi t0 t0 -4 %
000009d1 : 0fcc9317;   % 34:         sw t0 posicaoPersonagemX, t1 %
000009d2 : a8532e23;   % 34:  %
000009d3 : 0840006f;   % 36:         j fimMovimentacaoEsquerda %
000009d4 : 0fc2a517;   % 40:         la a0 Personagem_Correndo_16_24_2_Espelhado %
000009d5 : 93450513;   % 40:  %
000009d6 : 0fcc9297;   % 42:         lw t0 posicaoPersonagemX %
000009d7 : a882a283;   % 42:  %
000009d8 : ffc28293;   % 43:         addi t0 t0 -4 %
000009d9 : 0fcc9317;   % 44:         sw t0 posicaoPersonagemX, t1 %
000009da : a6532e23;   % 44:  %
000009db : 0640006f;   % 46:         j fimMovimentacaoEsquerda %
000009dc : 0fc2a517;   % 50:         la a0 Personagem_Correndo_16_24_3_Espelhado %
000009dd : c2450513;   % 50:  %
000009de : 0fcc9297;   % 52:         lw t0 posicaoPersonagemX %
000009df : a682a283;   % 52:  %
000009e0 : ffc28293;   % 53:         addi t0 t0 -4 %
000009e1 : 0fcc9317;   % 54:         sw t0 posicaoPersonagemX, t1 %
000009e2 : a4532e23;   % 54:  %
000009e3 : 0440006f;   % 56:         j fimMovimentacaoEsquerda %
000009e4 : 0fc2a517;   % 60:     la a0 Personagem_Correndo_16_24_4_Espelhado %
000009e5 : f1450513;   % 60:  %
000009e6 : 0fcc9297;   % 62:         lw t0 posicaoPersonagemX %
000009e7 : a482a283;   % 62:  %
000009e8 : ffc28293;   % 63:         addi t0 t0 -4 %
000009e9 : 0fcc9317;   % 64:         sw t0 posicaoPersonagemX, t1 %
000009ea : a2532e23;   % 64:  %
000009eb : 0240006f;   % 66:         j fimMovimentacaoEsquerda %
000009ec : 0fc2a517;   % 70:         la a0 Personagem_Correndo_16_24_5_Espelhado %
000009ed : 20450513;   % 70:  %
000009ee : 0fcc9297;   % 72:         lw t0 posicaoPersonagemX %
000009ef : a282a283;   % 72:  %
000009f0 : ffc28293;   % 73:         addi t0 t0 -4 %
000009f1 : 0fcc9317;   % 74:         sw t0 posicaoPersonagemX, t1 %
000009f2 : a0532e23;   % 74:  %
000009f3 : 0040006f;   % 76:         j fimMovimentacaoEsquerda %
000009f4 : 00140413;   % 79:     addi s0, s0, 1 %
000009f5 : 01e00e13;   % 80:     li t3, 30 %
000009f6 : 03c46433;   % 81:     rem s0, s0, t3 # se passar do vigesimo nono, zerar estado %
000009f7 : 00040463;   % 82:     beq s0 zero pararPersonagemParaAEsquerda %
000009f8 : 0080006f;   % 83:     j fimAndarEsquerda %
000009f9 : fff00413;   % 86:     li s0 -1 %
000009fa : 00012083;   % 90:     lw ra 0(sp) %
000009fb : 00410113;   % 91:     addi sp sp 4 %
000009fc : 00008067;   % 92:     jalr x0 ra 0 %
000009fd : 00000013;   % 2:     incioPuloDireita: nop %
000009fe : ffc10113;   % 4: 		addi sp sp -4  %
000009ff : 00112023;   % 5: 		sw ra 0(sp) %
00000a00 : 00e00293;   % 7:         li t0 14 %
00000a01 : 0682da63;   % 8:         ble s0, t0, fimPuloDireita # s0 fora da faixa para pulo para a direita %
00000a02 : 01900293;   % 9:         li t0 25 %
00000a03 : 06545663;   % 10:         bge s0 t0 fimPuloDireita # se s0 nao for um estado do pulo direita (>= 20)  %
00000a04 : 00f00293;   % 13:         li t0 15 %
00000a05 : 04540c63;   % 14:         beq s0 t0 fimMovimentacaoPuloDireita # se for o primeiro estado do pulo,  so apaga a sprite %
00000a06 : fffff297;   % 16:         la t0 ApagaPersonagem %
00000a07 : 38c28293;   % 16:  %
00000a08 : 000280e7;   % 17: 	jalr ra t0 0 %
00000a09 : 01000293;   % 19:         li t0 16 # primeiro estado efetivo do pulo diagonal %
00000a0a : 405402b3;   % 20:         sub t0 s0 t0 %
00000a0b : 00229293;   % 21:         slli t0, t0, 2 # t0 = (s0 - 16) * 2 %
00000a0c : 0fc0e317;   % 22:         la t1 vetorDeslocamentoPuloVertical %
00000a0d : 84c30313;   % 22:  %
00000a0e : 006282b3;   % 23:         add t0 t0 t1 %
00000a0f : 0002a283;   % 26:         lw t0, 0(t0) # t0 = movimentacao do personagem em y %
00000a10 : 0fcc9317;   % 27:         la t1, posicaoPersonagemY %
00000a11 : 9a430313;   % 27:  %
00000a12 : 00032383;   % 28:         lw t2, 0(t1) %
00000a13 : 005383b3;   % 29:         add t2, t2, t0 # t2 = posicao atual em y + movimentacao determinada %
00000a14 : 00732023;   % 30:         sw t2, 0(t1) %
00000a15 : 00400293;   % 33:         li t0 4 # sempre se move vel em x %
00000a16 : 0fcc9317;   % 34:         la t1, posicaoPersonagemX %
00000a17 : 98830313;   % 34:  %
00000a18 : 00032383;   % 35:         lw t2, 0(t1) %
00000a19 : 005383b3;   % 36:         add t2, t2, t0 # t2 = posicao atual em x + vel %
00000a1a : 00732023;   % 37:         sw t2, 0(t1) %
00000a1b : 00140413;   % 40:         addi s0, s0, 1 %
00000a1c : 01900e13;   % 41:         li t3, 25 %
00000a1d : 03c46433;   % 42:         rem s0, s0, t3 # se passar do decimo nono estado, zerar %
00000a1e : 00012083;   % 48:     lw ra 0(sp) %
00000a1f : 00410113;   % 49:     addi sp sp 4 %
00000a20 : 00008067;   % 50:     jalr x0 ra 0 %
00000a21 : 00000013;   % 4:     incioPuloEsquerda: nop %
00000a22 : ffc10113;   % 6: 		addi sp sp -4  %
00000a23 : 00112023;   % 7: 		sw ra 0(sp) %
00000a24 : 01d00293;   % 9:         li t0 29 %
00000a25 : 0882d063;   % 10:         ble s0, t0, fimPuloEsquerda # s0 fora da faixa para pulo para a direita %
00000a26 : 02800293;   % 11:         li t0 40 %
00000a27 : 06545c63;   % 12:         bge s0 t0 fimPuloEsquerda # se s0 nao for um estado do pulo direita (>= 20)  %
00000a28 : 01e00293;   % 15:         li t0 30 %
00000a29 : 04540c63;   % 16:         beq s0 t0 fimMovimentacaoPuloEsquerda # se for o primeiro estado do pulo,  so apaga a sprite %
00000a2a : fffff297;   % 18:         la t0 ApagaPersonagem %
00000a2b : 2fc28293;   % 18:  %
00000a2c : 000280e7;   % 19: 	jalr ra t0 0 %
00000a2d : 01f00293;   % 21:         li t0 31 # primeiro estado efetivo do pulo diagonal %
00000a2e : 405402b3;   % 22:         sub t0 s0 t0 %
00000a2f : 00229293;   % 23:         slli t0, t0, 2 # t0 = (s0 - 16) * 2 %
00000a30 : 0fc0d317;   % 24:         la t1 vetorDeslocamentoPuloVertical %
00000a31 : 7bc30313;   % 24:  %
00000a32 : 006282b3;   % 25:         add t0 t0 t1 %
00000a33 : 0002a283;   % 28:         lw t0, 0(t0) # t0 = movimentacao do personagem em y %
00000a34 : 0fcc9317;   % 29:         la t1, posicaoPersonagemY %
00000a35 : 91430313;   % 29:  %
00000a36 : 00032383;   % 30:         lw t2, 0(t1) %
00000a37 : 005383b3;   % 31:         add t2, t2, t0 # t2 = posicao atual em y + movimentacao determinada %
00000a38 : 00732023;   % 32:         sw t2, 0(t1) %
00000a39 : ffc00293;   % 35:         li t0 -4 # sempre se move vel em x %
00000a3a : 0fcc9317;   % 36:         la t1, posicaoPersonagemX %
00000a3b : 8f830313;   % 36:  %
00000a3c : 00032383;   % 37:         lw t2, 0(t1) %
00000a3d : 005383b3;   % 38:         add t2, t2, t0 # t2 = posicao atual em x + vel %
00000a3e : 00732023;   % 39:         sw t2, 0(t1) %
00000a3f : 00140413;   % 42:         addi s0, s0, 1 %
00000a40 : 02800e13;   % 43:         li t3, 40 %
00000a41 : 03c46433;   % 44:         rem s0, s0, t3 # se passar do decimo nono estado, zerar %
00000a42 : 00040463;   % 45:         beq s0 zero pararPersonagemParaAEsquerdaPulo %
00000a43 : 0080006f;   % 46:         j fimPuloEsquerda %
00000a44 : fff00413;   % 49:         li s0 -1 %
00000a45 : 00012083;   % 55:     lw ra 0(sp) %
00000a46 : 00410113;   % 56:     addi sp sp 4 %
00000a47 : 00008067;   % 57:     jalr x0 ra 0 %
00000a48 : 00000013;   % 4:     incioEscada: nop %
00000a49 : ffc10113;   % 6: 		addi sp sp -4  %
00000a4a : 00112023;   % 7: 		sw ra 0(sp) %
00000a4b : 07700293;   % 9:         li t0 'w' %
00000a4c : 00550663;   % 10:         beq a0 t0 andar_para_cima_escada %
00000a4d : fff40413;   % 12:             addi s0 s0 -1 %
00000a4e : 0080006f;   % 13:             j checagem_estado_escada %
00000a4f : 00140413;   % 16:             addi s0 s0 1 %
00000a50 : 03200293;   % 20:         li t0 50 %
00000a51 : 04540a63;   % 21:         beq s0 t0 estado_50 %
00000a52 : 03300293;   % 22:         li t0 51 %
00000a53 : 04540e63;   % 23:         beq s0 t0 estado_51 %
00000a54 : 03400293;   % 24:         li t0 52 %
00000a55 : 06540263;   % 25:         beq s0 t0 estado_52 %
00000a56 : 03500293;   % 26:         li t0 53 %
00000a57 : 06540663;   % 27:         beq s0 t0 estado_53 %
00000a58 : 03600293;   % 28:         li t0 54 %
00000a59 : 06540a63;   % 29:         beq s0 t0 estado_54 %
00000a5a : 03700293;   % 30:         li t0 55 %
00000a5b : 06540e63;   % 31:         beq s0 t0 estado_55 %
00000a5c : 03800293;   % 32:         li t0 56 %
00000a5d : 08540263;   % 33:         beq s0 t0 estado_56 %
00000a5e : 03900293;   % 34:         li t0 57 %
00000a5f : 08540663;   % 35:         beq s0 t0 estado_57 %
00000a60 : 03a00293;   % 36:         li t0 58 %
00000a61 : 08540a63;   % 37:         beq s0 t0 estado_58 %
00000a62 : 03b00293;   % 38:         li t0 59 %
00000a63 : 08540e63;   % 39:         beq s0 t0 estado_59 %
00000a64 : 03c00293;   % 40:         li t0 60 %
00000a65 : 0a540263;   % 41:         beq s0 t0 estado_60 %
00000a66 : 0c200293;   % 45:             li t0 194 %
00000a67 : 0fcc9317;   % 46:             sw t0 posicaoPersonagemY, t1 %
00000a68 : 84532423;   % 46:  %
00000a69 : 0a40006f;   % 47:             j fimMovimentacaoEscadaCima %
00000a6a : 0bd00293;   % 49:             li t0 189 %
00000a6b : 0fcc9317;   % 50:             sw t0 posicaoPersonagemY, t1 %
00000a6c : 82532c23;   % 50:  %
00000a6d : 0940006f;   % 51:             j fimMovimentacaoEscadaCima %
00000a6e : 0b800293;   % 53:             li t0 184 %
00000a6f : 0fcc9317;   % 54:             sw t0 posicaoPersonagemY, t1 %
00000a70 : 82532423;   % 54:  %
00000a71 : 0840006f;   % 55:             j fimMovimentacaoEscadaCima %
00000a72 : 0b300293;   % 57:             li t0 179 %
00000a73 : 0fcc9317;   % 58:             sw t0 posicaoPersonagemY, t1 %
00000a74 : 80532c23;   % 58:  %
00000a75 : 0740006f;   % 59:             j fimMovimentacaoEscadaCima %
00000a76 : 0ae00293;   % 61:             li t0 174 %
00000a77 : 0fcc9317;   % 62:             sw t0 posicaoPersonagemY, t1 %
00000a78 : 80532423;   % 62:  %
00000a79 : 0640006f;   % 63:             j fimMovimentacaoEscadaCima %
00000a7a : 0a900293;   % 65:             li t0 169 %
00000a7b : 0fcc8317;   % 66:             sw t0 posicaoPersonagemY, t1 %
00000a7c : 7e532c23;   % 66:  %
00000a7d : 0540006f;   % 67:             j fimMovimentacaoEscadaCima %
00000a7e : 0a400293;   % 69:             li t0 164 %
00000a7f : 0fcc8317;   % 70:             sw t0 posicaoPersonagemY, t1 %
00000a80 : 7e532423;   % 70:  %
00000a81 : 0440006f;   % 71:             j fimMovimentacaoEscadaCima %
00000a82 : 09f00293;   % 73:             li t0 159 %
00000a83 : 0fcc8317;   % 74:             sw t0 posicaoPersonagemY, t1 %
00000a84 : 7c532c23;   % 74:  %
00000a85 : 0340006f;   % 75:             j fimMovimentacaoEscadaCima %
00000a86 : 09a00293;   % 77:             li t0 154 %
00000a87 : 0fcc8317;   % 78:             sw t0 posicaoPersonagemY, t1 %
00000a88 : 7c532423;   % 78:  %
00000a89 : 0240006f;   % 79:             j fimMovimentacaoEscadaCima %
00000a8a : 09500293;   % 81:             li t0 149 %
00000a8b : 0fcc8317;   % 82:             sw t0 posicaoPersonagemY, t1 %
00000a8c : 7a532c23;   % 82:  %
00000a8d : 0140006f;   % 83:             j fimMovimentacaoEscadaCima %
00000a8e : 09500293;   % 85:             li t0 149 %
00000a8f : 0fcc8317;   % 86:             sw t0 posicaoPersonagemY, t1 %
00000a90 : 7a532423;   % 86:  %
00000a91 : 0040006f;   % 87:             j fimMovimentacaoEscadaCima %
00000a92 : 09c00293;   % 91:         li t0 156 %
00000a93 : 0fcc8317;   % 92:         sw t0 posicaoPersonagemX, t1 # coloca o personagem na posicao x certa %
00000a94 : 78532a23;   % 92:  %
00000a95 : 03c00293;   % 93:         li t0, 60 %
00000a96 : 00540863;   % 94:         beq s0 t0 personagem_em_cima_escada %
00000a97 : 03200293;   % 95:         li t0 50 %
00000a98 : 00540863;   % 96:         beq s0 t0 personagem_em_baixo_escada %
00000a99 : 0140006f;   % 97:         j fimEscada %
00000a9a : 03b00413;   % 99:         li s0 59 %
00000a9b : 00c0006f;   % 100:         j fimEscada %
00000a9c : 00000413;   % 102:         li s0 0 %
00000a9d : 0040006f;   % 103:         j fimEscada  %
00000a9e : 00012083;   % 109:     lw ra 0(sp) %
00000a9f : 00410113;   % 110:     addi sp sp 4 %
00000aa0 : 00008067;   % 111:     jalr x0 ra 0 %
00000aa1 : 00000013;   % 4:     incioQueda: nop %
00000aa2 : ffc10113;   % 6: 		addi sp sp -4  %
00000aa3 : 00112023;   % 7: 		sw ra 0(sp) %
00000aa4 : 03c00293;   % 9:         li t0 60 %
00000aa5 : 0482d063;   % 10:         ble s0, t0, fimQueda # se s0 fora da faixa %
00000aa6 : 04700293;   % 11:         li t0 71 %
00000aa7 : 02545c63;   % 12:         bge s0 t0 fimQueda # se s0 fora da faixa %
00000aa8 : fffff297;   % 13:         la t0 ApagaPersonagem %
00000aa9 : 10428293;   % 13:  %
00000aaa : 000280e7;   % 14: 	    jalr ra t0 0 %
00000aab : 00200293;   % 17:         li t0, 2 # t0 = movimentacao do personagem em y (2 por ciclo) %
00000aac : 0fcc8317;   % 18:         lw t1, posicaoPersonagemY %
00000aad : 73432303;   % 18:  %
00000aae : 005303b3;   % 19:         add t2, t1, t0 # t2 = posicao atual + movimentacao determinada %
00000aaf : 0fcc8317;   % 20:         la t1 posicaoPersonagemY %
00000ab0 : 72830313;   % 20:  %
00000ab1 : 00732023;   % 21:         sw t2, 0(t1) %
00000ab2 : 00140413;   % 22:         addi s0, s0, 1 %
00000ab3 : 04600e13;   % 23:         li t3, 70 %
00000ab4 : 03c46433;   % 24:         rem s0, s0, t3 # se passar do 69, zerar %
00000ab5 : 00012083;   % 30:     lw ra 0(sp) %
00000ab6 : 00410113;   % 31:     addi sp sp 4 %
00000ab7 : 00008067;   % 32:     jalr x0 ra 0 %
00000ab8 : 00000013;   % 4:     incioSaidaEscada: nop %
00000ab9 : ffc10113;   % 6: 		addi sp sp -4  %
00000aba : 00112023;   % 7: 		sw ra 0(sp) %
00000abb : 04500293;   % 9:         li t0 69 %
00000abc : 0682d663;   % 10:         ble s0, t0, fimSaidaEscada # s0 fora da faixa para saida da escada %
00000abd : 05000293;   % 11:         li t0 80 %
00000abe : 06545263;   % 12:         bge s0 t0 fimSaidaEscada # se s0 nao for um estado do pulo direita (>= 20)  %
00000abf : fffff297;   % 14:         la t0 ApagaPersonagem %
00000ac0 : 0a828293;   % 14:  %
00000ac1 : 000280e7;   % 15: 	    jalr ra t0 0 %
00000ac2 : 04600293;   % 17:         li t0 70 # primeiro estado efetivo do pulo diagonal %
00000ac3 : 405402b3;   % 18:         sub t0 s0 t0 %
00000ac4 : 00229293;   % 19:         slli t0, t0, 2 # t0 = (s0 - 70) * 4 %
00000ac5 : 0fc0d317;   % 20:         la t1 vetorDeslocamentoPuloVerticalEscada %
00000ac6 : 54430313;   % 20:  %
00000ac7 : 006282b3;   % 21:         add t0 t0 t1 %
00000ac8 : 0002a283;   % 24:         lw t0, 0(t0) # t0 = movimentacao do personagem em y %
00000ac9 : 0fcc8317;   % 25:         la t1, posicaoPersonagemY %
00000aca : 6c030313;   % 25:  %
00000acb : 00032383;   % 26:         lw t2, 0(t1) %
00000acc : 005383b3;   % 27:         add t2, t2, t0 # t2 = posicao atual em y + movimentacao determinada %
00000acd : 00732023;   % 28:         sw t2, 0(t1) %
00000ace : 00400293;   % 31:         li t0 4 # sempre se move vel em x %
00000acf : 0fcc8317;   % 32:         la t1, posicaoPersonagemX %
00000ad0 : 6a430313;   % 32:  %
00000ad1 : 00032383;   % 33:         lw t2, 0(t1) %
00000ad2 : 005383b3;   % 34:         add t2, t2, t0 # t2 = posicao atual em x + vel %
00000ad3 : 00732023;   % 35:         sw t2, 0(t1) %
00000ad4 : 00140413;   % 38:         addi s0, s0, 1 %
00000ad5 : 05000e13;   % 39:         li t3, 80 %
00000ad6 : 03c46433;   % 40:         rem s0, s0, t3 # se passar do decimo nono estado, zerar %
00000ad7 : 00012083;   % 46:     lw ra 0(sp) %
00000ad8 : 00410113;   % 47:     addi sp sp 4 %
00000ad9 : 00008067;   % 48:     jalr x0 ra 0 %
00000ada : 0300006f;   % 152: exceptionHandling:  j ecallException		# Por enquanto somente a exce��o de ecall %
00000adb : 00009273;   % 154: endException:  	csrrw tp, 65, zero	# le o valor de EPC salvo no registrador uepc (reg 65) %
00000adc : 00420213;   % 155: 		addi tp, tp, 4		# soma 4 para obter a instrucao seguinte ao ecall %
00000add : 00409073;   % 156: 		csrrw zero, 65, tp	# coloca no registrador uepc %
00000ade : 10008237;   % 157: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
00000adf : 00020213;   % 157:  %
00000ae0 : 00419463;   % 157: <4> bne gp,tp,NotURET_M161 %
00000ae1 : 00200073;   % 157: <35> uret			# tem uret? s� retorna %
00000ae2 : 0fcc8217;   % 157: <36> NotURET_M161: la tp,UEPC		# nao tem uret %
00000ae3 : 6a020213;   % 157:  %
00000ae4 : 00022203;   % 157: <37> lw tp,0(tp)		# carrega o endereco UEPC %
00000ae5 : 00020067;   % 157: <38> jalr zero,tp,0		# pula para UEPC %
00000ae6 : ef810113;   % 160: ecallException:     addi    sp, sp, -264              # Salva todos os registradores na pilha %
00000ae7 : 00112023;   % 161:     sw      x1,    0(sp) %
00000ae8 : 00212223;   % 162:     sw      x2,    4(sp) %
00000ae9 : 00312423;   % 163:     sw      x3,    8(sp) %
00000aea : 00412623;   % 164:     sw      x4,   12(sp) %
00000aeb : 00512823;   % 165:     sw      x5,   16(sp) %
00000aec : 00612a23;   % 166:     sw      x6,   20(sp) %
00000aed : 00712c23;   % 167:     sw      x7,   24(sp) %
00000aee : 00812e23;   % 168:     sw      x8,   28(sp) %
00000aef : 02912023;   % 169:     sw      x9,   32(sp) %
00000af0 : 02a12223;   % 170:     sw      x10,  36(sp) %
00000af1 : 02b12423;   % 171:     sw      x11,  40(sp) %
00000af2 : 02c12623;   % 172:     sw      x12,  44(sp) %
00000af3 : 02d12823;   % 173:     sw      x13,  48(sp) %
00000af4 : 02e12a23;   % 174:     sw      x14,  52(sp) %
00000af5 : 02f12c23;   % 175:     sw      x15,  56(sp) %
00000af6 : 03012e23;   % 176:     sw      x16,  60(sp) %
00000af7 : 05112023;   % 177:     sw      x17,  64(sp) %
00000af8 : 05212223;   % 178:     sw      x18,  68(sp) %
00000af9 : 05312423;   % 179:     sw      x19,  72(sp) %
00000afa : 05412623;   % 180:     sw      x20,  76(sp) %
00000afb : 05512823;   % 181:     sw      x21,  80(sp) %
00000afc : 05612a23;   % 182:     sw      x22,  84(sp) %
00000afd : 05712c23;   % 183:     sw      x23,  88(sp) %
00000afe : 05812e23;   % 184:     sw      x24,  92(sp) %
00000aff : 07912023;   % 185:     sw      x25,  96(sp) %
00000b00 : 07a12223;   % 186:     sw      x26, 100(sp) %
00000b01 : 07b12423;   % 187:     sw      x27, 104(sp) %
00000b02 : 07c12623;   % 188:     sw      x28, 108(sp) %
00000b03 : 07d12823;   % 189:     sw      x29, 112(sp) %
00000b04 : 07e12a23;   % 190:     sw      x30, 116(sp) %
00000b05 : 07f12c23;   % 191:     sw      x31, 120(sp) %
00000b06 : 06012e27;   % 192:     fsw    	f0,  124(sp) %
00000b07 : 08112027;   % 193:     fsw    	f1,  128(sp) %
00000b08 : 08212227;   % 194:     fsw    	f2,  132(sp) %
00000b09 : 08312427;   % 195:     fsw    	f3,  136(sp) %
00000b0a : 08412627;   % 196:     fsw    	f4,  140(sp) %
00000b0b : 08512827;   % 197:     fsw    	f5,  144(sp) %
00000b0c : 08612a27;   % 198:     fsw    	f6,  148(sp) %
00000b0d : 08712c27;   % 199:     fsw    	f7,  152(sp) %
00000b0e : 08812e27;   % 200:     fsw    	f8,  156(sp) %
00000b0f : 0a912027;   % 201:     fsw    	f9,  160(sp) %
00000b10 : 0aa12227;   % 202:     fsw    	f10, 164(sp) %
00000b11 : 0ab12427;   % 203:     fsw    	f11, 168(sp) %
00000b12 : 0ac12627;   % 204:     fsw    	f12, 172(sp) %
00000b13 : 0ad12827;   % 205:     fsw    	f13, 176(sp) %
00000b14 : 0ae12a27;   % 206:     fsw    	f14, 180(sp) %
00000b15 : 0af12c27;   % 207:     fsw    	f15, 184(sp) %
00000b16 : 0b012e27;   % 208:     fsw    	f16, 188(sp) %
00000b17 : 0d112027;   % 209:     fsw    	f17, 192(sp) %
00000b18 : 0d212227;   % 210:     fsw    	f18, 196(sp) %
00000b19 : 0d312427;   % 211:     fsw    	f19, 200(sp) %
00000b1a : 0d412627;   % 212:     fsw    	f20, 204(sp) %
00000b1b : 0d512827;   % 213:     fsw    	f21, 208(sp) %
00000b1c : 0d612a27;   % 214:     fsw    	f22, 212(sp) %
00000b1d : 0d712c27;   % 215:     fsw    	f23, 216(sp) %
00000b1e : 0d812e27;   % 216:     fsw    	f24, 220(sp) %
00000b1f : 0f912027;   % 217:     fsw    	f25, 224(sp) %
00000b20 : 0fa12227;   % 218:     fsw    	f26, 228(sp) %
00000b21 : 0fb12427;   % 219:     fsw    	f27, 232(sp) %
00000b22 : 0fc12627;   % 220:     fsw    	f28, 236(sp) %
00000b23 : 0fd12827;   % 221:     fsw    	f29, 240(sp) %
00000b24 : 0fe12a27;   % 222:     fsw    	f30, 244(sp) %
00000b25 : 0ff12c27;   % 223:     fsw    	f31, 248(sp) %
00000b26 : 000002b3;   % 226:     add     t0, zero, zero %
00000b27 : 00000333;   % 227:     add     t1, zero, zero %
00000b28 : 000003b3;   % 228:     add     t2, zero, zero %
00000b29 : 00000e33;   % 229:     add     t3, zero, zero %
00000b2a : 00000eb3;   % 230:     add     t4, zero, zero %
00000b2b : 00000f33;   % 231:     add     t5, zero, zero %
00000b2c : 00000fb3;   % 232:     add     t6, zero, zero %
00000b2d : 00a00293;   % 235:     addi    t0, zero, 10 %
00000b2e : 1f128c63;   % 236:     beq     t0, a7, goToExit          # ecall exit %
00000b2f : 06e00293;   % 237:     addi    t0, zero, 110 %
00000b30 : 1f128863;   % 238:     beq     t0, a7, goToExit          # ecall exit %
00000b31 : 00100293;   % 240:     addi    t0, zero, 1               # ecall 1 = print int %
00000b32 : 21128063;   % 241:     beq     t0, a7, goToPrintInt %
00000b33 : 06500293;   % 242:     addi    t0, zero, 101             # ecall 1 = print int %
00000b34 : 1f128c63;   % 243:     beq     t0, a7, goToPrintInt %
00000b35 : 00200293;   % 245:     addi    t0, zero, 2               # ecall 2 = print float %
00000b36 : 21128463;   % 246:     beq     t0, a7, goToPrintFloat %
00000b37 : 06600293;   % 247:     addi    t0, zero, 102             # ecall 2 = print float %
00000b38 : 21128063;   % 248:     beq     t0, a7, goToPrintFloat %
00000b39 : 00400293;   % 250:     addi    t0, zero, 4               # ecall 4 = print string %
00000b3a : 1f128463;   % 251:     beq     t0, a7, goToPrintString %
00000b3b : 06800293;   % 252:     addi    t0, zero, 104             # ecall 4 = print string %
00000b3c : 1f128063;   % 253:     beq     t0, a7, goToPrintString %
00000b3d : 00500293;   % 255:     addi    t0, zero, 5               # ecall 5 = read int %
00000b3e : 1f128c63;   % 256:     beq     t0, a7, goToReadInt %
00000b3f : 06900293;   % 257:     addi    t0, zero, 105             # ecall 5 = read int %
00000b40 : 1f128863;   % 258:     beq     t0, a7, goToReadInt %
00000b41 : 00600293;   % 260:     addi    t0, zero, 6               # ecall 6 = read float %
00000b42 : 1f128c63;   % 261:     beq     t0, a7, goToReadFloat %
00000b43 : 06a00293;   % 262:     addi    t0, zero, 106             # ecall 6 = read float %
00000b44 : 1f128863;   % 263:     beq     t0, a7, goToReadFloat %
00000b45 : 00800293;   % 265:     addi    t0, zero, 8               # ecall 8 = read string %
00000b46 : 1f128063;   % 266:     beq     t0, a7, goToReadString %
00000b47 : 06c00293;   % 267:     addi    t0, zero, 108             # ecall 8 = read string %
00000b48 : 1d128c63;   % 268:     beq     t0, a7, goToReadString %
00000b49 : 00b00293;   % 270:     addi    t0, zero, 11              # ecall 11 = print char %
00000b4a : 1b128863;   % 271:     beq     t0, a7, goToPrintChar %
00000b4b : 06f00293;   % 272:     addi    t0, zero, 111             # ecall 11 = print char %
00000b4c : 1b128463;   % 273:     beq     t0, a7, goToPrintChar %
00000b4d : 00c00293;   % 275:     addi    t0, zero, 12              # ecall 12 = read char %
00000b4e : 1b128863;   % 276:     beq     t0, a7, goToReadChar %
00000b4f : 07000293;   % 277:     addi    t0, zero, 112             # ecall 12 = read char %
00000b50 : 1b128463;   % 278:     beq     t0, a7, goToReadChar %
00000b51 : 01e00293;   % 280:     addi    t0, zero, 30              # ecall 30 = time %
00000b52 : 1d128c63;   % 281:     beq     t0, a7, goToTime %
00000b53 : 08200293;   % 282:     addi    t0, zero, 130             # ecall 30 = time %
00000b54 : 1d128863;   % 283:     beq     t0, a7, goToTime %
00000b55 : 02000293;   % 285:     addi    t0, zero, 32              # ecall 32 = sleep %
00000b56 : 1d128863;   % 286:     beq     t0, a7, goToSleep %
00000b57 : 08400293;   % 287:     addi    t0, zero, 132             # ecall 32 = sleep %
00000b58 : 1d128463;   % 288:     beq     t0, a7, goToSleep %
00000b59 : 02900293;   % 290:     addi    t0, zero, 41              # ecall 41 = random %
00000b5a : 1d128463;   % 291:     beq     t0, a7, goToRandom %
00000b5b : 08d00293;   % 292:     addi    t0, zero, 141             # ecall 41 = random %
00000b5c : 1d128063;   % 293:     beq     t0, a7, goToRandom %
00000b5d : 02200293;   % 295:     addi    t0, zero, 34       		# ecall 34 = print hex %
00000b5e : 19128863;   % 296:     beq     t0, a7, goToPrintHex %
00000b5f : 08600293;   % 297:     addi    t0, zero, 134		# ecall 34 = print hex %
00000b60 : 19128463;   % 298:     beq     t0, a7, goToPrintHex %
00000b61 : 01f00293;   % 300:     addi    t0, zero, 31              # ecall 31 = MIDI out %
00000b62 : 19128463;   % 301:     beq     t0, a7, goToMidiOut       # Generate tone and return immediately %
00000b63 : 08300293;   % 302:     addi    t0, zero, 131             # ecall 31 = MIDI out %
00000b64 : 19128063;   % 303:     beq     t0, a7, goToMidiOut %
00000b65 : 02100293;   % 305:     addi    t0, zero, 33              # ecall 33 = MIDI out synchronous %
00000b66 : 19128063;   % 306:     beq     t0, a7, goToMidiOutSync   # Generate tone and return upon tone completion %
00000b67 : 08500293;   % 307:     addi    t0, zero, 133             # ecall 33 = MIDI out synchronous %
00000b68 : 17128c63;   % 308:     beq     t0, a7, goToMidiOutSync %
00000b69 : 03000293;   % 310:     addi    t0, zero, 48              # ecall 48 = CLS %
00000b6a : 19128863;   % 311:     beq     t0, a7, goToCLS %
00000b6b : 09400293;   % 312:     addi    t0, zero, 148              # ecall 48 = CLS %
00000b6c : 19128463;   % 313:     beq     t0, a7, goToCLS %
00000b6d : 00012083;   % 315: endEcall: lw	x1, 0(sp)  # recupera QUASE todos os registradores na pilha %
00000b6e : 00412103;   % 316: 	lw	x2,   4(sp)	 %
00000b6f : 00812183;   % 317: 	lw	x3,   8(sp)	 %
00000b70 : 00c12203;   % 318: 	lw	x4,  12(sp)      	 %
00000b71 : 01012283;   % 319: 	lw	x5,  16(sp)      	 %
00000b72 : 01412303;   % 320:     	lw	x6,  20(sp)	 %
00000b73 : 01812383;   % 321:     	lw	x7,  24(sp) %
00000b74 : 01c12403;   % 322:     	lw	x8,  28(sp) %
00000b75 : 02012483;   % 323:     	lw	x9,    32(sp) %
00000b76 : 02812583;   % 325: 	lw      x11,   40(sp) %
00000b77 : 02c12603;   % 326:     	lw	x12,   44(sp) %
00000b78 : 03012683;   % 327:     	lw      x13,   48(sp) %
00000b79 : 03412703;   % 328:     	lw      x14,   52(sp) %
00000b7a : 03812783;   % 329:     	lw      x15,   56(sp) %
00000b7b : 03c12803;   % 330:     	lw      x16,   60(sp) %
00000b7c : 04012883;   % 331:     	lw      x17,   64(sp) %
00000b7d : 04412903;   % 332:     	lw      x18,   68(sp) %
00000b7e : 04812983;   % 333:     	lw      x19,   72(sp) %
00000b7f : 04c12a03;   % 334:     	lw      x20,   76(sp) %
00000b80 : 05012a83;   % 335:     	lw      x21,   80(sp) %
00000b81 : 05412b03;   % 336:     	lw      x22,   84(sp) %
00000b82 : 05812b83;   % 337:     	lw      x23,   88(sp) %
00000b83 : 05c12c03;   % 338:     	lw      x24,   92(sp) %
00000b84 : 06012c83;   % 339:     	lw      x25,   96(sp) %
00000b85 : 06412d03;   % 340:     	lw      x26,  100(sp) %
00000b86 : 06812d83;   % 341:     	lw      x27,  104(sp) %
00000b87 : 06c12e03;   % 342:     	lw      x28,  108(sp) %
00000b88 : 07012e83;   % 343:     	lw      x29,  112(sp) %
00000b89 : 07412f03;   % 344:     	lw      x30,  116(sp) %
00000b8a : 07812f83;   % 345:     	lw      x31,  120(sp) %
00000b8b : 07c12007;   % 346: 	flw    f0,   124(sp) %
00000b8c : 08012087;   % 347:     	flw    f1,  128(sp) %
00000b8d : 08412107;   % 348:     	flw    f2,  132(sp) %
00000b8e : 08812187;   % 349:     	flw    f3,  136(sp) %
00000b8f : 08c12207;   % 350:     	flw    f4,  140(sp) %
00000b90 : 09012287;   % 351:     	flw    f5,  144(sp) %
00000b91 : 09412307;   % 352:     	flw    f6,  148(sp) %
00000b92 : 09812387;   % 353:     	flw    f7,  152(sp) %
00000b93 : 09c12407;   % 354:     	flw    f8,  156(sp) %
00000b94 : 0a012487;   % 355:     	flw    f9,  160(sp) %
00000b95 : 0a812587;   % 357:     	flw    f11, 168(sp) %
00000b96 : 0ac12607;   % 358:     	flw    f12, 172(sp) %
00000b97 : 0b012687;   % 359:     	flw    f13, 176(sp) %
00000b98 : 0b412707;   % 360:     	flw    f14, 180(sp) %
00000b99 : 0b812787;   % 361:     	flw    f15, 184(sp) %
00000b9a : 0bc12807;   % 362:     	flw    f16, 188(sp) %
00000b9b : 0c012887;   % 363:     	flw    f17, 192(sp) %
00000b9c : 0c412907;   % 364:     	flw    f18, 196(sp) %
00000b9d : 0c812987;   % 365:     	flw    f19, 200(sp) %
00000b9e : 0cc12a07;   % 366:     	flw    f20, 204(sp) %
00000b9f : 0d012a87;   % 367:     	flw    f21, 208(sp) %
00000ba0 : 0d412b07;   % 368:     	flw    f22, 212(sp) %
00000ba1 : 0d812b87;   % 369:     	flw    f23, 216(sp) %
00000ba2 : 0dc12c07;   % 370:     	flw    f24, 220(sp) %
00000ba3 : 0e012c87;   % 371:     	flw    f25, 224(sp) %
00000ba4 : 0e412d07;   % 372:     	flw    f26, 228(sp) %
00000ba5 : 0e812d87;   % 373:     	flw    f27, 232(sp) %
00000ba6 : 0ec12e07;   % 374:     	flw    f28, 236(sp) %
00000ba7 : 0f012e87;   % 375:     	flw    f29, 240(sp) %
00000ba8 : 0f412f07;   % 376:     	flw    f30, 244(sp) %
00000ba9 : 0f812f87;   % 377:     	flw    f31, 248(sp) %
00000baa : 10810113;   % 379:    	addi    sp, sp, 264 %
00000bab : cc1ff06f;   % 380:     	j endException %
00000bac : 10008237;   % 383: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
00000bad : 00020213;   % 383:  %
00000bae : 00419663;   % 383: <4> bne gp,tp,goToExitDE2 %
00000baf : 00a00893;   % 384:   		li 	a7, 10		# chama o ecall normal do Rars %
00000bb0 : 00000073;   % 385:   		ecall			# exit ecall %
00000bb1 : 0000006f;   % 387: goToExitDE2:	j 	goToExitDE2		# trava o processador %
00000bb2 : 078000ef;   % 389: goToPrintInt:	jal     printInt               	# chama printInt %
00000bb3 : ee9ff06f;   % 390: 		j       endEcall %
00000bb4 : 164000ef;   % 392: goToPrintString: jal     printString           	# chama printString %
00000bb5 : ee1ff06f;   % 393:     		j       endEcall %
00000bb6 : 1a4000ef;   % 395: goToPrintChar:	jal     printChar		# chama printChar %
00000bb7 : ed9ff06f;   % 396:     		j       endEcall %
00000bb8 : 544000ef;   % 398: goToPrintFloat:	jal     printFloat		# chama printFloat %
00000bb9 : ed1ff06f;   % 399:     		j       endEcall %
00000bba : 27c000ef;   % 401: goToReadChar:	jal     readChar              	# chama readChar %
00000bbb : ec9ff06f;   % 402:     		j       endEcall %
00000bbc : 3ac000ef;   % 404: goToReadInt:   	jal     readInt                 # chama readInt %
00000bbd : ec1ff06f;   % 405:     		j       endEcall %
00000bbe : 330000ef;   % 407: goToReadString:	jal     readString              # chama readString %
00000bbf : eb9ff06f;   % 408:     		j       endEcall %
00000bc0 : 71c000ef;   % 410: goToReadFloat:	jal     readFloat               # chama readFloat %
00000bc1 : eb1ff06f;   % 411: 		j       endEcall %
00000bc2 : 0b8000ef;   % 413: goToPrintHex:	jal     printHex                # chama printHex %
00000bc3 : ea9ff06f;   % 414: 		j       endEcall %
00000bc4 : 40c000ef;   % 416: goToMidiOut:	jal     midiOut                 # chama MIDIout %
00000bc5 : ea1ff06f;   % 417:     		j       endEcall %
00000bc6 : 47c000ef;   % 419: goToMidiOutSync:	jal     midiOutSync   	# chama MIDIoutSync %
00000bc7 : e99ff06f;   % 420:     			j       endEcall %
00000bc8 : 161000ef;   % 422: goToTime:	jal     time                    # chama time %
00000bc9 : e91ff06f;   % 423:     		j       endEcall %
00000bca : 185000ef;   % 425: goToSleep:	jal     sleep                  	# chama sleep %
00000bcb : e89ff06f;   % 426: 		j       endEcall %
00000bcc : 1b1000ef;   % 428: goToRandom:	jal     random                 	# chama random %
00000bcd : e81ff06f;   % 429:     		j       endEcall %
00000bce : 1d1000ef;   % 431: goToCLS:	jal     clsCLS                 	# chama CLS %
00000bcf : e79ff06f;   % 432:     		j       endEcall %
00000bd0 : ffc10113;   % 444: printInt:	addi 	sp, sp, -4			# Aloca espaco %
00000bd1 : 00112023;   % 445: 		sw 	ra, 0(sp)			# salva ra %
00000bd2 : 0fcc8297;   % 446: 		la 	t0, TempBuffer			# carrega o Endereco do Buffer da String %
00000bd3 : 70c28293;   % 446:  %
00000bd4 : 00055a63;   % 448: 		bge 	a0, zero, ehposprintInt		# Se eh positvo %
00000bd5 : 02d00313;   % 449: 		li 	t1, '-'				# carrega o sinal - %
00000bd6 : 00628023;   % 450: 		sb 	t1, 0(t0)			# coloca no buffer %
00000bd7 : 00128293;   % 451: 		addi 	t0, t0, 1			# incrementa endereco do buffer %
00000bd8 : 40a00533;   % 452: 		sub 	a0, zero, a0			# torna o numero positivo %
00000bd9 : 00a00393;   % 454: ehposprintInt:  li 	t2, 10				# carrega numero 10 %
00000bda : 00000313;   % 455: 		li 	t1, 0				# carrega numero de digitos com 0 %
00000bdb : 02754eb3;   % 457: loop1printInt:	div 	t4, a0, t2			# divide por 10 (quociente) %
00000bdc : 02756e33;   % 458: 		rem 	t3, a0, t2			# resto %
00000bdd : ffc10113;   % 459: 		addi 	sp, sp, -4			# aloca espaco na pilha %
00000bde : 01c12023;   % 460: 		sw 	t3, 0(sp)			# coloca resto na pilha %
00000bdf : 01d00533;   % 461: 		mv 	a0, t4				# atualiza o numero com o quociente %
00000be0 : 00130313;   % 462: 		addi 	t1, t1, 1			# incrementa o contador de digitos %
00000be1 : fe0514e3;   % 463: 		bne 	a0, zero, loop1printInt		# verifica se o numero eh zero %
00000be2 : 00012383;   % 465: loop2printInt:	lw 	t2, 0(sp)			# le digito da pilha %
00000be3 : 00410113;   % 466: 		addi 	sp, sp, 4			# libera espaco %
00000be4 : 03038393;   % 467: 		addi 	t2, t2, 48			# converte o digito para ascii %
00000be5 : 00728023;   % 468: 		sb 	t2, 0(t0)			# coloca caractere no buffer %
00000be6 : 00128293;   % 469: 		addi 	t0, t0, 1			# incrementa endereco do buffer %
00000be7 : fff30313;   % 470: 		addi 	t1, t1, -1			# decrementa contador de digitos %
00000be8 : fe0314e3;   % 471: 		bne 	t1, zero, loop2printInt		# eh o ultimo? %
00000be9 : 00028023;   % 472: 		sb 	zero, 0(t0)			# insere \NULL na string %
00000bea : 0fcc8517;   % 474: 		la 	a0, TempBuffer			# Endereco do buffer da srting %
00000beb : 6ac50513;   % 474:  %
00000bec : 084000ef;   % 475: 		jal 	printString			# chama o print string %
00000bed : 00012083;   % 477: 		lw 	ra, 0(sp)			# recupera a %
00000bee : 00410113;   % 478: 		addi 	sp, sp, 4			# libera espaco %
00000bef : 00008067;   % 479: fimprintInt:	ret					# retorna %
00000bf0 : ffc10113;   % 491: printHex:	addi    sp, sp, -4    		# aloca espaco %
00000bf1 : 00112023;   % 492:     		sw      ra, 0(sp)		# salva ra %
00000bf2 : 00a002b3;   % 493: 		mv 	t0, a0			# Inteiro de 32 bits a ser impresso em Hexa %
00000bf3 : 0fcc9317;   % 494: 		la 	t1, TabelaHexASCII	# endereco da tabela HEX->ASCII %
00000bf4 : 88830313;   % 494:  %
00000bf5 : 0fcc8397;   % 495: 		la 	t2, TempBuffer		# onde a string sera montada %
00000bf6 : 68038393;   % 495:  %
00000bf7 : 03000e13;   % 497: 		li 	t3,'0'			# Caractere '0' %
00000bf8 : 01c38023;   % 498: 		sb 	t3,0(t2)		# Escreve '0' no Buffer da String %
00000bf9 : 07800e13;   % 499: 		li 	t3,'x'			# Caractere 'x' %
00000bfa : 01c380a3;   % 500: 		sb 	t3,1(t2)		# Escreve 'x' no Buffer da String %
00000bfb : 00238393;   % 501: 		addi 	t2,t2,2			# novo endereco inicial da string %
00000bfc : 01c00e13;   % 503: 		li 	t3, 28			# contador de nibble   inicio = 28 %
00000bfd : 020e4263;   % 504: loopprintHex:	blt 	t3, zero, fimloopprintHex	# terminou? t3<0? %
00000bfe : 01c2deb3;   % 505: 		srl 	t4, t0, t3		# desloca o nibble para direita %
00000bff : 00fefe93;   % 506: 		andi 	t4, t4, 0x000F		# mascara o nibble	 %
00000c00 : 01d30eb3;   % 507: 		add 	t4, t1, t4		# endereco do ascii do nibble %
00000c01 : 000e8e83;   % 508: 		lb 	t4, 0(t4)		# le ascii do nibble %
00000c02 : 01d38023;   % 509: 		sb 	t4, 0(t2)		# armazena o ascii do nibble no buffer da string %
00000c03 : 00138393;   % 510: 		addi 	t2, t2, 1		# incrementa o endereco do buffer %
00000c04 : ffce0e13;   % 511: 		addi 	t3, t3, -4		# decrementa o numero do nibble %
00000c05 : fe1ff06f;   % 512: 		j 	loopprintHex %
00000c06 : 00038023;   % 514: fimloopprintHex: sb 	zero,0(t2)		# grava \null na string %
00000c07 : 0fcc8517;   % 515: 		la 	a0, TempBuffer		# Argumento do print String %
00000c08 : 63850513;   % 515:  %
00000c09 : 010000ef;   % 516:     		jal	printString		# Chama o print string %
00000c0a : 00012083;   % 518: 		lw 	ra, 0(sp)		# recupera ra %
00000c0b : 00410113;   % 519: 		addi 	sp, sp, 4		# libera espaco %
00000c0c : 00008067;   % 520: fimprintHex:	ret				# retorna %
00000c0d : ff810113;   % 531: printString:	addi	sp, sp, -8			# aloca espaco %
00000c0e : 00112023;   % 532:     		sw	ra, 0(sp)			# salva ra %
00000c0f : 00812223;   % 533:     		sw	s0, 4(sp)			# salva s0 %
00000c10 : 00a00433;   % 534:     		mv	s0, a0              		# s0 = endereco do caractere na string %
00000c11 : 00040503;   % 536: loopprintString: lb	a0, 0(s0)                 	# le em a0 o caracter a ser impresso %
00000c12 : 02050263;   % 537:     		beq     a0, zero, fimloopprintString	# string ASCIIZ termina com NULL %
00000c13 : 030000ef;   % 539:     		jal     printChar       		# imprime char %
00000c14 : 00858593;   % 541: 		addi    a1, a1, 8                 	# incrementa a coluna %
00000c15 : 13900f93;   % 542: 		li 	t6, 313		 %
00000c16 : 01f5c663;   % 543: 		blt	a1, t6, NaoPulaLinha	    	# se ainda tiver lugar na linha %
00000c17 : 00860613;   % 544:     		addi    a2, a2, 8                 	# incrementa a linha %
00000c18 : 000005b3;   % 545:     		mv    	a1, zero			# volta a coluna zero %
00000c19 : 00140413;   % 547: NaoPulaLinha:	addi    s0, s0, 1			# proximo caractere %
00000c1a : fddff06f;   % 548:     		j       loopprintString       		# volta ao loop %
00000c1b : 00012083;   % 550: fimloopprintString:	lw      ra, 0(sp)    		# recupera ra %
00000c1c : 00012403;   % 551: 			lw 	s0, 0(sp)		# recupera s0 original %
00000c1d : 00810113;   % 552:     			addi    sp, sp, 8		# libera espaco %
00000c1e : 00008067;   % 553: fimprintString:	ret      	    			# retorna %
00000c1f : 0ff00e93;   % 574: printChar:	li 	t4, 0xFF	# t4 temporario %
00000c20 : 008e9e93;   % 575: 		slli 	t4, t4, 8	# t4 = 0x0000FF00 (no RARS, nao podemos fazer diretamente "andi rd, rs1, 0xFF00") %
00000c21 : 01d6ff33;   % 576: 		and    	t5, a3, t4   	# t5 obtem cor de fundo %
00000c22 : 008f5f13;   % 577:     		srli	t5, t5, 8	# numero da cor de fundo %
00000c23 : 0ff6ff93;   % 578: 		andi   	t6, a3, 0xFF    # t6 obtem cor de frente %
00000c24 : 02000213;   % 580: 		li 	tp, ' ' %
00000c25 : 00454863;   % 581: 		blt 	a0, tp, NAOIMPRIMIVEL	# ascii menor que 32 nao eh imprimivel %
00000c26 : 07e00213;   % 582: 		li 	tp, '~' %
00000c27 : 00a24463;   % 583: 		bgt	a0, tp, NAOIMPRIMIVEL	# ascii Maior que 126  nao eh imprimivel %
00000c28 : 0080006f;   % 584:     		j       IMPRIMIVEL %
00000c29 : 02000513;   % 586: NAOIMPRIMIVEL:	li      a0, 32		# Imprime espaco %
00000c2a : 14000213;   % 588: IMPRIMIVEL:	li	tp, 320		# Num colunas 320 %
00000c2b : 02c20eb3;   % 589:     	mul     t4, tp, a2			# multiplica a2x320  t4 = coordenada y %
00000c2c : 00be8eb3;   % 590:     	add     t4, t4, a1               	# t4 = 320*y + x %
00000c2d : 007e8e93;   % 591:     	addi    t4, t4, 7                 	# t4 = 320*y + (x+7) %
00000c2e : ff000237;   % 592:     	li      tp, 0xFF000000          	# Endereco de inicio da memoria VGA %
00000c2f : 00020213;   % 592:  %
00000c30 : 004e8eb3;   % 593:     	add     t4, t4, tp               	# t4 = endereco de impressao do ultimo pixel da primeira linha do char %
00000c31 : fe050393;   % 594:     	addi    t2, a0, -32               	# indice do char na memoria %
00000c32 : 00339393;   % 595:     	slli    t2, t2, 3                 	# offset em bytes em relacao ao endereco inicial %
00000c33 : 0fcc8e17;   % 596: 	la      t3, LabelTabChar		# endereco dos caracteres na memoria %
00000c34 : 164e0e13;   % 596:  %
00000c35 : 01c383b3;   % 597:     	add     t2, t2, t3               	# endereco do caractere na memoria %
00000c36 : 0003ae03;   % 598: 	lw      t3, 0(t2)                 	# carrega a primeira word do char %
00000c37 : 00400293;   % 599: 	li 	t0, 4				# i=4 %
00000c38 : 02028e63;   % 601: forChar1I:	beq     t0, zero, endForChar1I		# if(i == 0) end for i %
00000c39 : 00800313;   % 602:     		addi    t1, zero, 8               	# j = 8 %
00000c3a : 02030463;   % 604: 	forChar1J:      beq     t1, zero, endForChar1J    	# if(j == 0) end for j %
00000c3b : 001e7c93;   % 605:         		andi    s9, t3, 0x001			# primeiro bit do caracter %
00000c3c : 001e5e13;   % 606:         		srli    t3, t3, 1             		# retira o primeiro bit %
00000c3d : 000c8663;   % 607:         		beq     s9, zero, printCharPixelbg1	# pixel eh fundo? %
00000c3e : 01fe8023;   % 608:         		sb      t6, 0(t4)             		# imprime pixel com cor de frente %
00000c3f : 0080006f;   % 609:         		j       endCharPixel1 %
00000c40 : 01ee8023;   % 610: printCharPixelbg1:     	sb      t5, 0(t4)                 	# imprime pixel com cor de fundo %
00000c41 : fff30313;   % 611: endCharPixel1:     	addi    t1, t1, -1                	# j-- %
00000c42 : fffe8e93;   % 612:     			addi    t4, t4, -1                	# t4 aponta um pixel para a esquerda %
00000c43 : fddff06f;   % 613:     			j       forChar1J			# vollta novo pixel %
00000c44 : fff28293;   % 615: endForChar1J: 	addi    t0, t0, -1 		# i-- %
00000c45 : 148e8e93;   % 616:     		addi    t4, t4, 328           	# 2**12 + 8 %
00000c46 : fc9ff06f;   % 617:     		j       forChar1I		# volta ao loop %
00000c47 : 0043ae03;   % 619: endForChar1I:	lw      t3, 4(t2)           	# carrega a segunda word do char %
00000c48 : 00400293;   % 620: 		li 	t0, 4			# i = 4 %
00000c49 : 02028e63;   % 621: forChar2I:     	beq     t0, zero, endForChar2I  # if(i == 0) end for i %
00000c4a : 00800313;   % 622:     		addi    t1, zero, 8             # j = 8 %
00000c4b : 02030463;   % 624: 	forChar2J:	beq	t1, zero, endForChar2J    	# if(j == 0) end for j %
00000c4c : 001e7c93;   % 625:         		andi    s9, t3, 0x001	    		# pixel a ser impresso %
00000c4d : 001e5e13;   % 626:         		srli    t3, t3, 1                 	# desloca para o proximo %
00000c4e : 000c8663;   % 627:         		beq     s9, zero, printCharPixelbg2	# pixel eh fundo? %
00000c4f : 01fe8023;   % 628:         		sb      t6, 0(t4)			# imprime cor frente %
00000c50 : 0080006f;   % 629:         		j       endCharPixel2			# volta ao loop %
00000c51 : 01ee8023;   % 631: printCharPixelbg2:     	sb      t5, 0(t4)			# imprime cor de fundo %
00000c52 : fff30313;   % 633: endCharPixel2:     	addi    t1, t1, -1			# j-- %
00000c53 : fffe8e93;   % 634:     			addi    t4, t4, -1                	# t4 aponta um pixel para a esquerda %
00000c54 : fddff06f;   % 635:     			j       forChar2J %
00000c55 : fff28293;   % 637: endForChar2J:	addi	t0, t0, -1 		# i-- %
00000c56 : 148e8e93;   % 638:     		addi    t4, t4, 328		# %
00000c57 : fc9ff06f;   % 639:     		j       forChar2I		# volta ao loop %
00000c58 : 00008067;   % 641: endForChar2I:	ret				# retorna %
00000c59 : 10008237;   % 650: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
00000c5a : 00020213;   % 650:  %
00000c5b : 02419063;   % 650: <4> bne gp,tp,readCharKDMMIODE2 %
00000c5c : ff2002b7;   % 653: readCharKDMMIO:		li 	t0, 0xFF200000			# Execucao com Polling do KD MMIO %
00000c5d : 00028293;   % 653:  %
00000c5e : 0002a503;   % 655: loopReadCharKDMMIO:  	lw     	a0, 0(t0)   			# le o bit de flag do teclado %
00000c5f : 00157513;   % 656: 			andi 	a0, a0, 0x0001			# masacara bit 0 %
00000c60 : fe050ce3;   % 657: 			beq     a0, zero, loopReadCharKDMMIO  	# testa se uma tecla foi pressionada %
00000c61 : 0042a503;   % 658:     			lw 	a0, 4(t0)			# le o ascii da tecla pressionada %
00000c62 : 09c0006f;   % 659: 			j fimreadChar				# fim Read Char %
00000c63 : ff2002b7;   % 663: readCharKDMMIODE2:	li 	t0, 0xFF200000			# Execucao com Polling do KD MMIO %
00000c64 : 00028293;   % 663:  %
00000c65 : 0002a503;   % 665: loopReadCharKDMMIODE2: 	lw     	a0, 0(t0)   			# le o bit de flag do teclado %
00000c66 : 00157513;   % 666: 			andi 	a0, a0, 0x0001			# masacara bit 0 %
00000c67 : fe050ce3;   % 667: 			beq     a0, zero, loopReadCharKDMMIODE2	# testa se uma tecla foi pressionada %
00000c68 : 0042a503;   % 668:     			lw 	a0, 4(t0)			# le o ascii da tecla pressionada %
00000c69 : 0800006f;   % 669: 			j fimreadChar				# fim Read Char %
00000c6a : ff2002b7;   % 676: readCharDE2:  	li      t0, 0xFF200100 			# Endereco buffer0 %
00000c6b : 10028293;   % 676:  %
00000c6c : 0002a303;   % 677:     		lw     	t1, 0(t0)				# conteudo inicial do buffer %
00000c6d : 0002a383;   % 679: loopReadChar:  	lw     	t2, 0(t0)   				# le buffer teclado %
00000c6e : 00639663;   % 680: 		bne     t2, t1, buffermodificadoChar    	# testa se o buffer foi modificado %
00000c6f : 00700333;   % 682: atualizaBufferChar:  mv t1, t2			# atualiza o buffer com o novo valor %
00000c70 : ff5ff06f;   % 683:     		j       loopReadChar		# loop de printicpal de leitura  %
00000c71 : 0ff00f13;   % 685: buffermodificadoChar:	li t5, 0xFF %
00000c72 : 008f1f13;   % 686: 	slli 	t5, t5, 8			# t5 = 0x0000FF00 %
00000c73 : 01e3fe33;   % 687: 	and    	t3, t2, t5 			# mascara o 2o scancode %
00000c74 : 0000f237;   % 688: 	li 	tp, 0x0000F000 %
00000c75 : 00020213;   % 688:  %
00000c76 : 024e0063;   % 689: 	beq     t3, tp, teclasoltaChar		# eh 0xF0 no 2o scancode? tecla foi solta %
00000c77 : 0ff00213;   % 690: 	li	tp, 0x000000FF %
00000c78 : 0043fe33;   % 691: 	and	t3, t2, tp			# mascara 1o scancode	(essa podemos fazer diretamente) %
00000c79 : 01200213;   % 692: 	li	tp, 0x00000012 %
00000c7a : fc4e1ae3;   % 693:     	bne 	t3, tp, atualizaBufferChar	# nao eh o SHIFT que esta pressionado ? volta a ler  %
00000c7b : 0fcc8417;   % 694: 	la      s0, LabelScanCodeShift		# se for SHIFT que esta pressionado atualiza o endereco da tabel %
00000c7c : 3e240413;   % 694:  %
00000c7d : fc9ff06f;   % 695:     	j       atualizaBufferChar		# volta a ler %
00000c7e : 0ff3fe13;   % 697: teclasoltaChar:		andi t3, t2, 0x00FF		# mascara o 1o scancode %
00000c7f : 08000213;   % 698: 	li	tp, 0x00000080 %
00000c80 : fbc24ee3;   % 699:   	bgt	t3, tp, atualizaBufferChar		# se o scancode for > 0x80 entao nao eh imprimivel! %
00000c81 : 01200213;   % 700:   	li	tp, 0x00000012 %
00000c82 : 004e1863;   % 701: 	bne 	t3, tp, naoehshiftChar			# nao foi o shift que foi solto? entao processa %
00000c83 : 0fcc8417;   % 702: 	la 	s0, LabelScanCode			# shift foi solto atualiza o endereco da tabela %
00000c84 : 33c40413;   % 702:  %
00000c85 : fa9ff06f;   % 703: 	j 	atualizaBufferChar			# volta a ler %
00000c86 : 01c40e33;   % 705: naoehshiftChar:	   	add     t3, s0, t3              # endereco na tabela de scancode da tecla com ou sem shift %
00000c87 : 000e0503;   % 706:     	lb      a0, 0(t3)				# le o ascii do caracter para a0 %
00000c88 : f8050ee3;   % 707:     	beq     a0, zero, atualizaBufferChar		# se for caractere nao imprimivel volta a ler %
00000c89 : 00008067;   % 709: fimreadChar: 	ret			# retorna %
00000c8a : ff810113;   % 721: readString: 	addi 	sp, sp, -8			# reserva espaco na pilha %
00000c8b : 00812223;   % 722: 		sw 	s0, 4(sp)			# salva s0 %
00000c8c : 00112023;   % 723: 		sw 	ra, 0(sp)			# salva ra %
00000c8d : 00000693;   % 724: 		li 	a3, 0				# zera o contador de caracteres digitados %
00000c8e : 00a00933;   % 725: 		mv 	s2, a0				# salva o endereco inicial %
00000c8f : 0fcc8417;   % 726:     		la      s0, LabelScanCode      		# Endereco da tabela de scancode inicial para readChar %
00000c90 : 30c40413;   % 726:  %
00000c91 : 02d58e63;   % 728: loopreadString: beq 	a1, a3, fimreadString   	# buffer cheio fim %
00000c92 : ff810113;   % 730: 		addi 	sp, sp, -8 %
00000c93 : 00112023;   % 731: 		sw 	ra, 0(sp)			# salva ra %
00000c94 : 00a12223;   % 732: 		sw 	a0, 4(sp)			# salva a0 pois ele sera reescrito em readChar %
00000c95 : f11ff0ef;   % 733: 		jal 	readChar			# le um caracter do teclado (retorno em a0) %
00000c96 : 00a00fb3;   % 734: 		mv 	t6, a0				# t6 eh a letra lida em readChar %
00000c97 : 00012083;   % 735: 		lw 	ra, 0(sp) %
00000c98 : 00412503;   % 736: 		lw 	a0, 4(sp) %
00000c99 : 00810113;   % 737: 		addi 	sp, sp, 8 %
00000c9a : 00a00213;   % 739: 		li	tp, 0x0A %
00000c9b : 004f8a63;   % 740: 		beq 	t6, tp, fimreadString		# se for tecla ENTER fim %
00000c9c : 01f50023;   % 741: 		sb 	t6, 0(a0)			# grava no buffer %
00000c9d : 00168693;   % 742: 		addi 	a3, a3, 1			# incrementa contador %
00000c9e : 00150513;   % 743: 		addi 	a0, a0, 1			# incrementa endereco no buffer %
00000c9f : fc9ff06f;   % 744: 		j loopreadString			# volta a ler outro caractere %
00000ca0 : 00050023;   % 746: fimreadString: 	sb 	zero, 0(a0)			# grava NULL no buffer %
00000ca1 : fff50613;   % 747: 		addi 	a2, a0, -1			# Para que a2 tenha o endereco do ultimo caractere digitado %
00000ca2 : 01200533;   % 748: 		mv	a0, s2				# a0 volta a ter o endereco inicial da string %
00000ca3 : 00012083;   % 749: 		lw 	ra, 0(sp)			# recupera ra %
00000ca4 : 00412403;   % 750: 		lw	s0, 4(sp)			# recupera s0 %
00000ca5 : 00810113;   % 751: 		addi 	sp, sp, 8			# libera espaco %
00000ca6 : 00008067;   % 752: 		ret					# retorna %
00000ca7 : ffc10113;   % 761: readInt: 	addi 	sp,sp,-4		# reserva espaco na pilha %
00000ca8 : 00112023;   % 762: 	sw 	ra, 0(sp)			# salva ra %
00000ca9 : 0fcc8517;   % 763: 	la 	a0, TempBuffer			# Endereco do buffer de string %
00000caa : 3b050513;   % 763:  %
00000cab : 00a00593;   % 764: 	li 	a1, 10				# numero maximo de digitos %
00000cac : f79ff0ef;   % 765: 	jal 	readString			# le uma string de ate 10 digitos, a3 numero de digitos %
00000cad : 00c002b3;   % 766: 	mv 	t0, a2				# copia endereco do ultimo digito %
00000cae : 00a00393;   % 767: 	li 	t2, 10				# dez %
00000caf : 00100e13;   % 768: 	li 	t3, 1				# dezenas, centenas, etc %
00000cb0 : 00000533;   % 769: 	mv 	a0, zero			# zera o numero %
00000cb1 : 04068663;   % 771: loopReadInt: 	beq	a3,zero, fimReadInt	# Leu todos os digitos %
00000cb2 : 00028303;   % 772: 	lb 	t1, (t0)			# le um digito %
00000cb3 : 02d00213;   % 773: 	li	tp, 0x0000002D %
00000cb4 : 02430e63;   % 774: 	beq 	t1, tp, ehnegReadInt		# = '-' %
00000cb5 : 02b00213;   % 775: 	li	tp, 0x0000002B %
00000cb6 : 02430c63;   % 776: 	beq 	t1, tp, ehposReadInt		# = '+' %
00000cb7 : 03000213;   % 777: 	li	tp, 0x00000030 %
00000cb8 : 02434463;   % 778: 	blt 	t1, tp, naoehReadInt		# <'0' %
00000cb9 : 03900213;   % 779: 	li	tp, 0x00000039 %
00000cba : 02624063;   % 780: 	bgt 	t1, tp, naoehReadInt		# >'9' %
00000cbb : fd030313;   % 781: 	addi 	t1, t1, -48			# transforma ascii em numero %
00000cbc : 03c30333;   % 782: 	mul 	t1, t1, t3			# multiplica por dezenas/centenas %
00000cbd : 00650533;   % 783: 	add 	a0, a0, t1			# soma no numero %
00000cbe : 027e0e33;   % 784: 	mul 	t3, t3, t2			# proxima dezena/centena %
00000cbf : fff28293;   % 785: 	addi 	t0, t0, -1			# busca o digito anterior %
00000cc0 : fff68693;   % 786: 	addi	a3, a3, -1			# reduz o contador de digitos  %
00000cc1 : fc1ff06f;   % 787: 	j 	loopReadInt			# volta para buscar proximo digito %
00000cc2 : 0080006f;   % 790: 		j fimReadInt			# como nao esta implmentado apenas retorna %
00000cc3 : 40a00533;   % 792: ehnegReadInt:	sub a0,zero,a0			# se for negativo %
00000cc4 : 00012083;   % 796: fimReadInt:	lw 	ra, 0(sp)		# recupera ra %
00000cc5 : 00410113;   % 797: 		addi 	sp, sp, 4		# libera espaco %
00000cc6 : 00008067;   % 798: 		ret				# fim ReadInt %
00000cc7 : 10008237;   % 817: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
00000cc8 : 00020213;   % 817:  %
00000cc9 : 00419863;   % 817: <4> bne gp,tp,midiOutDE2 %
00000cca : 01f00893;   % 818: 	li a7,31		# Chama o ecall normal %
00000ccb : 00000073;   % 819: 	ecall %
00000ccc : 0600006f;   % 820: 	j fimmidiOut %
00000ccd : ff2002b7;   % 822: midiOutDE2:	li      t0, 0xFF200178 %
00000cce : 17828293;   % 822:  %
00000ccf : 00000333;   % 823:     		add     t1, zero, zero %
00000cd0 : 00f67393;   % 828:    	 	andi    t2, a2, 0x0000000F %
00000cd1 : 01b39393;   % 829:     		slli    t2, t2, 27 %
00000cd2 : 00736333;   % 830:     		or      t1, t1, t2 %
00000cd3 : 07f6f393;   % 833:     		andi    t2, a3, 0x0000007F %
00000cd4 : 01439393;   % 834:     		slli    t2, t2, 20 %
00000cd5 : 00736333;   % 835:     		or      t1, t1, t2 %
00000cd6 : 07f57393;   % 838:     		andi    t2, a0, 0x0000007F %
00000cd7 : 00d39393;   % 839:     		slli    t2, t2, 13 %
00000cd8 : 00736333;   % 840:     		or      t1, t1, t2 %
00000cd9 : 1ff00e93;   % 843: 		li 	t4, 0x1FF %
00000cda : 004e9e93;   % 844: 		slli 	t4, t4, 4 %
00000cdb : 00fe8e93;   % 845: 		addi 	t4, t4, 0x00F			# t4 = 0x00001FFF %
00000cdc : 01d5f3b3;   % 846:     		and    	t2, a1, t4 %
00000cdd : 00736333;   % 847:     		or      t1, t1, t2 %
00000cde : 0040006f;   % 850:     		j       SintMidOut %
00000cdf : 0062a023;   % 852: SintMidOut:	sw	t1, 0(t0) %
00000ce0 : ff2003b7;   % 855: 	    		li      t2, 0xFF20017C %
00000ce1 : 17c38393;   % 855:  %
00000ce2 : 0003ae03;   % 856: Check_AUD_DACLRCK:     	lw      t3, 0(t2) %
00000ce3 : fe0e0ee3;   % 857:     			beq     t3, zero, Check_AUD_DACLRCK %
00000ce4 : 00008067;   % 859: fimmidiOut:    		ret %
00000ce5 : 10008237;   % 876: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
00000ce6 : 00020213;   % 876:  %
00000ce7 : 00419863;   % 876: <4> bne gp,tp,midiOutSyncDE2 %
00000ce8 : 02100893;   % 877: 	li a7,33		# Chama o ecall normal %
00000ce9 : 00000073;   % 878: 	ecall %
00000cea : 0780006f;   % 879: 	j fimmidiOutSync %
00000ceb : ff2002b7;   % 881: midiOutSyncDE2:	li      t0, 0xFF200178 %
00000cec : 17828293;   % 881:  %
00000ced : 00000333;   % 882:     		add     t1, zero, zero %
00000cee : 08000337;   % 885:     		lui    	t1, 0x08000 %
00000cef : 00431313;   % 886: 		slli	t1,t1,4 %
00000cf0 : 00f67393;   % 889:     		andi    t2, a2, 0x00F %
00000cf1 : 01b39393;   % 890:     		slli    t2, t2, 27 %
00000cf2 : 00736333;   % 891:     		or      t1, t1, t2 %
00000cf3 : 07f6f393;   % 894:     		andi    t2, a3, 0x07F %
00000cf4 : 01439393;   % 895:     		slli    t2, t2, 20 %
00000cf5 : 00736333;   % 896:     		or      t1, t1, t2 %
00000cf6 : 07f57393;   % 899:     		andi    t2, a0, 0x07F %
00000cf7 : 00d39393;   % 900:     		slli    t2, t2, 13 %
00000cf8 : 00736333;   % 901:     		or      t1, t1, t2 %
00000cf9 : 1ff00e93;   % 904: 		li 	t4, 0x1FF %
00000cfa : 004e9e93;   % 905: 		slli 	t4, t4, 4 %
00000cfb : 00fe8e93;   % 906: 		addi 	t4, t4, 0x00F			# t4 = 0x00001FFF %
00000cfc : 01d5f3b3;   % 907:     		and    	t2, a1, t4 %
00000cfd : 00736333;   % 908:     		or      t1, t1, t2 %
00000cfe : 0040006f;   % 911:     		j       SintMidOutSync %
00000cff : 0062a023;   % 913: SintMidOutSync:	sw	t1, 0(t0) %
00000d00 : ff2003b7;   % 916:     		li      t2, 0xFF20017C %
00000d01 : 17c38393;   % 916:  %
00000d02 : ff200eb7;   % 917:     		li      t4, 0xFF200180 %
00000d03 : 180e8e93;   % 917:  %
00000d04 : 0003ae03;   % 919: Check_AUD_DACLRCKSync:	lw      t3, 0(t2) %
00000d05 : fe0e0ee3;   % 920:     			beq     t3, zero, Check_AUD_DACLRCKSync %
00000d06 : 000eaf03;   % 922: Melody:     	lw      t5, 0(t4) %
00000d07 : fe0f1ee3;   % 923:     		bne     t5, zero, Melody %
00000d08 : 00008067;   % 925: fimmidiOutSync:	ret %
00000d09 : ffc10113;   % 935: printFloat:	addi 	sp, sp, -4 %
00000d0a : 00112023;   % 936: 		sw 	ra, 0(sp)				# salva ra %
00000d0b : 0fcc8417;   % 937: 		la 	s0, TempBuffer %
00000d0c : 22840413;   % 937:  %
00000d0d : 02b00293;   % 940: 		li 	t0, '+'			# define sinal '+' %
00000d0e : e00504d3;   % 941: 		fmv.x.s s1, fa0			# recupera o numero float sem conversao %
00000d0f : 080003b7;   % 942: 		lui	t2, 0x08000 %
00000d10 : 00439393;   % 943: 		slli	t2,t2,4 %
00000d11 : 0074f4b3;   % 944: 		and 	s1, s1, t2			# mascara com 1000...0 %
00000d12 : 00048663;   % 945: 		beq 	s1, zero, ehposprintFloat	# eh positivo s1=0 %
00000d13 : 00100493;   % 946: 		li 	s1, 1				# numero eh negativo s1=1 %
00000d14 : 02d00293;   % 947: 		li 	t0, '-'				# define sinal '-' %
00000d15 : 00540023;   % 948: ehposprintFloat: sb 	t0, 0(s0)			# coloca sinal no buffer %
00000d16 : 00140413;   % 949: 		addi 	s0, s0,1			# incrementa o endereco do buffer %
00000d17 : e00502d3;   % 952: 		 fmv.x.s t0, fa0			# recupera o numero float sem conversao %
00000d18 : 7f800337;   % 953: 		 lui	t1, 0x7F800 %
00000d19 : 0062f2b3;   % 954: 		 and 	t0, t0, t1   			# mascara com 0111 1111 1000 0000 0000 0000... %
00000d1a : 00129293;   % 955: 		 slli 	t0, t0, 1			# tira o sinal do numero %
00000d1b : 0182d293;   % 956: 		 srli 	t0, t0, 24			# recupera o expoente %
00000d1c : e0050353;   % 959: 		fmv.x.s t1, fa0				# recupera o numero float sem conversao %
00000d1d : 7ffff3b7;   % 960: 		lui 	t2, 0x7FFFF %
00000d1e : 0083d393;   % 961: 		srli	t2, t2, 8 %
00000d1f : 00f38393;   % 962: 		addi	t2, t2, 0x00F			# t2 = 0x007FFFFF %
00000d20 : 00737333;   % 963: 		and 	t1, t1, t2			# mascara com 0000 0000 0111 1111 1111... 		  %
00000d21 : 12028e63;   % 965: 		beq 	t0, zero, ehExp0printFloat	# Expoente = 0 %
00000d22 : 0ff00213;   % 966: 		li	tp, 0x000000FF			# TP = 255 %
00000d23 : 14428e63;   % 967: 		beq 	t0, tp, ehExp255printFloat	# Expoente = 255 %
00000d24 : 20a52053;   % 971: 		fabs.s 		ft0, fa0		# ft0 recebe o modulo  de x %
00000d25 : 00100213;   % 972: 		li		tp, 1 %
00000d26 : d00270d3;   % 973: 		fcvt.s.w 	ft1, tp			# ft1 recebe o numero 1.0 %
00000d27 : 00a00213;   % 974: 		li		tp, 10 %
00000d28 : d0027353;   % 975: 		fcvt.s.w 	ft6, tp			# ft6 recebe o numero 10.0 %
00000d29 : 00200213;   % 976: 		li		tp, 2 %
00000d2a : d0027e53;   % 977: 		fcvt.s.w 	ft8, tp %
00000d2b : 19c0f3d3;   % 978: 		fdiv.s		ft7, ft1, ft8		# ft7 recebe o numero 0.5 %
00000d2c : a0101ed3;   % 980: 		flt.s 	t4, ft0, ft1		# ft0 < 1.0 ? Se sim, E deve ser negativo %
00000d2d : 000e9663;   % 981: 		bnez	t4, menor1printFloat	# se a comparacao deu true (1), pula %
00000d2e : 20630153;   % 982: 		fmv.s 	ft2, ft6		# ft2  fator de multiplicacao = 10 %
00000d2f : 02c0006f;   % 983: 		j 	cont2printFloat		# vai para expoente positivo %
00000d30 : 1860f153;   % 984: menor1printFloat: fdiv.s ft2,ft1,ft6		# ft2 fator multiplicativo = 0.1 %
00000d31 : 20000253;   % 987: cont1printFloat: 	fmv.s 	ft4, ft0			# inicia com o numero x  %
00000d32 : 201081d3;   % 988: 		 	fmv.s 	ft3, ft1			# contador comeca em 1 %
00000d33 : 18227253;   % 989: loop1printFloat: 	fdiv.s 	ft4, ft4, ft2			# divide o numero pelo fator multiplicativo %
00000d34 : a0120e53;   % 990: 		 	fle.s 	t3, ft4, ft1			# o numero eh > que 1? entao fim %
00000d35 : 000e0663;   % 991: 		 	beq 	t3,zero, fimloop1printFloat %
00000d36 : 0011f1d3;   % 992: 		 	fadd.s 	ft3, ft3, ft1			# incrementa o contador %
00000d37 : ff1ff06f;   % 993: 		 	j 	loop1printFloat			# volta ao loop %
00000d38 : 18227253;   % 994: fimloop1printFloat: 	fdiv.s 	ft4, ft4, ft2			# ajusta o numero %
00000d39 : 0200006f;   % 995: 		 	j 	intprintFloat			# vai para imprimir a parte inteira %
00000d3a : 20000253;   % 998: cont2printFloat:	fmv.s 	 ft4, ft0			# inicia com o numero x  %
00000d3b : d00071d3;   % 999: 		 	fcvt.s.w ft3, zero			# contador comeca em 0 %
00000d3c : a0621e53;   % 1000: loop2printFloat:  	flt.s 	 t3, ft4, ft6			# resultado eh < que 10? entao fim %
00000d3d : 18227253;   % 1001: 			fdiv.s 	 ft4, ft4, ft2			# divide o numero pelo fator multiplicativo %
00000d3e : 000e1663;   % 1002: 			bne 	 t3, zero, intprintFloat %
00000d3f : 0011f1d3;   % 1003: 		 	fadd.s 	 ft3, ft3, ft1			# incrementa o contador %
00000d40 : ff1ff06f;   % 1004: 		 	j 	 loop2printFloat %
00000d41 : 10227253;   % 1010: intprintFloat:		fmul.s 		ft4, ft4, ft2		# ajusta o numero %
00000d42 : 08727253;   % 1011: 			fsub.s		ft4, ft4, ft7		# tira 0.5, dessa forma sempre ao converter estaremos fazendo floor %
00000d43 : c00272d3;   % 1012: 		  	fcvt.w.s	t0, ft4			# coloca floor de ft4 em t0 %
00000d44 : 00727253;   % 1013: 			fadd.s		ft4, ft4, ft7		# readiciona 0.5 %
00000d45 : 03028293;   % 1014: 		  	addi 		t0, t0, 48		# converte para ascii %
00000d46 : 00540023;   % 1015: 		  	sb 		t0, 0(s0)		# coloca no buffer %
00000d47 : 00140413;   % 1016: 		  	addi 		s0, s0, 1		# incrementta o buffer %
00000d48 : 02e00293;   % 1019: 		  	li 	t0, '.'				# carrega o '.' %
00000d49 : 00540023;   % 1020: 		  	sb 	t0, 0(s0)			# coloca no buffer %
00000d4a : 00140413;   % 1021: 		  	addi 	s0, s0, 1			# incrementa o buffer %
00000d4b : 00800313;   % 1024: 		  	li 		t1, 8				# contador de digitos  -  8 casas decimais %
00000d4c : 04030063;   % 1025: loopfracprintFloat:  	beq 		t1, zero, fimfracprintFloat	# fim dos digitos? %
00000d4d : 08727253;   % 1026: 			fsub.s		ft4, ft4, ft7			# tira 0.5 %
00000d4e : c0027f53;   % 1027: 			fcvt.w.s 	t5, ft4				# floor de ft4 %
00000d4f : 00727253;   % 1028: 			fadd.s		ft4, ft4, ft7			# readiciona 0.5 %
00000d50 : d00f72d3;   % 1029: 			fcvt.s.w	ft5, t5				# reconverte em float so com a parte inteira %
00000d51 : 085272d3;   % 1030: 		  	fsub.s 		ft5, ft4, ft5			# parte fracionaria %
00000d52 : 1062f2d3;   % 1031: 		  	fmul.s 		ft5, ft5, ft6			# mult x 10 %
00000d53 : 0872f2d3;   % 1032: 			fsub.s		ft5, ft5, ft7			# tira 0.5 %
00000d54 : c002f2d3;   % 1033: 			fcvt.w.s	t0, ft5				# coloca floor de ft5 em 10 %
00000d55 : 03028293;   % 1034: 		  	addi 		t0, t0, 48			# converte para ascii %
00000d56 : 00540023;   % 1035: 		  	sb 		t0, 0(s0)			# coloca no buffer %
00000d57 : 00140413;   % 1036: 		  	addi 		s0, s0, 1			# incrementa endereco %
00000d58 : fff30313;   % 1037: 		  	addi 		t1, t1, -1			# decrementa contador %
00000d59 : 0072f2d3;   % 1038: 			fadd.s		ft5, ft5, ft7			# reincrementa 0.5 %
00000d5a : 20528253;   % 1039: 		  	fmv.s 		ft4, ft5			# coloca o numero em ft4 %
00000d5b : fc5ff06f;   % 1040: 		  	j 		loopfracprintFloat		# volta ao loop %
00000d5c : 04500293;   % 1043: fimfracprintFloat: 	li 	t0,'E'			# carrega 'E' %
00000d5d : 00540023;   % 1044: 			sb 	t0, 0(s0)		# coloca no buffer %
00000d5e : 00140413;   % 1045: 			addi 	s0, s0, 1		# incrementa endereco %
00000d5f : 02b00293;   % 1048: 		  	li 	t0, '+'				# carrega '+' %
00000d60 : 000e8463;   % 1049: 		  	beqz 	t4, expposprintFloat		# nao eh negativo? %
00000d61 : 02d00293;   % 1050: 		  	li 	t0, '-'				# carrega '-' %
00000d62 : 00540023;   % 1051: expposprintFloat: 	sb 	t0, 0(s0)			# coloca no buffer %
00000d63 : 00140413;   % 1052: 		  	addi 	s0, s0, 1			#incrementa endereco %
00000d64 : 00a00313;   % 1055: 			li 	t1, 10				# carrega 10	 %
00000d65 : c001f253;   % 1056: 			fcvt.w.s  tp, ft3			# passa ft3 para t0 %
00000d66 : 026242b3;   % 1057: 			div 	t0, tp, t1			# divide por 10 (dezena) %
00000d67 : 026263b3;   % 1058: 			rem	t2, tp, t1			# t0 = quociente, t2 = resto %
00000d68 : 03028293;   % 1059: 			addi 	t0, t0, 48			# converte para ascii %
00000d69 : 00540023;   % 1060: 			sb 	t0, 0(s0)			# coloca no buffer %
00000d6a : 03038393;   % 1061: 			addi 	t2, t2, 48			# converte para ascii %
00000d6b : 007400a3;   % 1062: 			sb 	t2, 1(s0)			# coloca no buffer %
00000d6c : 00040123;   % 1063: 			sb 	zero, 2(s0)			# insere \NULL da string %
00000d6d : 0fcc8517;   % 1064: 			la 	a0, TempBuffer			# endereco do Buffer										 %
00000d6e : 0a050513;   % 1064:  %
00000d6f : 0500006f;   % 1065: 	  		j 	fimprintFloat			# imprime a string %
00000d70 : 00030e63;   % 1067: ehExp0printFloat: 	beq 	t1, zero, eh0printFloat		# Verifica se eh zero %
00000d71 : 0fcc8517;   % 1069: ehDesnormprintFloat: 	la 	a0, NumDesnormP			# string numero desnormalizado positivo %
00000d72 : 2a350513;   % 1069:  %
00000d73 : 04048063;   % 1070: 			beq 	s1, zero, fimprintFloat		# o sinal eh 1? entao � negativo %
00000d74 : 0fcc8517;   % 1071: 		 	la 	a0, NumDesnormN			# string numero desnormalizado negativo %
00000d75 : 2a050513;   % 1071:  %
00000d76 : 0340006f;   % 1072: 			j 	fimprintFloat			# imprime a string %
00000d77 : 0fcc8517;   % 1074: eh0printFloat:		la 	a0, NumZero			# string do zero %
00000d78 : 29d50513;   % 1074:  %
00000d79 : 0280006f;   % 1075: 			j 	fimprintFloat 	 		# imprime a string %
00000d7a : 00030863;   % 1077: ehExp255printFloat: 	beq 	t1, zero, ehInfprintFloat	# se mantissa eh zero entao eh Infinito %
00000d7b : 0fcc8517;   % 1079: ehNaNprintfFloat:	la 	a0, NumNaN			# string do NaN %
00000d7c : 2ac50513;   % 1079:  %
00000d7d : 0180006f;   % 1080: 			j 	fimprintFloat			# imprime string %
00000d7e : 0fcc8517;   % 1082: ehInfprintFloat:	la 	a0, NumInfP			# string do infinito positivo %
00000d7f : 28c50513;   % 1082:  %
00000d80 : 00048663;   % 1083: 			beq 	s1, zero, fimprintFloat		# o sinal eh 1? entao eh negativo %
00000d81 : 0fcc8517;   % 1084: 			la 	a0, NumInfN			# string do infinito negativo %
00000d82 : 28a50513;   % 1084:  %
00000d83 : a29ff0ef;   % 1087: fimprintFloat:		jal 	printString			# imprime a string em a0 %
00000d84 : 00012083;   % 1088: 			lw 	ra, 0(sp)			# recupera ra %
00000d85 : 00410113;   % 1089: 			addi 	sp, sp, 4			# libera sepaco %
00000d86 : 00008067;   % 1090: 			ret					# retorna %
00000d87 : ffc10113;   % 1099: readFloat: addi sp, sp, -4			# aloca espaco %
00000d88 : 00112023;   % 1100: 	sw 	ra, 0(sp)			# salva ra %
00000d89 : 0fcc8517;   % 1101: 	la 	a0, TempBuffer			# endereco do FloatBuffer %
00000d8a : 03050513;   % 1101:  %
00000d8b : 02000593;   % 1102: 	li 	a1, 32				# numero maximo de caracteres %
00000d8c : bf9ff0ef;   % 1103: 	jal	readString			# le string, retorna a2 ultimo endereco e a3 numero de caracteres %
00000d8d : 00c00433;   % 1104: 	mv 	s0, a2				# ultimo endereco da string (antes do \0) %
00000d8e : 00d004b3;   % 1105: 	mv 	s1, a3				# numero de caracteres digitados %
00000d8f : 0fcc8b97;   % 1106: 	la	s7, TempBuffer			# Endereco do primeiro caractere %
00000d90 : 018b8b93;   % 1106:  %
00000d91 : 017002b3;   % 1108: lePrimeiroreadFloat:	mv 	t0, s7		# Endereco de Inicio %
00000d92 : 00028303;   % 1109: 	lb 	t1, 0(t0)				# le primeiro caractere %
00000d93 : 06500213;   % 1110: 	li	tp, 'e'					# TP = 101 = 'e' %
00000d94 : 02430863;   % 1111: 	beq 	t1, tp, insere0AreadFloat		# insere '0' antes %
00000d95 : 04500213;   % 1112: 	li 	tp, 'E'					# TP = 69 = 'E' %
00000d96 : 02430463;   % 1113: 	beq 	t1, tp, insere0AreadFloat		# insere '0' antes %
00000d97 : 02e00213;   % 1114: 	li	tp, '.'					# TP = 46 = '.' %
00000d98 : 02430063;   % 1115: 	beq 	t1, tp, insere0AreadFloat		#  insere '0' antes %
00000d99 : 02b00213;   % 1116: 	li	tp, '+'					# TP = 43 = '+' %
00000d9a : 00430863;   % 1117: 	beq 	t1, tp, pulaPrimreadChar		# pula o primeiro caractere %
00000d9b : 02d00213;   % 1118: 	li	tp, '-'					# TP = 45 = '-' %
00000d9c : 00430463;   % 1119: 	beq 	t1, tp, pulaPrimreadChar %
00000d9d : 03c0006f;   % 1120: 	j leUltimoreadFloat %
00000d9e : 001b8b93;   % 1122: pulaPrimreadChar: addi s7,s7,1			# incrementa o endereco inicial %
00000d9f : fc9ff06f;   % 1123: 		  j lePrimeiroreadFloat		# volta a testar o novo primeiro caractere %
00000da0 : 008002b3;   % 1125: insere0AreadFloat: mv t0, s0			# endereco do ultimo caractere %
00000da1 : 00140413;   % 1126: 		   addi s0, s0, 1		# desloca o ultimo endereco para o proximo %
00000da2 : 00148493;   % 1127: 	   	   addi s1, s1, 1		# incrementa o num. caracteres %
00000da3 : 000400a3;   % 1128: 	   	   sb 	zero, 1(s0)		# \NULL do final de string %
00000da4 : 01700f33;   % 1129: 	   	   mv t5, s7			# primeiro caractere %
00000da5 : 01e28a63;   % 1130: insere0Aloop:	   beq 	t0, t5, saiinsere0AreadFloat	# chegou no inicio entao fim %
00000da6 : 00028303;   % 1131: 		   lb 	t1, 0(t0)		# le caractere %
00000da7 : 006280a3;   % 1132: 		   sb 	t1, 1(t0)		# escreve no proximo %
00000da8 : fff28293;   % 1133: 		   addi t0, t0, -1		# decrementa endereco %
00000da9 : ff1ff06f;   % 1134: 		   j insere0Aloop		# volta ao loop %
00000daa : 03000313;   % 1135: saiinsere0AreadFloat: li t1, '0'		# ascii '0' %
00000dab : 00628023;   % 1136: 		   sb t1, 0(t0)			# escreve '0' no primeiro caractere %
00000dac : 00040303;   % 1138: leUltimoreadFloat: lb  	t1, 0(s0)			# le ultimo caractere %
00000dad : 06500213;   % 1139: 		li	tp, 'e'				# TP = 101 = 'e' %
00000dae : 00430c63;   % 1140: 		beq 	t1, tp, insere0PreadFloat	# insere '0' depois %
00000daf : 04500213;   % 1141: 		li 	tp, 'E'				# TP = 69 = 'E' %
00000db0 : 00430863;   % 1142: 		beq 	t1, tp, insere0PreadFloat	# insere '0' depois %
00000db1 : 02e00213;   % 1143: 		li	tp, '.'				# TP = 46 = '.' %
00000db2 : 00430463;   % 1144: 		beq 	t1, tp, insere0PreadFloat	# insere '0' depois %
00000db3 : 0180006f;   % 1145: 		j 	inicioreadFloat %
00000db4 : 00140413;   % 1147: insere0PreadFloat: addi	s0, s0, 1		# desloca o ultimo endereco para o proximo %
00000db5 : 00148493;   % 1148: 	   	   addi	s1, s1, 1		# incrementa o num. caracteres %
00000db6 : 03000313;   % 1149: 		   li 	t1,'0'			# ascii '0' %
00000db7 : 00640023;   % 1150: 		   sb 	t1,0(s0)		# escreve '0' no ultimo %
00000db8 : 000400a3;   % 1151: 		   sb 	zero,1(s0)		# \null do final de string %
00000db9 : d0007553;   % 1153: inicioreadFloat:  fcvt.s.w 	fa0, zero	# fa0 Resultado inicialmente zero %
00000dba : 00a00293;   % 1154: 		li 	t0, 10			# inteiro 10	 %
00000dbb : d002f353;   % 1155: 		fcvt.s.w 	ft6, t0		# ft6 contem sempre o numero cte 10.0000 %
00000dbc : 00100293;   % 1156: 		li 	t0, 1			# inteiro 1 %
00000dbd : d002f0d3;   % 1157: 		fcvt.s.w 	ft1, t0		# ft1 contem sempre o numero cte 1.0000	 %
00000dbe : 00140993;   % 1160: procuraEreadFloat:	addi 	s3, s0, 1			# inicialmente nao tem 'e' ou 'E' na string (fora da string) %
00000dbf : 017002b3;   % 1161: 			mv 	t0, s7				# endereco inicial %
00000dc0 : 02828263;   % 1162: loopEreadFloat: 	beq 	t0, s0, naotemEreadFloat	# sai se nao encontrou 'e' %
00000dc1 : 00028303;   % 1163: 			lb 	t1, 0(t0)			# le o caractere %
00000dc2 : 06500213;   % 1164: 			li	tp, 'e'				# TP = 101 = 'e' %
00000dc3 : 00430a63;   % 1165: 			beq 	t1, tp, ehEreadFloat		# tem 'e' %
00000dc4 : 04500213;   % 1166: 			li 	tp, 'E'				# TP = 69 = 'E' %
00000dc5 : 00430663;   % 1167: 			beq	t1, tp, ehEreadFloat		# tem 'E' %
00000dc6 : 00128293;   % 1168: 			addi 	t0, t0, 1			# incrementa endereco %
00000dc7 : fe5ff06f;   % 1169: 			j 	loopEreadFloat			# volta ao loop %
00000dc8 : 005009b3;   % 1170: ehEreadFloat: 		mv 	s3, t0				# endereco do 'e' ou 'E' na string %
00000dc9 : 01300933;   % 1174: procuraPontoreadFloat:	mv 	s2, s3				# local inicial do ponto na string (='e' se existir) ou fora da string	 %
00000dca : 017002b3;   % 1175: 			mv 	t0, s7				# endereco inicial %
00000dcb : 00828e63;   % 1176: loopPontoreadFloat: 	beq 	t0, s0, naotemPontoreadFloat	# sai se nao encontrou '.' %
00000dcc : 00028303;   % 1177: 			lb 	t1, 0(t0)			# le o caractere %
00000dcd : 02e00213;   % 1178: 			li	tp, '.'				# TP = 46 = '.' %
00000dce : 00430663;   % 1179: 			beq 	t1, tp, ehPontoreadFloat	# tem '.' %
00000dcf : 00128293;   % 1180: 			addi 	t0, t0, 1			# incrementa endereco %
00000dd0 : fedff06f;   % 1181: 			j 	loopPontoreadFloat		# volta ao loop %
00000dd1 : 00500933;   % 1182: ehPontoreadFloat: 	mv 	s2, t0				# endereco do '.' na string %
00000dd2 : d0007153;   % 1186: intreadFloat:		fcvt.s.w 	ft2, zero		# zera parte inteira %
00000dd3 : fff90293;   % 1187: 			addi 	t0, s2, -1			# endereco do caractere antes do ponto %
00000dd4 : 201081d3;   % 1188: 			fmv.s 	ft3, ft1			# ft3 contem unidade/dezenas/centenas		 %
00000dd5 : 01700f33;   % 1189: 			mv 	t5, s7				# Primeiro Endereco %
00000dd6 : 03e2ca63;   % 1190: loopintreadFloat: 	blt 	t0, t5, fimintreadFloat		# sai se o enderefo for < inicio da string %
00000dd7 : 00028303;   % 1191: 			lb 	t1, 0(t0)			# le o caracter %
00000dd8 : 03000213;   % 1192: 			li	tp, '0'				# TP = 48 = '0' %
00000dd9 : 10434863;   % 1193: 			blt 	t1, tp, erroreadFloat		# nao eh caractere valido para numero %
00000dda : 03900213;   % 1194: 			li	tp, '9'				# TP = 57 = '9' %
00000ddb : 10624463;   % 1195: 			bgt 	t1, tp, erroreadFloat		# nao eh caractere valido para numero %
00000ddc : fd030313;   % 1196: 			addi 	t1, t1, -48			# converte ascii para decimal %
00000ddd : d0037153;   % 1197: 			fcvt.s.w  ft2, t1			# digito lido em float %
00000dde : 10317153;   % 1199: 			fmul.s 	ft2,ft2,ft3			# multiplcica por un/dezena/centena %
00000ddf : 00257553;   % 1200: 			fadd.s 	fa0,fa0,ft2			# soma no resultado %
00000de0 : 1061f1d3;   % 1201: 			fmul.s 	ft3,ft3,ft6			# proxima dezena/centena %
00000de1 : fff28293;   % 1203: 			addi 	t0,t0,-1			# endereco anterior %
00000de2 : fd1ff06f;   % 1204: 			j 	loopintreadFloat		# volta ao loop %
00000de3 : d0007153;   % 1208: fracreadFloat:		fcvt.s.w 	ft2, zero		# zera parte fracionaria %
00000de4 : 00190293;   % 1209: 			addi 	t0, s2, 1			# endereco depois do ponto %
00000de5 : 1860f1d3;   % 1210: 			fdiv.s 	ft3, ft1, ft6			# ft3 inicial 0.1 %
00000de6 : 0332da63;   % 1212: loopfracreadFloat: 	bge 	t0, s3, fimfracreadFloat	# endereco eh 'e' 'E' ou >ultimo %
00000de7 : 00028303;   % 1213: 			lb 	t1, 0(t0)			# le o caracter %
00000de8 : 03000213;   % 1214: 			li	tp, '0'				# TP = 48 = '0' %
00000de9 : 0c434863;   % 1215: 			blt 	t1, tp, erroreadFloat		# nao eh valido %
00000dea : 03900213;   % 1216: 			li	tp, '9'				# TP = 57 = '9' %
00000deb : 0c624463;   % 1217: 			bgt 	t1, tp, erroreadFloat		# nao eh valido %
00000dec : fd030313;   % 1218: 			addi 	t1, t1, -48			# converte ascii para decimal %
00000ded : d0037153;   % 1219: 			fcvt.s.w 	ft2, t1			# digito lido em float		 %
00000dee : 10317153;   % 1221: 			fmul.s 	ft2, ft2, ft3			# multiplica por ezena/centena %
00000def : 00257553;   % 1222: 			fadd.s 	fa0, fa0, ft2			# soma no resultado %
00000df0 : 1861f1d3;   % 1223: 			fdiv.s 	ft3, ft3, ft6			# proxima frac un/dezena/centena %
00000df1 : 00128293;   % 1225: 			addi 	t0, t0, 1			# proximo endereco %
00000df2 : fd1ff06f;   % 1226: 			j 	loopfracreadFloat		# volta ao loop		 %
00000df3 : d0007153;   % 1230: potreadFloat:		fcvt.s.w 	ft2, zero		# zera potencia %
00000df4 : 00198293;   % 1231: 			addi 	t0, s3, 1			# endereco seguinte ao 'e' %
00000df5 : 00000a13;   % 1232: 			li 	s4, 0				# sinal do expoente positivo %
00000df6 : 00028303;   % 1233: 			lb 	t1, 0(t0)			# le o caractere seguinte ao 'e' %
00000df7 : 02d00213;   % 1234: 			li	tp, '-'				# TP = 45 = '-' %
00000df8 : 00430863;   % 1235: 			beq	t1, tp, potsinalnegreadFloat	# sinal do expoente esta escrito e eh positivo %
00000df9 : 02b00213;   % 1236: 			li	tp, '+'				# TP = 43 = '+' %
00000dfa : 00430663;   % 1237: 			beq 	t1, tp, potsinalposreadFloat	# sinal do expoente eh negativo %
00000dfb : 00c0006f;   % 1238: 			j 	pulapotsinalreadFloat		# nao esta escrito o sinal do expoente %
00000dfc : 00100a13;   % 1239: potsinalnegreadFloat:	li 	s4, 1				# s4=1 expoente negativo %
00000dfd : 00128293;   % 1240: potsinalposreadFloat:	addi 	t0, t0, 1			# se tiver '-' ou '+' avanca para o proximo endereco %
00000dfe : 00500ab3;   % 1241: pulapotsinalreadFloat:	mv 	s5, t0 				# Neste ponto s5 contem o endereco do primeiro digito da pot e s4 o sinal do expoente		 %
00000dff : 201081d3;   % 1243: 			fmv.s 	ft3, ft1			# ft3 un/dez/cen = 1 %
00000e00 : 00000393;   % 1246: expreadFloat:		li 	t2, 0				# zera expoente %
00000e01 : 008002b3;   % 1247: 			mv 	t0, s0				# endereco do ultimo caractere da string %
00000e02 : 00a00e13;   % 1248: 			li 	t3, 10				# numero dez %
00000e03 : 00100e93;   % 1249: 			li 	t4, 1				# und/dez/cent %
00000e04 : 0352c063;   % 1251: loopexpreadFloat:	blt 	t0, s5, fimexpreadFloat		# ainda nao eh o endereco do primeiro digito? %
00000e05 : 00028303;   % 1252: 			lb 	t1, 0(t0)			# le o caracter %
00000e06 : fd030313;   % 1253: 			addi 	t1, t1, -48			# converte ascii para decimal %
00000e07 : 03d30333;   % 1254: 			mul 	t1, t1, t4			# mul digito %
00000e08 : 006383b3;   % 1255: 			add 	t2, t2, t1			# soma ao exp %
00000e09 : 03ce8eb3;   % 1256: 			mul 	t4, t4, t3			# proxima casa decimal %
00000e0a : fff28293;   % 1257: 			addi 	t0, t0, -1			# endereco anterior %
00000e0b : fe5ff06f;   % 1258: 			j loopexpreadFloat			# volta ao loop %
00000e0c : 20108153;   % 1262: 			fmv.s 	ft2, ft1			# numero 10^exp  inicial=1 %
00000e0d : 206301d3;   % 1263: 			fmv.s 	ft3, ft6			# se o sinal for + ft3 eh 10 %
00000e0e : 00000213;   % 1264: 			li	tp, 0x00000000			# TP = ZERO %
00000e0f : 004a0463;   % 1265: 			beq 	s4, tp, sinalexpPosreadFloat	# se sinal exp positivo %
00000e10 : 1860f1d3;   % 1266: 			fdiv.s 	ft3, ft1, ft6			# se o final for - ft3 eh 0.1 %
00000e11 : 00000293;   % 1267: sinalexpPosreadFloat:	li 	t0, 0				# contador  %
00000e12 : 00728863;   % 1268: sinalexpreadFloat: 	beq 	t0, t2, fimsinalexpreadFloat	# se chegou ao fim %
00000e13 : 10317153;   % 1269: 			fmul.s 	ft2, ft2, ft3			# multiplica pelo fator 10 ou 0.1 %
00000e14 : 00128293;   % 1270: 			addi 	t0, t0, 1			# incrementa o contador %
00000e15 : ff5ff06f;   % 1271: 			j 	sinalexpreadFloat %
00000e16 : 10257553;   % 1274: 		fmul.s 	fa0, fa0, ft2		# multiplicacao final! %
00000e17 : 0fcc8297;   % 1276: 		la 	t0, TempBuffer		# ajuste final do sinal do numero %
00000e18 : df828293;   % 1276:  %
00000e19 : 00028303;   % 1277: 		lb 	t1, 0(t0)		# le primeiro caractere %
00000e1a : 02d00213;   % 1278: 		li	tp, '-'			# TP = 45 = '-' %
00000e1b : 00431463;   % 1279: 		bne 	t1, tp, fimreadFloat	# nao eh '-' entao fim %
00000e1c : 20a51553;   % 1280: 		fneg.s 	fa0, fa0		# nega o numero float %
00000e1d : 00012083;   % 1283: fimreadFloat: 	lw 	ra, 0(sp)		# recupera ra %
00000e1e : 00410113;   % 1284: 		addi 	sp, sp, 4		# libera espaco %
00000e1f : 00008067;   % 1285: 		ret				# retorna %
00000e20 : 10008237;   % 1293: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
00000e21 : 00020213;   % 1293:  %
00000e22 : 00419863;   % 1293: <4> bne gp,tp,timeDE2 %
00000e23 : 01e00893;   % 1294: 	li 	a7,30				# Chama o ecall do Rars %
00000e24 : 00000073;   % 1295: 	ecall %
00000e25 : 0140006f;   % 1296: 	j 	fimTime				# saida %
00000e26 : ff2002b7;   % 1298: timeDE2: 	li 	t0, 0xFF200510		# carrega endereco do TopWatch %
00000e27 : 51028293;   % 1298:  %
00000e28 : 0002a503;   % 1299: 	 	lw 	a0, 0(t0)		# carrega o valor do contador de ms %
00000e29 : 00000593;   % 1300: 	 	li 	a1, 0x0000		# contador eh de 32 bits %
00000e2a : 00008067;   % 1301: fimTime: 	ret				# retorna %
00000e2b : 10008237;   % 1308: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
00000e2c : 00020213;   % 1308:  %
00000e2d : 00419863;   % 1308: <4> bne gp,tp,sleepDE2 %
00000e2e : 02000893;   % 1309: 	li 	a7, 32				# Chama o ecall do Rars %
00000e2f : 00000073;   % 1310: 	ecall			 %
00000e30 : 01c0006f;   % 1311: 	j 	fimSleep			# Saida %
00000e31 : ff2002b7;   % 1313: sleepDE2:	li 	t0, 0xFF200510		# endereco StopWatch %
00000e32 : 51028293;   % 1313:  %
00000e33 : 0002a303;   % 1314: 		lw 	t1, 0(t0)		# carrega o contador de ms %
00000e34 : 006503b3;   % 1315: 		add 	t2, a0, t1		# soma com o tempo solicitado pelo usuario %
00000e35 : 0002a303;   % 1317: LoopSleep: 	lw 	t1, 0(t0)		# carrega o contador de ms %
00000e36 : fe734ee3;   % 1318: 		blt 	t1, t2, LoopSleep	# nao chegou ao fim volta ao loop %
00000e37 : 00008067;   % 1320: fimSleep: 	ret				# retorna %
00000e38 : 10008237;   % 1327: <3> li tp, 0x10008000			# carrega tp = 0x10008000 %
00000e39 : 00020213;   % 1327:  %
00000e3a : 00419863;   % 1327: <4> bne gp,tp,randomDE2 %
00000e3b : 02900893;   % 1328: 	li 	a7,41			# Chama o ecall do Rars %
00000e3c : 00000073;   % 1329: 	ecall	 %
00000e3d : 0100006f;   % 1330: 	j 	fimRandom		# saida %
00000e3e : ff2002b7;   % 1332: randomDE2: 	li 	t0, 0xFF200514	# carrega endereco do LFSR %
00000e3f : 51428293;   % 1332:  %
00000e40 : 0002a503;   % 1333: 		lw 	a0, 0(t0)	# le a word em a0 %
00000e41 : 00008067;   % 1335: fimRandom:	ret			# retorna %
00000e42 : ff000337;   % 1344: clsCLS:	li      t1, 0xFF000000           # Memoria VGA %
00000e43 : 00030313;   % 1344:  %
00000e44 : ff0133b7;   % 1345:    	li      t2, 0xFF012C00 %
00000e45 : c0038393;   % 1345:  %
00000e46 : 0ff57513;   % 1346:     	andi    a0, a0, 0x00FF %
00000e47 : 010102b7;   % 1347:     	li 	t0, 0x01010101 %
00000e48 : 10128293;   % 1347:  %
00000e49 : 02a28533;   % 1348:     	mul	a0, t0, a0 %
00000e4a : 00730863;   % 1350: forCLS:	beq     t1, t2, fimCLS %
00000e4b : 00a32023;   % 1351: 	sw      a0, 0(t1) %
00000e4c : 00430313;   % 1352:     	addi    t1, t1, 4 %
00000e4d : ff5ff06f;   % 1353:     	j       forCLS %
00000e4e : 00008067;   % 1355: fimCLS:	ret %
END;
